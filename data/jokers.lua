SMODS.Atlas{
    key = "srl_jokers",
    path = "srl_jokers.png",
    px = 71,
    py = 95
}

--- Ebony Ent ---

SMODS.Joker{
	key = "ebony_ent",
	name = "Ebony Ent",
	rarity = 1,
	pos = {x = 0, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Ent", effect = 1, effect_name = "Mending"}},
	loc_vars = function(self, info_queue, card)
		info_queue[#info_queue+1] = SRL_FUNC.eff_iq("Mending", card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "effect")}}
	end,
	calculate = function(self, card, context)
		if context.ending_shop then
			for _, v in ipairs(G.jokers.cards) do
				if not v.debuff then
					SRL_FUNC.set_effect(v, "Mending", SRL_FUNC.mod_val(card, "effect"))
				end
			end
		end
	end,
	in_pool = function()
		return true
	end,
    atlas = "srl_jokers"
}

SRL_MOD.modded_jokers = {}
SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ebony_ent"
SRL_MOD.modded_jokers_nature = {}
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ebony_ent"
SRL_MOD.modded_jokers_ent = {}
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_ebony_ent"

--- Hemlock Ent ---

SMODS.Joker{
	key = "hemlock_ent",
	name = "Hemlock Ent",
	rarity = 1,
	pos = {x = 1, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Ent", buff_all = 2}},
	loc_vars = function(self, info_queue, card)
		info_queue[#info_queue+1] = SRL_FUNC.eff_iq("Mending", card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "buff_all")}}
	end,
	srl_buff_target_filter = function(target)
        return SRL_FUNC.get_effect_name(target) == "Mending"
    end,
	in_pool = function()
		if SRL_MOD.srl_pool_req then
			local effect = SRL_FUNC.get_extra_val("effect_name")
			return effect and effect == "Mending"
		end
		return true
	end,
    atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hemlock_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_hemlock_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_hemlock_ent"

--- Elder Ent ---

SMODS.Joker{
	key = "elder_ent",
	name = "Elder Ent",
	rarity = 1,
	pos = {x = 2, y = 0},
	cost = 4,
	blueprint_compat = true,
	config = {extra = {srl_class = "Nature", srl_race = "Ent", blind = 0.1}},
	loc_vars = function(self, info_queue, card)
		info_queue[#info_queue+1] = SRL_FUNC.eff_iq("Mending", card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "blind")}}
	end,
	calculate = function(self, card, context)
		if context.cardarea == G.jokers and context.after then
			for _, v in ipairs(G.jokers.cards) do
				if not v.debuff and SRL_FUNC.get_effect_name(v) == "Mending" then
					v:calculate_effect(context, true)
				end
			end
		end
	end,
	in_pool = function()
		if SRL_MOD.srl_pool_req then
			local effect = SRL_FUNC.get_extra_val("effect_name")
			return effect and effect == "Mending"
		end
		return true
	end,
    atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elder_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elder_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_elder_ent"

--- Efflorescent Ent ---

SMODS.Joker{
	key = "efflorescent_ent",
	name = "Efflorescent Ent",
	rarity = 1,
	pos = {x = 3, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Ent", blind = 2.5}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "blind"), SRL_FUNC.mod_val(card, "blind", SRL_FUNC.count_effect("Mending"))}}
	end,
	calculate = function(self, card, context)
		if context.setting_blind and SRL_FUNC.no_bp_retrigger(context) then
			SRL_FUNC.lower_blind_req(card, SRL_FUNC.mod_val(card, "blind", SRL_FUNC.count_effect("Mending")))
		end
	end,
	in_pool = function()
		if SRL_MOD.srl_pool_req then
			local effect = SRL_FUNC.get_extra_val("effect_name")
			return effect and effect == "Mending"
		end
		return true
	end,
    atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_efflorescent_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_efflorescent_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_efflorescent_ent"

--- Ashwood Ent ---

SMODS.Joker{
	key = "ashwood_ent",
	name = "Ashwood Ent",
	rarity = 1,
	pos = {x = 4, y = 0},
	cost = 4,
	blueprint_compat = true,
	config = {extra = {srl_class = "Nature", srl_race = "Ent", chips = 35, mult = 10}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "chips"), SRL_FUNC.mod_val(card, "mult")}}
	end,
	calculate = function(self, card, context)
		if context.joker_main and G.GAME.current_round.hands_played > 0 then
			return {
				chips = SRL_FUNC.mod_val(card, "chips"),
				extra = {
					mult = SRL_FUNC.mod_val(card, "mult"),
				}
			}
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ashwood_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ashwood_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_ashwood_ent"

--- Timeworn Ent ---

SMODS.Joker{
	key = "timeworn_ent",
	name = "Timeworn Ent",
	rarity = 1,
	pos = {x = 5, y = 0},
	cost = 4,
	blueprint_compat = true,
	config = {extra = {srl_class = "Nature", srl_race = "Ent", chips_score = 10, prev_score = 0, score = 0}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "chips_score"), card.ability.extra.score}}
	end,
	calculate = function(self, card, context)
		if context.srl_pre_after and SRL_FUNC.no_bp_retrigger(context) then
			card.ability.extra.score = SRL_FUNC.num_mod(SRL_FUNC.mod_val(card, "chips_score"), card.ability.extra.score_mod)
		end
		if context.cardarea == G.jokers and context.after and SRL_FUNC.no_bp_retrigger(context) then
			card.ability.extra.prev_score = card.ability.extra.score
		end
		if context.final_scoring_step and card.ability.extra.prev_score ~= 0 then
			return {
				func = function()
					local extra_chips = card.ability.extra.prev_score
					G.E_MANAGER:add_event(Event({
						func = function()
							G.GAME.chips = G.GAME.chips + extra_chips
						return true
					end}))
					card_eval_status_text(card, 'extra', nil, nil, nil, {
						message = localize{type='variable',key='a_chips',vars={card.ability.extra.prev_score}},
						colour = G.C.PURPLE
					})
				end
			}
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_timeworn_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_timeworn_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_timeworn_ent"

--- Diamond Paragon ---

SMODS.Joker{
	key = "diamond_paragon",
	name = "Diamond Paragon",
	rarity = 1,
	pos = {x = 6, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Paragon", buff_all = 1.5}},
	loc_vars = function(self, info_queue, card)
		info_queue[#info_queue+1] = {key = "srl_undefined_class_orb", set = "Other"}
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "buff_all")}}
	end,
	srl_buff_target_filter = function(target)
        return target.ability and target.ability.srl_class_orb
    end,
	in_pool = function()
		if SRL_MOD.srl_pool_req then
			if G.jokers and G.jokers.cards then
				for _, v in ipairs(G.jokers.cards) do
					if SRL_FUNC.get_spell_gem(v) then
						return true
					end
				end
			end
			return false
		end
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diamond_paragon"
SRL_MOD.modded_jokers_life = {}
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_diamond_paragon"
SRL_MOD.modded_jokers_paragon = {}
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_diamond_paragon"

--- Emerald Paragon ---

SMODS.Joker{
	key = "emerald_paragon",
	name = "Emerald Paragon",
	rarity = 1,
	pos = {x = 7, y = 0},
	cost = 4,
	blueprint_compat = true,
	config = {extra = {srl_class = "Life", srl_race = "Paragon", xmult = 1.25}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "xmult")}}
	end,
	calculate = function(self, card, context)
		if context.other_joker and SRL_FUNC.is_creature(context.other_joker) then
            return {
                xmult = SRL_FUNC.mod_val(card, "xmult"),
				message_card = context.other_joker
            }
        end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_emerald_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_emerald_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_emerald_paragon"

--- Ruby Paragon ---

SMODS.Joker{
	key = "ruby_paragon",
	name = "Ruby Paragon",
	rarity = 1,
	pos = {x = 8, y = 0},
	cost = 4,
	blueprint_compat = true,
	config = {extra = {srl_class = "Life", srl_race = "Paragon", blind = 1}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "blind"), SRL_FUNC.mod_val(card, "blind", SRL_FUNC.count_creature())}}
	end,
	calculate = function(self, card, context)
		if context.setting_blind and SRL_FUNC.no_bp_retrigger(context) then
			SRL_FUNC.lower_blind_req(card, SRL_FUNC.mod_val(card, "blind", SRL_FUNC.count_creature()))
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ruby_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_ruby_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_ruby_paragon"

--- Sapphire Paragon ---

SMODS.Joker{
	key = "sapphire_paragon",
	name = "Sapphire Paragon",
	rarity = 1,
	pos = {x = 9, y = 0},
	cost = 4,
	blueprint_compat = true,
	config = {extra = {srl_class = "Life", srl_race = "Paragon", chips = 30}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "chips")}}
	end,
	calculate = function(self, card, context)
		if context.other_joker and SRL_FUNC.is_creature(context.other_joker) then
            return {
                chips = SRL_FUNC.mod_val(card, "chips"),
				message_card = context.other_joker
            }
        end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sapphire_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sapphire_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_sapphire_paragon"

--- Topaz Paragon ---

SMODS.Joker{
	key = "topaz_paragon",
	name = "Topaz Paragon",
	rarity = 1,
	pos = {x = 10, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Paragon", dollars = 2}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "dollars"), SRL_FUNC.mod_val(card, "dollars", SRL_FUNC.count_creature())}}
	end,
	calc_dollar_bonus = function(self, card)
        if G.GAME.current_round.hands_played == 1 then
			return SRL_FUNC.mod_val(card, "dollars", SRL_FUNC.count_creature())
		end
    end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_topaz_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_topaz_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_topaz_paragon"

--- Blood Reaper ---

SMODS.Joker{
	key = "blood_reaper",
	name = "Blood Reaper",
	rarity = 1,
	pos = {x = 11, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Reaper", dollars = 15, active = false}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "dollars")}}
	end,
	calc_dollar_bonus = function(self, card)
        if card.ability.extra.active then
			card.ability.extra.active = false
			return SRL_FUNC.mod_val(card, "dollars")
		end
    end,
	calculate = function(self, card, context)
		if context.end_of_round and context.main_eval and SRL_FUNC.no_bp_retrigger(context) then
            if G.GAME.blind.boss then
				card.ability.extra.active = true
			end
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blood_reaper"
SRL_MOD.modded_jokers_death = {}
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_blood_reaper"
SRL_MOD.modded_jokers_reaper = {}
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_blood_reaper"

--- Bone Reaper ---

SMODS.Joker{
	key = "bone_reaper",
	name = "Bone Reaper",
	rarity = 1,
	pos = {x = 12, y = 0},
	cost = 4,
	eternal_compat = false,
	config = {extra = {srl_class = "Death", srl_race = "Reaper", buff_all = 2}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "buff_all")}}
	end,
	calculate = function(self, card, context)
		if context.selling_self and SRL_FUNC.no_bp_retrigger(context) then
			local buffable_jokers = {}
			for _, v in ipairs(G.jokers.cards or {}) do
				if v ~= card and SRL_FUNC.can_receive_buff(v) then buffable_jokers[#buffable_jokers + 1] = v end
			end
			if buffable_jokers[1] then
				local selected_joker = pseudorandom_element(buffable_jokers, pseudoseed('srl_bone_reaper'))
				selected_joker.ability.srl_passive_buff_all = (selected_joker.ability.srl_passive_buff_all or 0) + SRL_FUNC.mod_val(card, "buff_all")
				selected_joker:juice_up(0.3, 0.5)
				card_eval_status_text(selected_joker, 'extra', nil, nil, nil, {
					message = localize('k_srl_buffed_ex'),
					colour = G.C.FILTER
				})
			end
		end
	end,
	in_pool = function()
		if SRL_MOD.srl_pool_req then
			if G.jokers and G.jokers.cards then
				for _, v in ipairs(G.jokers.cards or {}) do
					if SRL_FUNC.can_receive_buff(v) then return true end
				end
			end
			return false
		end
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bone_reaper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_bone_reaper"
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_bone_reaper"

--- Soul Reaper ---

SMODS.Joker{
	key = "soul_reaper",
	name = "Soul Reaper",
	rarity = 1,
	pos = {x = 13, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Reaper", req_amount = 5}},
	loc_vars = function(self, info_queue, card)
		info_queue[#info_queue + 1] = G.P_CENTERS["c_soul"]
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		card.ability.extra.req_amount}}
	end,
	calculate = function(self, card, context)
		if context.selling_card and SRL_FUNC.no_bp_retrigger(context) then
			if context.card.ability.set and context.card.ability.set == "Joker" then
				if context.card.config.center.rarity == 3 or context.card.config.center.rarity == "Rare" then
					card.ability.extra.req_amount = card.ability.extra.req_amount - 1
					if card.ability.extra.req_amount <= 0 then
						if #G.consumeables.cards + G.GAME.consumeable_buffer < G.consumeables.config.card_limit then
							G.GAME.consumeable_buffer = G.GAME.consumeable_buffer + 1
							G.E_MANAGER:add_event(Event({
								func = (function()
									G.E_MANAGER:add_event(Event({
										func = function()
											SMODS.add_card({ key = "c_soul" })
											return true
										end
									}))
									card_eval_status_text(card, 'extra', nil, nil, nil, { message = localize('k_plus_spectral'), colour = G.C.SECONDARY_SET.Spectral })
									SMODS.destroy_cards(card, true, true)
									return true
								end)
							}))
						end
					else
						G.E_MANAGER:add_event(Event({
							func = function()
							card_eval_status_text(card, 'extra', nil, nil, nil, { message = { '' .. card.ability.extra.req_amount }, colour = G.C.FILTER })
							return true
							end
						}))
					end
				end
			end
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soul_reaper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_soul_reaper"
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_soul_reaper"

--- Shadow Reaper ---

SMODS.Joker{
	key = "shadow_reaper",
	name = "Shadow Reaper",
	rarity = 1,
	pos = {x = 14, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Reaper"}},
	loc_vars = function(self, info_queue, card)
		SRL_FUNC.ed_iq(card, info_queue, "negative")
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))}
		}}
	end,
	calculate = function(self, card, context)
		if context.selling_self and SRL_FUNC.no_bp_retrigger(context) then
			local editionless_jokers = SMODS.Edition:get_edition_cards(G.jokers, true)
			local eligible_card = nil
			if next(editionless_jokers) then
				local eligible_card = pseudorandom_element(editionless_jokers, 'srl_shadow_reaper')
			elseif G.jokers.cards and G.jokers.cards[1] then
				local eligible_card = pseudorandom_element(G.jokers.cards, 'srl_shadow_reaper')
			end
			if eligible_card then eligible_card:set_edition('e_negative', true) end
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_reaper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_reaper"
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_shadow_reaper"

--- Cursed Reaper ---

SMODS.Joker{
	key = "cursed_reaper",
	name = "Cursed Reaper",
	rarity = 1,
	pos = {x = 15, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Reaper", blind = 25}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "blind")}}
	end,
	calculate = function(self, card, context)
		if context.setting_blind and not (context.blueprint_card or card).getting_sliced and SRL_FUNC.no_bp_retrigger(context) then
			if G.GAME.blind and G.GAME.blind.boss then
				local destructable_jokers = {}
				for i = 1, #G.jokers.cards do
					if G.jokers.cards[i] ~= card and not G.jokers.cards[i].ability.eternal and not G.jokers.cards[i].getting_sliced then destructable_jokers[#destructable_jokers+1] = G.jokers.cards[i] end
				end
				local joker_to_destroy = #destructable_jokers > 0 and pseudorandom_element(destructable_jokers, pseudoseed('madness')) or nil

				if joker_to_destroy and not (context.blueprint_card or card).getting_sliced then
					joker_to_destroy.getting_sliced = true
					G.E_MANAGER:add_event(Event({func = function()
						(context.blueprint_card or card):juice_up(0.8, 0.8)
						joker_to_destroy:start_dissolve({G.C.RED}, nil, 1.6)
					return true end }))
				end
				SRL_FUNC.lower_blind_req(card, SRL_FUNC.mod_val(card, "blind"))
			end
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cursed_reaper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_cursed_reaper"
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_cursed_reaper"

--- Incursion Reaper ---

SMODS.Joker{
	key = "incursion_reaper",
	name = "Incursion Reaper",
	rarity = 1,
	pos = {x = 16, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Reaper", buff_all = 1, mod_buff = 0.1}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "buff_all"), card.ability.extra.mod_buff}}
	end,
	calculate = function(self, card, context)
		if context.end_of_round and context.main_eval and SRL_FUNC.no_bp_retrigger(context) then
			if G.GAME.blind and G.GAME.blind.boss then
				card.ability.extra.buff_all = card.ability.extra.buff_all + card.ability.extra.mod_buff
				card_eval_status_text(card, 'extra', nil, nil, nil, {message = localize('k_upgrade_ex'), colour = G.C.DARK_EDITION})
			end
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_incursion_reaper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_incursion_reaper"
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_incursion_reaper"

--- Harpy Eyegouger ---

SMODS.Joker{
	key = "harpy_eyegouger",
	name = "Harpy Eyegouger",
	rarity = 1,
	pos = {x = 17, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Harpy", effect = 5}},
	loc_vars = function(self, info_queue, card)
		info_queue[#info_queue+1] = SRL_FUNC.eff_iq("Mending")
		info_queue[#info_queue+1] = SRL_FUNC.min_iq("Animated Gem")
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		SRL_FUNC.mod_val(card, "effect")}}
	end,
	calculate = function(self, card, context)
		if context.setting_blind then
			SRL_FUNC.set_effect(G.jokers.cards[1], "Mending", SRL_FUNC.mod_val(card, "effect"))
			SRL_FUNC.set_minion(G.jokers.cards[1], "Animated Gem", SRL_FUNC.mod_val(card, "effect"))
		end
	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_harpy_eyegouger"
SRL_MOD.modded_jokers_chaos = {}
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_harpy_eyegouger"
SRL_MOD.modded_jokers_harpy = {}
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_harpy_eyegouger"

--- Harpy Screamer ---

SMODS.Joker{
	key = "harpy_screamer",
	name = "Harpy Screamer",
	rarity = 1,
	pos = {x = 18, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Harpy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_harpy_screamer"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_harpy_screamer"
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_harpy_screamer"

--- Harpy Pillager ---

SMODS.Joker{
	key = "harpy_pillager",
	name = "Harpy Pillager",
	rarity = 1,
	pos = {x = 19, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Harpy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_harpy_pillager"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_harpy_pillager"
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_harpy_pillager"

--- Harpy Torturer ---

SMODS.Joker{
	key = "harpy_torturer",
	name = "Harpy Torturer",
	rarity = 1,
	pos = {x = 20, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Harpy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_harpy_torturer"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_harpy_torturer"
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_harpy_torturer"

--- Harpy Hag ---

SMODS.Joker{
	key = "harpy_hag",
	name = "Harpy Hag",
	rarity = 1,
	pos = {x = 21, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Harpy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_harpy_hag"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_harpy_hag"
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_harpy_hag"

--- Harpy Queen ---

SMODS.Joker{
	key = "harpy_queen",
	name = "Harpy Queen",
	rarity = 1,
	pos = {x = 22, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Harpy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_harpy_queen"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_harpy_queen"
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_harpy_queen"

--- Imp Hexer ---

SMODS.Joker{
	key = "imp_hexer",
	name = "Imp Hexer",
	rarity = 1,
	pos = {x = 23, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_hexer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_imp_hexer"
SRL_MOD.modded_jokers_imp = {}
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_hexer"

--- Imp Sacrificer ---

SMODS.Joker{
	key = "imp_sacrificer",
	name = "Imp Sacrificer",
	rarity = 1,
	pos = {x = 24, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_sacrificer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_imp_sacrificer"
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_sacrificer"

--- Imp Shaman ---

SMODS.Joker{
	key = "imp_shaman",
	name = "Imp Shaman",
	rarity = 1,
	pos = {x = 25, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_shaman"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_imp_shaman"
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_shaman"

--- Imp Inscriber ---

SMODS.Joker{
	key = "imp_inscriber",
	name = "Imp Inscriber",
	rarity = 1,
	pos = {x = 26, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_inscriber"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_imp_inscriber"
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_inscriber"

--- Imp Ritualist ---

SMODS.Joker{
	key = "imp_ritualist",
	name = "Imp Ritualist",
	rarity = 1,
	pos = {x = 27, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_ritualist"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_imp_ritualist"
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_ritualist"

--- Imp Necromancer ---

SMODS.Joker{
	key = "imp_necromancer",
	name = "Imp Necromancer",
	rarity = 1,
	pos = {x = 28, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_necromancer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_imp_necromancer"
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_necromancer"

--- Siren Purifier ---

SMODS.Joker{
	key = "siren_purifier",
	name = "Siren Purifier",
	rarity = 1,
	pos = {x = 29, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Siren"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siren_purifier"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siren_purifier"
SRL_MOD.modded_jokers_siren = {}
SRL_MOD.modded_jokers_siren[#SRL_MOD.modded_jokers_siren + 1] = "j_srl_siren_purifier"

--- Siren Coercer ---

SMODS.Joker{
	key = "siren_coercer",
	name = "Siren Coercer",
	rarity = 1,
	pos = {x = 30, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Siren"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siren_coercer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siren_coercer"
SRL_MOD.modded_jokers_siren[#SRL_MOD.modded_jokers_siren + 1] = "j_srl_siren_coercer"

--- Siren Soothsayer ---

SMODS.Joker{
	key = "siren_soothsayer",
	name = "Siren Soothsayer",
	rarity = 1,
	pos = {x = 31, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Siren"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siren_soothsayer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siren_soothsayer"
SRL_MOD.modded_jokers_siren[#SRL_MOD.modded_jokers_siren + 1] = "j_srl_siren_soothsayer"

--- Siren Beguiler ---

SMODS.Joker{
	key = "siren_beguiler",
	name = "Siren Beguiler",
	rarity = 1,
	pos = {x = 32, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Siren"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siren_beguiler"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siren_beguiler"
SRL_MOD.modded_jokers_siren[#SRL_MOD.modded_jokers_siren + 1] = "j_srl_siren_beguiler"

--- Siren Ascendant ---

SMODS.Joker{
	key = "siren_ascendant",
	name = "Siren Ascendant",
	rarity = 1,
	pos = {x = 33, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Siren"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siren_ascendant"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siren_ascendant"
SRL_MOD.modded_jokers_siren[#SRL_MOD.modded_jokers_siren + 1] = "j_srl_siren_ascendant"

--- Siren Oracle ---

SMODS.Joker{
	key = "siren_oracle",
	name = "Siren Oracle",
	rarity = 1,
	pos = {x = 34, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Siren"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siren_oracle"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siren_oracle"
SRL_MOD.modded_jokers_siren[#SRL_MOD.modded_jokers_siren + 1] = "j_srl_siren_oracle"

--- Minotaur Warrior ---

SMODS.Joker{
	key = "minotaur_warrior",
	name = "Minotaur Warrior",
	rarity = 1,
	pos = {x = 35, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Minotaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_minotaur_warrior"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_minotaur_warrior"
SRL_MOD.modded_jokers_minotaur = {}
SRL_MOD.modded_jokers_minotaur[#SRL_MOD.modded_jokers_minotaur + 1] = "j_srl_minotaur_warrior"

--- Minotaur Earthshaker ---

SMODS.Joker{
	key = "minotaur_earthshaker",
	name = "Minotaur Earthshaker",
	rarity = 1,
	pos = {x = 36, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Minotaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_minotaur_earthshaker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_minotaur_earthshaker"
SRL_MOD.modded_jokers_minotaur[#SRL_MOD.modded_jokers_minotaur + 1] = "j_srl_minotaur_earthshaker"

--- Minotaur Skullcrusher ---

SMODS.Joker{
	key = "minotaur_skullcrusher",
	name = "Minotaur Skullcrusher",
	rarity = 1,
	pos = {x = 37, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Minotaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_minotaur_skullcrusher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_minotaur_skullcrusher"
SRL_MOD.modded_jokers_minotaur[#SRL_MOD.modded_jokers_minotaur + 1] = "j_srl_minotaur_skullcrusher"

--- Minotaur Battlemaster ---

SMODS.Joker{
	key = "minotaur_battlemaster",
	name = "Minotaur Battlemaster",
	rarity = 1,
	pos = {x = 38, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Minotaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_minotaur_battlemaster"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_minotaur_battlemaster"
SRL_MOD.modded_jokers_minotaur[#SRL_MOD.modded_jokers_minotaur + 1] = "j_srl_minotaur_battlemaster"

--- Minotaur Juggernaut ---

SMODS.Joker{
	key = "minotaur_juggernaut",
	name = "Minotaur Juggernaut",
	rarity = 1,
	pos = {x = 39, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Minotaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_minotaur_juggernaut"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_minotaur_juggernaut"
SRL_MOD.modded_jokers_minotaur[#SRL_MOD.modded_jokers_minotaur + 1] = "j_srl_minotaur_juggernaut"

--- Minotaur Behemoth ---

SMODS.Joker{
	key = "minotaur_behemoth",
	name = "Minotaur Behemoth",
	rarity = 1,
	pos = {x = 40, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Minotaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_minotaur_behemoth"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_minotaur_behemoth"
SRL_MOD.modded_jokers_minotaur[#SRL_MOD.modded_jokers_minotaur + 1] = "j_srl_minotaur_behemoth"

--- Life Shapeshifter ---

SMODS.Joker{
	key = "life_shapeshifter",
	name = "Life Shapeshifter",
	rarity = 1,
	pos = {x = 41, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_life_shapeshifter"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_life_shapeshifter"
SRL_MOD.modded_jokers_shapeshifter = {}
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_life_shapeshifter"

--- Death Shapeshifter ---

SMODS.Joker{
	key = "death_shapeshifter",
	name = "Death Shapeshifter",
	rarity = 1,
	pos = {x = 42, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_death_shapeshifter"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_death_shapeshifter"
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_death_shapeshifter"

--- Chaos Shapeshifter ---

SMODS.Joker{
	key = "chaos_shapeshifter",
	name = "Chaos Shapeshifter",
	rarity = 1,
	pos = {x = 43, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chaos_shapeshifter"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_chaos_shapeshifter"
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_chaos_shapeshifter"

--- Sorcery Shapeshifter ---

SMODS.Joker{
	key = "sorcery_shapeshifter",
	name = "Sorcery Shapeshifter",
	rarity = 1,
	pos = {x = 44, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sorcery_shapeshifter"
SRL_MOD.modded_jokers_sorcery = {}
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sorcery_shapeshifter"
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_sorcery_shapeshifter"

--- Nature Shapeshifter ---

SMODS.Joker{
	key = "nature_shapeshifter",
	name = "Nature Shapeshifter",
	rarity = 1,
	pos = {x = 45, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nature_shapeshifter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_nature_shapeshifter"
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_nature_shapeshifter"

--- Master Shapeshifter ---

SMODS.Joker{
	key = "master_shapeshifter",
	name = "Master Shapeshifter",
	rarity = 1,
	pos = {x = 46, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_master_shapeshifter"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_master_shapeshifter"
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_master_shapeshifter"

--- Gimp Mummy ---

SMODS.Joker{
	key = "gimp_mummy",
	name = "Gimp Mummy",
	rarity = 1,
	pos = {x = 47, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mummy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gimp_mummy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gimp_mummy"
SRL_MOD.modded_jokers_mummy = {}
SRL_MOD.modded_jokers_mummy[#SRL_MOD.modded_jokers_mummy + 1] = "j_srl_gimp_mummy"

--- Scourge Mummy ---

SMODS.Joker{
	key = "scourge_mummy",
	name = "Scourge Mummy",
	rarity = 1,
	pos = {x = 48, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mummy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_scourge_mummy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_scourge_mummy"
SRL_MOD.modded_jokers_mummy[#SRL_MOD.modded_jokers_mummy + 1] = "j_srl_scourge_mummy"

--- Creep Mummy ---

SMODS.Joker{
	key = "creep_mummy",
	name = "Creep Mummy",
	rarity = 1,
	pos = {x = 49, y = 0},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mummy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_creep_mummy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_creep_mummy"
SRL_MOD.modded_jokers_mummy[#SRL_MOD.modded_jokers_mummy + 1] = "j_srl_creep_mummy"

--- Doom Mummy ---

SMODS.Joker{
	key = "doom_mummy",
	name = "Doom Mummy",
	rarity = 1,
	pos = {x = 0, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mummy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_doom_mummy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_doom_mummy"
SRL_MOD.modded_jokers_mummy[#SRL_MOD.modded_jokers_mummy + 1] = "j_srl_doom_mummy"

--- Nightmare Mummy ---

SMODS.Joker{
	key = "nightmare_mummy",
	name = "Nightmare Mummy",
	rarity = 1,
	pos = {x = 1, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mummy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nightmare_mummy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nightmare_mummy"
SRL_MOD.modded_jokers_mummy[#SRL_MOD.modded_jokers_mummy + 1] = "j_srl_nightmare_mummy"

--- Mummy Lord ---

SMODS.Joker{
	key = "mummy_lord",
	name = "Mummy Lord",
	rarity = 1,
	pos = {x = 2, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mummy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mummy_lord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_mummy_lord"
SRL_MOD.modded_jokers_mummy[#SRL_MOD.modded_jokers_mummy + 1] = "j_srl_mummy_lord"

--- Necrotic Clutcher ---

SMODS.Joker{
	key = "necrotic_clutcher",
	name = "Necrotic Clutcher",
	rarity = 1,
	pos = {x = 3, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_necrotic_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_necrotic_clutcher"
SRL_MOD.modded_jokers_clutcher = {}
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_necrotic_clutcher"

--- Vital Clutcher ---

SMODS.Joker{
	key = "vital_clutcher",
	name = "Vital Clutcher",
	rarity = 1,
	pos = {x = 4, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vital_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_vital_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_vital_clutcher"

--- Flamegrip Clutcher ---

SMODS.Joker{
	key = "flamegrip_clutcher",
	name = "Flamegrip Clutcher",
	rarity = 1,
	pos = {x = 5, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_flamegrip_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_flamegrip_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_flamegrip_clutcher"

--- Ethereal Clutcher ---

SMODS.Joker{
	key = "ethereal_clutcher",
	name = "Ethereal Clutcher",
	rarity = 1,
	pos = {x = 6, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ethereal_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ethereal_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_ethereal_clutcher"

--- Venomous Clutcher ---

SMODS.Joker{
	key = "venomous_clutcher",
	name = "Venomous Clutcher",
	rarity = 1,
	pos = {x = 7, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_venomous_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_venomous_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_venomous_clutcher"

--- Doom Clutcher ---

SMODS.Joker{
	key = "doom_clutcher",
	name = "Doom Clutcher",
	rarity = 1,
	pos = {x = 8, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_doom_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_doom_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_doom_clutcher"

--- Volatile Phoenix ---

SMODS.Joker{
	key = "volatile_phoenix",
	name = "Volatile Phoenix",
	rarity = 1,
	pos = {x = 9, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_volatile_phoenix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_volatile_phoenix"
SRL_MOD.modded_jokers_phoenix = {}
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_volatile_phoenix"

--- Thunderstruck Phoenix ---

SMODS.Joker{
	key = "thunderstruck_phoenix",
	name = "Thunderstruck Phoenix",
	rarity = 1,
	pos = {x = 10, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thunderstruck_phoenix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_thunderstruck_phoenix"
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_thunderstruck_phoenix"

--- Frost Phoenix ---

SMODS.Joker{
	key = "frost_phoenix",
	name = "Frost Phoenix",
	rarity = 1,
	pos = {x = 11, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frost_phoenix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_frost_phoenix"
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_frost_phoenix"

--- Royal Phoenix ---

SMODS.Joker{
	key = "royal_phoenix",
	name = "Royal Phoenix",
	rarity = 1,
	pos = {x = 12, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_royal_phoenix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_royal_phoenix"
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_royal_phoenix"

--- Corrupted Phoenix ---

SMODS.Joker{
	key = "corrupted_phoenix",
	name = "Corrupted Phoenix",
	rarity = 1,
	pos = {x = 13, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_corrupted_phoenix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_corrupted_phoenix"
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_corrupted_phoenix"

--- Ancestral Phoenix ---

SMODS.Joker{
	key = "ancestral_phoenix",
	name = "Ancestral Phoenix",
	rarity = 1,
	pos = {x = 14, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancestral_phoenix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ancestral_phoenix"
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_ancestral_phoenix"

--- Mimic ---

SMODS.Joker{
	key = "mimic",
	name = "Mimic",
	rarity = 1,
	pos = {x = 15, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Mimic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mimic"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mimic"
SRL_MOD.modded_jokers_mimic = {}
SRL_MOD.modded_jokers_mimic[#SRL_MOD.modded_jokers_mimic + 1] = "j_srl_mimic"

--- Djinn Pyromancer ---

SMODS.Joker{
	key = "djinn_pyromancer",
	name = "Djinn Pyromancer",
	rarity = 1,
	pos = {x = 16, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_djinn_pyromancer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_djinn_pyromancer"
SRL_MOD.modded_jokers_djinn = {}
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_djinn_pyromancer"

--- Djinn Dreamweaver ---

SMODS.Joker{
	key = "djinn_dreamweaver",
	name = "Djinn Dreamweaver",
	rarity = 1,
	pos = {x = 17, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_djinn_dreamweaver"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_djinn_dreamweaver"
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_djinn_dreamweaver"

--- Djinn Illusionist ---

SMODS.Joker{
	key = "djinn_illusionist",
	name = "Djinn Illusionist",
	rarity = 1,
	pos = {x = 18, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_djinn_illusionist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_djinn_illusionist"
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_djinn_illusionist"

--- Djinn Evoker ---

SMODS.Joker{
	key = "djinn_evoker",
	name = "Djinn Evoker",
	rarity = 1,
	pos = {x = 19, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_djinn_evoker"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_djinn_evoker"
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_djinn_evoker"

--- Djinn Arcanomancer ---

SMODS.Joker{
	key = "djinn_arcanomancer",
	name = "Djinn Arcanomancer",
	rarity = 1,
	pos = {x = 20, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_djinn_arcanomancer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_djinn_arcanomancer"
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_djinn_arcanomancer"

--- Djinn Ghula ---

SMODS.Joker{
	key = "djinn_ghula",
	name = "Djinn Ghula",
	rarity = 1,
	pos = {x = 21, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_djinn_ghula"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_djinn_ghula"
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_djinn_ghula"

--- Troll Arsonist ---

SMODS.Joker{
	key = "troll_arsonist",
	name = "Troll Arsonist",
	rarity = 1,
	pos = {x = 22, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_troll_arsonist"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_troll_arsonist"
SRL_MOD.modded_jokers_troll = {}
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_troll_arsonist"

--- Troll Necksnapper ---

SMODS.Joker{
	key = "troll_necksnapper",
	name = "Troll Necksnapper",
	rarity = 1,
	pos = {x = 23, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_troll_necksnapper"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_troll_necksnapper"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_troll_necksnapper"

--- Troll Berserker ---

SMODS.Joker{
	key = "troll_berserker",
	name = "Troll Berserker",
	rarity = 1,
	pos = {x = 24, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_troll_berserker"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_troll_berserker"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_troll_berserker"

--- Troll Knife Juggler ---

SMODS.Joker{
	key = "troll_knife_juggler",
	name = "Troll Knife Juggler",
	rarity = 1,
	pos = {x = 25, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_troll_knife_juggler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_troll_knife_juggler"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_troll_knife_juggler"

--- Troll Alemaster ---

SMODS.Joker{
	key = "troll_alemaster",
	name = "Troll Alemaster",
	rarity = 1,
	pos = {x = 26, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_troll_alemaster"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_troll_alemaster"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_troll_alemaster"

--- Troll King ---

SMODS.Joker{
	key = "troll_king",
	name = "Troll King",
	rarity = 1,
	pos = {x = 27, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_troll_king"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_troll_king"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_troll_king"

--- Wicked Carver ---

SMODS.Joker{
	key = "wicked_carver",
	name = "Wicked Carver",
	rarity = 1,
	pos = {x = 28, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wicked_carver"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wicked_carver"
SRL_MOD.modded_jokers_carver = {}
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_wicked_carver"

--- Twisted Carver ---

SMODS.Joker{
	key = "twisted_carver",
	name = "Twisted Carver",
	rarity = 1,
	pos = {x = 29, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_twisted_carver"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_twisted_carver"
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_twisted_carver"

--- Demented Carver ---

SMODS.Joker{
	key = "demented_carver",
	name = "Demented Carver",
	rarity = 1,
	pos = {x = 30, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_demented_carver"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_demented_carver"
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_demented_carver"

--- Carver Sadist ---

SMODS.Joker{
	key = "carver_sadist",
	name = "Carver Sadist",
	rarity = 1,
	pos = {x = 31, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carver_sadist"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_carver_sadist"
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_carver_sadist"

--- Carver Heartseeker ---

SMODS.Joker{
	key = "carver_heartseeker",
	name = "Carver Heartseeker",
	rarity = 1,
	pos = {x = 32, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carver_heartseeker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_carver_heartseeker"
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_carver_heartseeker"

--- Carver Shadowstalker ---

SMODS.Joker{
	key = "carver_shadowstalker",
	name = "Carver Shadowstalker",
	rarity = 1,
	pos = {x = 33, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carver_shadowstalker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_carver_shadowstalker"
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_carver_shadowstalker"

--- Dryad Raincaller ---

SMODS.Joker{
	key = "dryad_raincaller",
	name = "Dryad Raincaller",
	rarity = 1,
	pos = {x = 34, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_raincaller"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_raincaller"
SRL_MOD.modded_jokers_dryad = {}
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_raincaller"

--- Dryad Naturalist ---

SMODS.Joker{
	key = "dryad_naturalist",
	name = "Dryad Naturalist",
	rarity = 1,
	pos = {x = 35, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_naturalist"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_naturalist"
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_naturalist"

--- Dryad Proliferator ---

SMODS.Joker{
	key = "dryad_proliferator",
	name = "Dryad Proliferator",
	rarity = 1,
	pos = {x = 36, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_proliferator"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_proliferator"
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_proliferator"

--- Dryad Warden ---

SMODS.Joker{
	key = "dryad_warden",
	name = "Dryad Warden",
	rarity = 1,
	pos = {x = 37, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_warden"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_warden"
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_warden"

--- Dryad Keeper ---

SMODS.Joker{
	key = "dryad_keeper",
	name = "Dryad Keeper",
	rarity = 1,
	pos = {x = 38, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_keeper"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_keeper"
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_keeper"

--- Dryad Vindicator ---

SMODS.Joker{
	key = "dryad_vindicator",
	name = "Dryad Vindicator",
	rarity = 1,
	pos = {x = 39, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_vindicator"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_vindicator"
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_vindicator"

--- Raven Acolyte ---

SMODS.Joker{
	key = "raven_acolyte",
	name = "Raven Acolyte",
	rarity = 1,
	pos = {x = 40, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_acolyte"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_acolyte"
SRL_MOD.modded_jokers_raven = {}
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_acolyte"

--- Raven Defiler ---

SMODS.Joker{
	key = "raven_defiler",
	name = "Raven Defiler",
	rarity = 1,
	pos = {x = 41, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_defiler"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_defiler"
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_defiler"

--- Raven Ritualist ---

SMODS.Joker{
	key = "raven_ritualist",
	name = "Raven Ritualist",
	rarity = 1,
	pos = {x = 42, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_ritualist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_ritualist"
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_ritualist"

--- Raven Batmaster ---

SMODS.Joker{
	key = "raven_batmaster",
	name = "Raven Batmaster",
	rarity = 1,
	pos = {x = 43, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_batmaster"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_batmaster"
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_batmaster"

--- Raven Bloodmage ---

SMODS.Joker{
	key = "raven_bloodmage",
	name = "Raven Bloodmage",
	rarity = 1,
	pos = {x = 44, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_bloodmage"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_bloodmage"
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_bloodmage"

--- Raven Lord ---

SMODS.Joker{
	key = "raven_lord",
	name = "Raven Lord",
	rarity = 1,
	pos = {x = 45, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_lord"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_lord"
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_lord"

--- Planetary Amaranth ---

SMODS.Joker{
	key = "planetary_amaranth",
	name = "Planetary Amaranth",
	rarity = 1,
	pos = {x = 46, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_planetary_amaranth"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_planetary_amaranth"
SRL_MOD.modded_jokers_amaranth = {}
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_planetary_amaranth"

--- Stardust Amaranth ---

SMODS.Joker{
	key = "stardust_amaranth",
	name = "Stardust Amaranth",
	rarity = 1,
	pos = {x = 47, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stardust_amaranth"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stardust_amaranth"
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_stardust_amaranth"

--- Nexus Amaranth ---

SMODS.Joker{
	key = "nexus_amaranth",
	name = "Nexus Amaranth",
	rarity = 1,
	pos = {x = 48, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nexus_amaranth"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nexus_amaranth"
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_nexus_amaranth"

--- Lost Amaranth ---

SMODS.Joker{
	key = "lost_amaranth",
	name = "Lost Amaranth",
	rarity = 1,
	pos = {x = 49, y = 1},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lost_amaranth"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_lost_amaranth"
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_lost_amaranth"

--- Enclave Amaranth ---

SMODS.Joker{
	key = "enclave_amaranth",
	name = "Enclave Amaranth",
	rarity = 1,
	pos = {x = 0, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_enclave_amaranth"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_enclave_amaranth"
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_enclave_amaranth"

--- Amaranthine ---

SMODS.Joker{
	key = "amaranthine",
	name = "Amaranthine",
	rarity = 1,
	pos = {x = 1, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amaranthine"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amaranthine"
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_amaranthine"

--- Springtime Aspect ---

SMODS.Joker{
	key = "springtime_aspect",
	name = "Springtime Aspect",
	rarity = 1,
	pos = {x = 2, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_springtime_aspect"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_springtime_aspect"
SRL_MOD.modded_jokers_aspect = {}
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_springtime_aspect"

--- Summer Aspect ---

SMODS.Joker{
	key = "summer_aspect",
	name = "Summer Aspect",
	rarity = 1,
	pos = {x = 3, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_summer_aspect"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_summer_aspect"
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_summer_aspect"

--- Autumn Aspect ---

SMODS.Joker{
	key = "autumn_aspect",
	name = "Autumn Aspect",
	rarity = 1,
	pos = {x = 4, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_autumn_aspect"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_autumn_aspect"
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_autumn_aspect"

--- Winter Aspect ---

SMODS.Joker{
	key = "winter_aspect",
	name = "Winter Aspect",
	rarity = 1,
	pos = {x = 5, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_winter_aspect"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_winter_aspect"
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_winter_aspect"

--- Aspect of Seasons ---

SMODS.Joker{
	key = "aspect_of_seasons",
	name = "Aspect of Seasons",
	rarity = 1,
	pos = {x = 6, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aspect_of_seasons"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_aspect_of_seasons"
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_aspect_of_seasons"

--- Crypt Bat ---

SMODS.Joker{
	key = "crypt_bat",
	name = "Crypt Bat",
	rarity = 1,
	pos = {x = 7, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_crypt_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_crypt_bat"
SRL_MOD.modded_jokers_bat = {}
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_crypt_bat"

--- Pulse Bat ---

SMODS.Joker{
	key = "pulse_bat",
	name = "Pulse Bat",
	rarity = 1,
	pos = {x = 8, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pulse_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_pulse_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_pulse_bat"

--- Vampire Bat ---

SMODS.Joker{
	key = "vampire_bat",
	name = "Vampire Bat",
	rarity = 1,
	pos = {x = 9, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vampire_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_vampire_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_vampire_bat"

--- Mutated Vampire Bat ---

SMODS.Joker{
	key = "mutated_vampire_bat",
	name = "Mutated Vampire Bat",
	rarity = 1,
	pos = {x = 10, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mutated_vampire_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mutated_vampire_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_mutated_vampire_bat"

--- Mutated Pulse Bat ---

SMODS.Joker{
	key = "mutated_pulse_bat",
	name = "Mutated Pulse Bat",
	rarity = 1,
	pos = {x = 11, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mutated_pulse_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mutated_pulse_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_mutated_pulse_bat"

--- Mutated Crypt Bat ---

SMODS.Joker{
	key = "mutated_crypt_bat",
	name = "Mutated Crypt Bat",
	rarity = 1,
	pos = {x = 12, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mutated_crypt_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mutated_crypt_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_mutated_crypt_bat"

--- Death Bat ---

SMODS.Joker{
	key = "death_bat",
	name = "Death Bat",
	rarity = 1,
	pos = {x = 13, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_death_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_death_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_death_bat"

--- Wildfire Efreet ---

SMODS.Joker{
	key = "wildfire_efreet",
	name = "Wildfire Efreet",
	rarity = 1,
	pos = {x = 14, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Efreet"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wildfire_efreet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_wildfire_efreet"
SRL_MOD.modded_jokers_efreet = {}
SRL_MOD.modded_jokers_efreet[#SRL_MOD.modded_jokers_efreet + 1] = "j_srl_wildfire_efreet"

--- Volcanic Efreet ---

SMODS.Joker{
	key = "volcanic_efreet",
	name = "Volcanic Efreet",
	rarity = 1,
	pos = {x = 15, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Efreet"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_volcanic_efreet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_volcanic_efreet"
SRL_MOD.modded_jokers_efreet[#SRL_MOD.modded_jokers_efreet + 1] = "j_srl_volcanic_efreet"

--- Frostfire Efreet ---

SMODS.Joker{
	key = "frostfire_efreet",
	name = "Frostfire Efreet",
	rarity = 1,
	pos = {x = 16, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Efreet"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frostfire_efreet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_frostfire_efreet"
SRL_MOD.modded_jokers_efreet[#SRL_MOD.modded_jokers_efreet + 1] = "j_srl_frostfire_efreet"

--- Obsidian Efreet ---

SMODS.Joker{
	key = "obsidian_efreet",
	name = "Obsidian Efreet",
	rarity = 1,
	pos = {x = 17, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Efreet"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_obsidian_efreet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_obsidian_efreet"
SRL_MOD.modded_jokers_efreet[#SRL_MOD.modded_jokers_efreet + 1] = "j_srl_obsidian_efreet"

--- Dreadful Efreet ---

SMODS.Joker{
	key = "dreadful_efreet",
	name = "Dreadful Efreet",
	rarity = 1,
	pos = {x = 18, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Efreet"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dreadful_efreet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dreadful_efreet"
SRL_MOD.modded_jokers_efreet[#SRL_MOD.modded_jokers_efreet + 1] = "j_srl_dreadful_efreet"

--- Ashbone Efreet ---

SMODS.Joker{
	key = "ashbone_efreet",
	name = "Ashbone Efreet",
	rarity = 1,
	pos = {x = 19, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Efreet"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ashbone_efreet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ashbone_efreet"
SRL_MOD.modded_jokers_efreet[#SRL_MOD.modded_jokers_efreet + 1] = "j_srl_ashbone_efreet"

--- Lich Priest ---

SMODS.Joker{
	key = "lich_priest",
	name = "Lich Priest",
	rarity = 1,
	pos = {x = 20, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_priest"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lich_priest"
SRL_MOD.modded_jokers_lich = {}
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_priest"

--- Lich Shadowcaster ---

SMODS.Joker{
	key = "lich_shadowcaster",
	name = "Lich Shadowcaster",
	rarity = 1,
	pos = {x = 21, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_shadowcaster"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lich_shadowcaster"
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_shadowcaster"

--- Lich Hellcaster ---

SMODS.Joker{
	key = "lich_hellcaster",
	name = "Lich Hellcaster",
	rarity = 1,
	pos = {x = 22, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_hellcaster"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lich_hellcaster"
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_hellcaster"

--- Lich Overseer ---

SMODS.Joker{
	key = "lich_overseer",
	name = "Lich Overseer",
	rarity = 1,
	pos = {x = 23, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_overseer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lich_overseer"
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_overseer"

--- Lich Bloodletter ---

SMODS.Joker{
	key = "lich_bloodletter",
	name = "Lich Bloodletter",
	rarity = 1,
	pos = {x = 24, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_bloodletter"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lich_bloodletter"
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_bloodletter"

--- Lich King ---

SMODS.Joker{
	key = "lich_king",
	name = "Lich King",
	rarity = 1,
	pos = {x = 25, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_king"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lich_king"
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_king"

--- Firewound Angel ---

SMODS.Joker{
	key = "firewound_angel",
	name = "Firewound Angel",
	rarity = 1,
	pos = {x = 26, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_firewound_angel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_firewound_angel"
SRL_MOD.modded_jokers_angel = {}
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_firewound_angel"

--- Icewound Angel ---

SMODS.Joker{
	key = "icewound_angel",
	name = "Icewound Angel",
	rarity = 1,
	pos = {x = 27, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_icewound_angel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_icewound_angel"
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_icewound_angel"

--- Goldblight Angel ---

SMODS.Joker{
	key = "goldblight_angel",
	name = "Goldblight Angel",
	rarity = 1,
	pos = {x = 28, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_goldblight_angel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_goldblight_angel"
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_goldblight_angel"

--- Imperial Angel ---

SMODS.Joker{
	key = "imperial_angel",
	name = "Imperial Angel",
	rarity = 1,
	pos = {x = 29, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imperial_angel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_imperial_angel"
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_imperial_angel"

--- Angel Soulslayer ---

SMODS.Joker{
	key = "angel_soulslayer",
	name = "Angel Soulslayer",
	rarity = 1,
	pos = {x = 30, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_angel_soulslayer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_angel_soulslayer"
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_angel_soulslayer"

--- Doomblight Angel ---

SMODS.Joker{
	key = "doomblight_angel",
	name = "Doomblight Angel",
	rarity = 1,
	pos = {x = 31, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_doomblight_angel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_doomblight_angel"
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_doomblight_angel"

--- Spider Occultist ---

SMODS.Joker{
	key = "spider_occultist",
	name = "Spider Occultist",
	rarity = 1,
	pos = {x = 32, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spider_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spider_occultist"
SRL_MOD.modded_jokers_occultist = {}
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_spider_occultist"

--- Viper Occultist ---

SMODS.Joker{
	key = "viper_occultist",
	name = "Viper Occultist",
	rarity = 1,
	pos = {x = 33, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_viper_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_viper_occultist"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_viper_occultist"

--- Raptor Occultist ---

SMODS.Joker{
	key = "raptor_occultist",
	name = "Raptor Occultist",
	rarity = 1,
	pos = {x = 34, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raptor_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raptor_occultist"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_raptor_occultist"

--- Disciple Occultist ---

SMODS.Joker{
	key = "disciple_occultist",
	name = "Disciple Occultist",
	rarity = 1,
	pos = {x = 35, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_disciple_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_disciple_occultist"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_disciple_occultist"

--- Zealot Occultist ---

SMODS.Joker{
	key = "zealot_occultist",
	name = "Zealot Occultist",
	rarity = 1,
	pos = {x = 36, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zealot_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_zealot_occultist"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_zealot_occultist"

--- Mirage Occultist ---

SMODS.Joker{
	key = "mirage_occultist",
	name = "Mirage Occultist",
	rarity = 1,
	pos = {x = 37, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mirage_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mirage_occultist"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_mirage_occultist"

--- Delusion Occultist ---

SMODS.Joker{
	key = "delusion_occultist",
	name = "Delusion Occultist",
	rarity = 1,
	pos = {x = 38, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_delusion_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_delusion_occultist"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_delusion_occultist"

--- Occultist Spellbinder ---

SMODS.Joker{
	key = "occultist_spellbinder",
	name = "Occultist Spellbinder",
	rarity = 1,
	pos = {x = 39, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_occultist_spellbinder"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_occultist_spellbinder"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_occultist_spellbinder"

--- Dragon Soldier ---

SMODS.Joker{
	key = "dragon_soldier",
	name = "Dragon Soldier",
	rarity = 1,
	pos = {x = 40, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragon_soldier"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dragon_soldier"
SRL_MOD.modded_jokers_dragon = {}
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_dragon_soldier"

--- Dragon Sentinel ---

SMODS.Joker{
	key = "dragon_sentinel",
	name = "Dragon Sentinel",
	rarity = 1,
	pos = {x = 41, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragon_sentinel"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dragon_sentinel"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_dragon_sentinel"

--- Dragon Guardian ---

SMODS.Joker{
	key = "dragon_guardian",
	name = "Dragon Guardian",
	rarity = 1,
	pos = {x = 42, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragon_guardian"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dragon_guardian"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_dragon_guardian"

--- Dragon Revenant ---

SMODS.Joker{
	key = "dragon_revenant",
	name = "Dragon Revenant",
	rarity = 1,
	pos = {x = 43, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragon_revenant"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dragon_revenant"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_dragon_revenant"

--- Dragon Queen ---

SMODS.Joker{
	key = "dragon_queen",
	name = "Dragon Queen",
	rarity = 1,
	pos = {x = 44, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragon_queen"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dragon_queen"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_dragon_queen"

--- Dragon Scout ---

SMODS.Joker{
	key = "dragon_scout",
	name = "Dragon Scout",
	rarity = 1,
	pos = {x = 45, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragon_scout"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dragon_scout"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_dragon_scout"

--- Granite Golem ---

SMODS.Joker{
	key = "granite_golem",
	name = "Granite Golem",
	rarity = 1,
	pos = {x = 46, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_granite_golem"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_granite_golem"
SRL_MOD.modded_jokers_golem = {}
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_granite_golem"

--- Iron Golem ---

SMODS.Joker{
	key = "iron_golem",
	name = "Iron Golem",
	rarity = 1,
	pos = {x = 47, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_iron_golem"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_iron_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_iron_golem"

--- Magma Golem ---

SMODS.Joker{
	key = "magma_golem",
	name = "Magma Golem",
	rarity = 1,
	pos = {x = 48, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_magma_golem"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_magma_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_magma_golem"

--- Regal Golem ---

SMODS.Joker{
	key = "regal_golem",
	name = "Regal Golem",
	rarity = 1,
	pos = {x = 49, y = 2},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_regal_golem"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_regal_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_regal_golem"

--- Moss Golem ---

SMODS.Joker{
	key = "moss_golem",
	name = "Moss Golem",
	rarity = 1,
	pos = {x = 0, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_moss_golem"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_moss_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_moss_golem"

--- Gold Golem ---

SMODS.Joker{
	key = "gold_golem",
	name = "Gold Golem",
	rarity = 1,
	pos = {x = 1, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gold_golem"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_gold_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_gold_golem"

--- Haunted Golem ---

SMODS.Joker{
	key = "haunted_golem",
	name = "Haunted Golem",
	rarity = 1,
	pos = {x = 2, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_haunted_golem"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_haunted_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_haunted_golem"

--- Nightmare Golem ---

SMODS.Joker{
	key = "nightmare_golem",
	name = "Nightmare Golem",
	rarity = 1,
	pos = {x = 3, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nightmare_golem"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nightmare_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_nightmare_golem"

--- Pumking ---

SMODS.Joker{
	key = "pumking",
	name = "Pumking",
	rarity = 1,
	pos = {x = 4, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pumking"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_pumking"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_pumking"

--- War Golem ---

SMODS.Joker{
	key = "war_golem",
	name = "War Golem",
	rarity = 1,
	pos = {x = 5, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_war_golem"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_war_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_war_golem"

--- Twisted Devil ---

SMODS.Joker{
	key = "twisted_devil",
	name = "Twisted Devil",
	rarity = 1,
	pos = {x = 6, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_twisted_devil"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_twisted_devil"
SRL_MOD.modded_jokers_devil = {}
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_twisted_devil"

--- Cinder Devil ---

SMODS.Joker{
	key = "cinder_devil",
	name = "Cinder Devil",
	rarity = 1,
	pos = {x = 7, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cinder_devil"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_cinder_devil"
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_cinder_devil"

--- Stone Devil ---

SMODS.Joker{
	key = "stone_devil",
	name = "Stone Devil",
	rarity = 1,
	pos = {x = 8, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stone_devil"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_stone_devil"
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_stone_devil"

--- Skull Devil ---

SMODS.Joker{
	key = "skull_devil",
	name = "Skull Devil",
	rarity = 1,
	pos = {x = 9, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skull_devil"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_skull_devil"
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_skull_devil"

--- Doom Devil ---

SMODS.Joker{
	key = "doom_devil",
	name = "Doom Devil",
	rarity = 1,
	pos = {x = 10, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_doom_devil"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_doom_devil"
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_doom_devil"

--- Krampus ---

SMODS.Joker{
	key = "krampus",
	name = "Krampus",
	rarity = 1,
	pos = {x = 11, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_krampus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_krampus"
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_krampus"

--- Brownie Mauler ---

SMODS.Joker{
	key = "brownie_mauler",
	name = "Brownie Mauler",
	rarity = 1,
	pos = {x = 12, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brownie_mauler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_brownie_mauler"
SRL_MOD.modded_jokers_brownie = {}
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_brownie_mauler"

--- Brownie Trickster ---

SMODS.Joker{
	key = "brownie_trickster",
	name = "Brownie Trickster",
	rarity = 1,
	pos = {x = 13, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brownie_trickster"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_brownie_trickster"
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_brownie_trickster"

--- Brownie Captain ---

SMODS.Joker{
	key = "brownie_captain",
	name = "Brownie Captain",
	rarity = 1,
	pos = {x = 14, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brownie_captain"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_brownie_captain"
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_brownie_captain"

--- Brownie Enforcer ---

SMODS.Joker{
	key = "brownie_enforcer",
	name = "Brownie Enforcer",
	rarity = 1,
	pos = {x = 15, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brownie_enforcer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_brownie_enforcer"
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_brownie_enforcer"

--- Brownie Brute ---

SMODS.Joker{
	key = "brownie_brute",
	name = "Brownie Brute",
	rarity = 1,
	pos = {x = 16, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brownie_brute"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_brownie_brute"
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_brownie_brute"

--- Blademaster ---

SMODS.Joker{
	key = "blademaster",
	name = "Blademaster",
	rarity = 1,
	pos = {x = 17, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blademaster"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_blademaster"
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_blademaster"

--- Shogun ---

SMODS.Joker{
	key = "shogun",
	name = "Shogun",
	rarity = 1,
	pos = {x = 18, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shogun"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_shogun"
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_shogun"

--- Wyvern Sonicscreecher ---

SMODS.Joker{
	key = "wyvern_sonicscreecher",
	name = "Wyvern Sonicscreecher",
	rarity = 1,
	pos = {x = 19, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Wyvern"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wyvern_sonicscreecher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wyvern_sonicscreecher"
SRL_MOD.modded_jokers_wyvern = {}
SRL_MOD.modded_jokers_wyvern[#SRL_MOD.modded_jokers_wyvern + 1] = "j_srl_wyvern_sonicscreecher"

--- Wyvern Windrider ---

SMODS.Joker{
	key = "wyvern_windrider",
	name = "Wyvern Windrider",
	rarity = 1,
	pos = {x = 20, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Wyvern"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wyvern_windrider"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wyvern_windrider"
SRL_MOD.modded_jokers_wyvern[#SRL_MOD.modded_jokers_wyvern + 1] = "j_srl_wyvern_windrider"

--- Wyvern Skystalker ---

SMODS.Joker{
	key = "wyvern_skystalker",
	name = "Wyvern Skystalker",
	rarity = 1,
	pos = {x = 21, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Wyvern"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wyvern_skystalker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wyvern_skystalker"
SRL_MOD.modded_jokers_wyvern[#SRL_MOD.modded_jokers_wyvern + 1] = "j_srl_wyvern_skystalker"

--- Wyvern Airslayer ---

SMODS.Joker{
	key = "wyvern_airslayer",
	name = "Wyvern Airslayer",
	rarity = 1,
	pos = {x = 22, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Wyvern"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wyvern_airslayer"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wyvern_airslayer"
SRL_MOD.modded_jokers_wyvern[#SRL_MOD.modded_jokers_wyvern + 1] = "j_srl_wyvern_airslayer"

--- Wyvern Daybreaker ---

SMODS.Joker{
	key = "wyvern_daybreaker",
	name = "Wyvern Daybreaker",
	rarity = 1,
	pos = {x = 23, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Wyvern"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wyvern_daybreaker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wyvern_daybreaker"
SRL_MOD.modded_jokers_wyvern[#SRL_MOD.modded_jokers_wyvern + 1] = "j_srl_wyvern_daybreaker"

--- Glutinous Slime ---

SMODS.Joker{
	key = "glutinous_slime",
	name = "Glutinous Slime",
	rarity = 1,
	pos = {x = 24, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_glutinous_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_glutinous_slime"
SRL_MOD.modded_jokers_slime = {}
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_glutinous_slime"

--- Mercurial Slime ---

SMODS.Joker{
	key = "mercurial_slime",
	name = "Mercurial Slime",
	rarity = 1,
	pos = {x = 25, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mercurial_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mercurial_slime"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_mercurial_slime"

--- Bile Slime ---

SMODS.Joker{
	key = "bile_slime",
	name = "Bile Slime",
	rarity = 1,
	pos = {x = 26, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bile_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bile_slime"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_bile_slime"

--- Paranormal Slime ---

SMODS.Joker{
	key = "paranormal_slime",
	name = "Paranormal Slime",
	rarity = 1,
	pos = {x = 27, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_paranormal_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_paranormal_slime"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_paranormal_slime"

--- Ectoplasmic Slime ---

SMODS.Joker{
	key = "ectoplasmic_slime",
	name = "Ectoplasmic Slime",
	rarity = 1,
	pos = {x = 28, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ectoplasmic_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ectoplasmic_slime"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_ectoplasmic_slime"

--- Blood Slime ---

SMODS.Joker{
	key = "blood_slime",
	name = "Blood Slime",
	rarity = 1,
	pos = {x = 29, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blood_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_blood_slime"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_blood_slime"

--- Unicorn Vivifier ---

SMODS.Joker{
	key = "unicorn_vivifier",
	name = "Unicorn Vivifier",
	rarity = 1,
	pos = {x = 30, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unicorn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unicorn_vivifier"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unicorn_vivifier"
SRL_MOD.modded_jokers_unicorn = {}
SRL_MOD.modded_jokers_unicorn[#SRL_MOD.modded_jokers_unicorn + 1] = "j_srl_unicorn_vivifier"

--- Unicorn Consecrator ---

SMODS.Joker{
	key = "unicorn_consecrator",
	name = "Unicorn Consecrator",
	rarity = 1,
	pos = {x = 31, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unicorn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unicorn_consecrator"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unicorn_consecrator"
SRL_MOD.modded_jokers_unicorn[#SRL_MOD.modded_jokers_unicorn + 1] = "j_srl_unicorn_consecrator"

--- Unicorn Stormbringer ---

SMODS.Joker{
	key = "unicorn_stormbringer",
	name = "Unicorn Stormbringer",
	rarity = 1,
	pos = {x = 32, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unicorn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unicorn_stormbringer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unicorn_stormbringer"
SRL_MOD.modded_jokers_unicorn[#SRL_MOD.modded_jokers_unicorn + 1] = "j_srl_unicorn_stormbringer"

--- Unicorn Holycaster ---

SMODS.Joker{
	key = "unicorn_holycaster",
	name = "Unicorn Holycaster",
	rarity = 1,
	pos = {x = 33, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unicorn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unicorn_holycaster"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unicorn_holycaster"
SRL_MOD.modded_jokers_unicorn[#SRL_MOD.modded_jokers_unicorn + 1] = "j_srl_unicorn_holycaster"

--- Pegasus ---

SMODS.Joker{
	key = "pegasus",
	name = "Pegasus",
	rarity = 1,
	pos = {x = 34, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unicorn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pegasus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_pegasus"
SRL_MOD.modded_jokers_unicorn[#SRL_MOD.modded_jokers_unicorn + 1] = "j_srl_pegasus"

--- Unicorn Thundercracker ---

SMODS.Joker{
	key = "unicorn_thundercracker",
	name = "Unicorn Thundercracker",
	rarity = 1,
	pos = {x = 35, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unicorn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unicorn_thundercracker"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unicorn_thundercracker"
SRL_MOD.modded_jokers_unicorn[#SRL_MOD.modded_jokers_unicorn + 1] = "j_srl_unicorn_thundercracker"

--- Stronghold ---

SMODS.Joker{
	key = "stronghold",
	name = "Stronghold",
	rarity = 1,
	pos = {x = 36, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stronghold"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_stronghold"
SRL_MOD.modded_jokers_doom_fortress = {}
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_stronghold"

--- Necropolis ---

SMODS.Joker{
	key = "necropolis",
	name = "Necropolis",
	rarity = 1,
	pos = {x = 37, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_necropolis"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_necropolis"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_necropolis"

--- Alcazar ---

SMODS.Joker{
	key = "alcazar",
	name = "Alcazar",
	rarity = 1,
	pos = {x = 38, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_alcazar"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_alcazar"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_alcazar"

--- Crypt ---

SMODS.Joker{
	key = "crypt",
	name = "Crypt",
	rarity = 1,
	pos = {x = 39, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_crypt"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_crypt"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_crypt"

--- Mouth of Hell ---

SMODS.Joker{
	key = "mouth_of_hell",
	name = "Mouth of Hell",
	rarity = 1,
	pos = {x = 40, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mouth_of_hell"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mouth_of_hell"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_mouth_of_hell"

--- Bastion ---

SMODS.Joker{
	key = "bastion",
	name = "Bastion",
	rarity = 1,
	pos = {x = 41, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bastion"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_bastion"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_bastion"

--- Pandemonium King ---

SMODS.Joker{
	key = "pandemonium_king",
	name = "Pandemonium King",
	rarity = 1,
	pos = {x = 42, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pandemonium_king"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_pandemonium_king"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_pandemonium_king"

--- Noxious Smog ---

SMODS.Joker{
	key = "noxious_smog",
	name = "Noxious Smog",
	rarity = 1,
	pos = {x = 43, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_noxious_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_noxious_smog"
SRL_MOD.modded_jokers_smog = {}
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_noxious_smog"

--- Lethal Smog ---

SMODS.Joker{
	key = "lethal_smog",
	name = "Lethal Smog",
	rarity = 1,
	pos = {x = 44, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lethal_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_lethal_smog"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_lethal_smog"

--- Cancerous Smog ---

SMODS.Joker{
	key = "cancerous_smog",
	name = "Cancerous Smog",
	rarity = 1,
	pos = {x = 45, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cancerous_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_cancerous_smog"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_cancerous_smog"

--- Pestilent Smog ---

SMODS.Joker{
	key = "pestilent_smog",
	name = "Pestilent Smog",
	rarity = 1,
	pos = {x = 46, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pestilent_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_pestilent_smog"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_pestilent_smog"

--- Scourge Smog ---

SMODS.Joker{
	key = "scourge_smog",
	name = "Scourge Smog",
	rarity = 1,
	pos = {x = 47, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_scourge_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_scourge_smog"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_scourge_smog"

--- Smog Lord ---

SMODS.Joker{
	key = "smog_lord",
	name = "Smog Lord",
	rarity = 1,
	pos = {x = 48, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_smog_lord"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_smog_lord"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_smog_lord"

--- Treasure Golem ---

SMODS.Joker{
	key = "treasure_golem",
	name = "Treasure Golem",
	rarity = 1,
	pos = {x = 49, y = 3},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_treasure_golem"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_treasure_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_treasure_golem"

--- Red Storm ---

SMODS.Joker{
	key = "red_storm",
	name = "Red Storm",
	rarity = 1,
	pos = {x = 0, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_red_storm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_red_storm"
SRL_MOD.modded_jokers_storm = {}
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_red_storm"

--- Raving Storm ---

SMODS.Joker{
	key = "raving_storm",
	name = "Raving Storm",
	rarity = 1,
	pos = {x = 1, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raving_storm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_raving_storm"
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_raving_storm"

--- Thunder Storm ---

SMODS.Joker{
	key = "thunder_storm",
	name = "Thunder Storm",
	rarity = 1,
	pos = {x = 2, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thunder_storm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_thunder_storm"
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_thunder_storm"

--- Cyclone ---

SMODS.Joker{
	key = "cyclone",
	name = "Cyclone",
	rarity = 1,
	pos = {x = 3, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cyclone"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_cyclone"
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_cyclone"

--- Hurricane ---

SMODS.Joker{
	key = "hurricane",
	name = "Hurricane",
	rarity = 1,
	pos = {x = 4, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hurricane"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_hurricane"
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_hurricane"

--- Storm Lord ---

SMODS.Joker{
	key = "storm_lord",
	name = "Storm Lord",
	rarity = 1,
	pos = {x = 5, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_storm_lord"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_storm_lord"
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_storm_lord"

--- Phase Spellblade ---

SMODS.Joker{
	key = "phase_spellblade",
	name = "Phase Spellblade",
	rarity = 1,
	pos = {x = 6, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phase Warrior"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phase_spellblade"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phase_spellblade"
SRL_MOD.modded_jokers_phase_warrior = {}
SRL_MOD.modded_jokers_phase_warrior[#SRL_MOD.modded_jokers_phase_warrior + 1] = "j_srl_phase_spellblade"

--- Phase Knight ---

SMODS.Joker{
	key = "phase_knight",
	name = "Phase Knight",
	rarity = 1,
	pos = {x = 7, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phase Warrior"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phase_knight"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phase_knight"
SRL_MOD.modded_jokers_phase_warrior[#SRL_MOD.modded_jokers_phase_warrior + 1] = "j_srl_phase_knight"

--- Phase Marauder ---

SMODS.Joker{
	key = "phase_marauder",
	name = "Phase Marauder",
	rarity = 1,
	pos = {x = 8, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phase Warrior"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phase_marauder"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phase_marauder"
SRL_MOD.modded_jokers_phase_warrior[#SRL_MOD.modded_jokers_phase_warrior + 1] = "j_srl_phase_marauder"

--- Phase Paladin ---

SMODS.Joker{
	key = "phase_paladin",
	name = "Phase Paladin",
	rarity = 1,
	pos = {x = 9, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phase Warrior"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phase_paladin"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phase_paladin"
SRL_MOD.modded_jokers_phase_warrior[#SRL_MOD.modded_jokers_phase_warrior + 1] = "j_srl_phase_paladin"

--- Phase Executioner ---

SMODS.Joker{
	key = "phase_executioner",
	name = "Phase Executioner",
	rarity = 1,
	pos = {x = 10, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phase Warrior"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phase_executioner"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phase_executioner"
SRL_MOD.modded_jokers_phase_warrior[#SRL_MOD.modded_jokers_phase_warrior + 1] = "j_srl_phase_executioner"

--- Phase Champion ---

SMODS.Joker{
	key = "phase_champion",
	name = "Phase Champion",
	rarity = 1,
	pos = {x = 11, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phase Warrior"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phase_champion"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phase_champion"
SRL_MOD.modded_jokers_phase_warrior[#SRL_MOD.modded_jokers_phase_warrior + 1] = "j_srl_phase_champion"

--- Pilwiz Peasant ---

SMODS.Joker{
	key = "pilwiz_peasant",
	name = "Pilwiz Peasant",
	rarity = 1,
	pos = {x = 12, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pilwiz_peasant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_pilwiz_peasant"
SRL_MOD.modded_jokers_pilwiz = {}
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_pilwiz_peasant"

--- Delirious Ghoul ---

SMODS.Joker{
	key = "delirious_ghoul",
	name = "Delirious Ghoul",
	rarity = 1,
	pos = {x = 13, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ghoul"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_delirious_ghoul"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_delirious_ghoul"
SRL_MOD.modded_jokers_ghoul = {}
SRL_MOD.modded_jokers_ghoul[#SRL_MOD.modded_jokers_ghoul + 1] = "j_srl_delirious_ghoul"

--- Frenzy Ghoul ---

SMODS.Joker{
	key = "frenzy_ghoul",
	name = "Frenzy Ghoul",
	rarity = 1,
	pos = {x = 14, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ghoul"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frenzy_ghoul"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_frenzy_ghoul"
SRL_MOD.modded_jokers_ghoul[#SRL_MOD.modded_jokers_ghoul + 1] = "j_srl_frenzy_ghoul"

--- Hysteria Ghoul ---

SMODS.Joker{
	key = "hysteria_ghoul",
	name = "Hysteria Ghoul",
	rarity = 1,
	pos = {x = 15, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ghoul"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hysteria_ghoul"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_hysteria_ghoul"
SRL_MOD.modded_jokers_ghoul[#SRL_MOD.modded_jokers_ghoul + 1] = "j_srl_hysteria_ghoul"

--- Rapturous Ghoul ---

SMODS.Joker{
	key = "rapturous_ghoul",
	name = "Rapturous Ghoul",
	rarity = 1,
	pos = {x = 16, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ghoul"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rapturous_ghoul"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_rapturous_ghoul"
SRL_MOD.modded_jokers_ghoul[#SRL_MOD.modded_jokers_ghoul + 1] = "j_srl_rapturous_ghoul"

--- Maniacal Ghoul ---

SMODS.Joker{
	key = "maniacal_ghoul",
	name = "Maniacal Ghoul",
	rarity = 1,
	pos = {x = 17, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ghoul"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_maniacal_ghoul"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_maniacal_ghoul"
SRL_MOD.modded_jokers_ghoul[#SRL_MOD.modded_jokers_ghoul + 1] = "j_srl_maniacal_ghoul"

--- Mite Gravedigger ---

SMODS.Joker{
	key = "mite_gravedigger",
	name = "Mite Gravedigger",
	rarity = 1,
	pos = {x = 18, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mite"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mite_gravedigger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mite_gravedigger"
SRL_MOD.modded_jokers_mite = {}
SRL_MOD.modded_jokers_mite[#SRL_MOD.modded_jokers_mite + 1] = "j_srl_mite_gravedigger"

--- Mite Interloper ---

SMODS.Joker{
	key = "mite_interloper",
	name = "Mite Interloper",
	rarity = 1,
	pos = {x = 19, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mite"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mite_interloper"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mite_interloper"
SRL_MOD.modded_jokers_mite[#SRL_MOD.modded_jokers_mite + 1] = "j_srl_mite_interloper"

--- Mite Invader ---

SMODS.Joker{
	key = "mite_invader",
	name = "Mite Invader",
	rarity = 1,
	pos = {x = 20, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mite"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mite_invader"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mite_invader"
SRL_MOD.modded_jokers_mite[#SRL_MOD.modded_jokers_mite + 1] = "j_srl_mite_invader"

--- Mite Plaguespreader ---

SMODS.Joker{
	key = "mite_plaguespreader",
	name = "Mite Plaguespreader",
	rarity = 1,
	pos = {x = 21, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mite"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mite_plaguespreader"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mite_plaguespreader"
SRL_MOD.modded_jokers_mite[#SRL_MOD.modded_jokers_mite + 1] = "j_srl_mite_plaguespreader"

--- Mite Skirmisher ---

SMODS.Joker{
	key = "mite_skirmisher",
	name = "Mite Skirmisher",
	rarity = 1,
	pos = {x = 22, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mite"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mite_skirmisher"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mite_skirmisher"
SRL_MOD.modded_jokers_mite[#SRL_MOD.modded_jokers_mite + 1] = "j_srl_mite_skirmisher"

--- Mite Webweaver ---

SMODS.Joker{
	key = "mite_webweaver",
	name = "Mite Webweaver",
	rarity = 1,
	pos = {x = 23, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mite"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mite_webweaver"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mite_webweaver"
SRL_MOD.modded_jokers_mite[#SRL_MOD.modded_jokers_mite + 1] = "j_srl_mite_webweaver"

--- Chaos Guard ---

SMODS.Joker{
	key = "chaos_guard",
	name = "Chaos Guard",
	rarity = 1,
	pos = {x = 24, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doomguard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chaos_guard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_chaos_guard"
SRL_MOD.modded_jokers_doomguard = {}
SRL_MOD.modded_jokers_doomguard[#SRL_MOD.modded_jokers_doomguard + 1] = "j_srl_chaos_guard"

--- Death Guard ---

SMODS.Joker{
	key = "death_guard",
	name = "Death Guard",
	rarity = 1,
	pos = {x = 25, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doomguard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_death_guard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_death_guard"
SRL_MOD.modded_jokers_doomguard[#SRL_MOD.modded_jokers_doomguard + 1] = "j_srl_death_guard"

--- Pit Guard ---

SMODS.Joker{
	key = "pit_guard",
	name = "Pit Guard",
	rarity = 1,
	pos = {x = 26, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doomguard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_guard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_pit_guard"
SRL_MOD.modded_jokers_doomguard[#SRL_MOD.modded_jokers_doomguard + 1] = "j_srl_pit_guard"

--- Infernal Guard ---

SMODS.Joker{
	key = "infernal_guard",
	name = "Infernal Guard",
	rarity = 1,
	pos = {x = 27, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doomguard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_infernal_guard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_infernal_guard"
SRL_MOD.modded_jokers_doomguard[#SRL_MOD.modded_jokers_doomguard + 1] = "j_srl_infernal_guard"

--- Abaddon Guard ---

SMODS.Joker{
	key = "abaddon_guard",
	name = "Abaddon Guard",
	rarity = 1,
	pos = {x = 28, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doomguard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abaddon_guard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_abaddon_guard"
SRL_MOD.modded_jokers_doomguard[#SRL_MOD.modded_jokers_doomguard + 1] = "j_srl_abaddon_guard"

--- Perdition Guard ---

SMODS.Joker{
	key = "perdition_guard",
	name = "Perdition Guard",
	rarity = 1,
	pos = {x = 29, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doomguard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_perdition_guard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_perdition_guard"
SRL_MOD.modded_jokers_doomguard[#SRL_MOD.modded_jokers_doomguard + 1] = "j_srl_perdition_guard"

--- Goretongue Gargoyle ---

SMODS.Joker{
	key = "goretongue_gargoyle",
	name = "Goretongue Gargoyle",
	rarity = 1,
	pos = {x = 30, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_goretongue_gargoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_goretongue_gargoyle"
SRL_MOD.modded_jokers_gargoyle = {}
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_goretongue_gargoyle"

--- Dusktail Gargoyle ---

SMODS.Joker{
	key = "dusktail_gargoyle",
	name = "Dusktail Gargoyle",
	rarity = 1,
	pos = {x = 31, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dusktail_gargoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_dusktail_gargoyle"
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_dusktail_gargoyle"

--- Nightwing Gargoyle ---

SMODS.Joker{
	key = "nightwing_gargoyle",
	name = "Nightwing Gargoyle",
	rarity = 1,
	pos = {x = 32, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nightwing_gargoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_nightwing_gargoyle"
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_nightwing_gargoyle"

--- Bloodfang Gargoyle ---

SMODS.Joker{
	key = "bloodfang_gargoyle",
	name = "Bloodfang Gargoyle",
	rarity = 1,
	pos = {x = 33, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bloodfang_gargoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_bloodfang_gargoyle"
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_bloodfang_gargoyle"

--- Sunclaw Gargoyle ---

SMODS.Joker{
	key = "sunclaw_gargoyle",
	name = "Sunclaw Gargoyle",
	rarity = 1,
	pos = {x = 34, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sunclaw_gargoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_sunclaw_gargoyle"
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_sunclaw_gargoyle"

--- Darkeye Gargoyle ---

SMODS.Joker{
	key = "darkeye_gargoyle",
	name = "Darkeye Gargoyle",
	rarity = 1,
	pos = {x = 35, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_darkeye_gargoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_darkeye_gargoyle"
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_darkeye_gargoyle"

--- Fallen Carnage ---

SMODS.Joker{
	key = "fallen_carnage",
	name = "Fallen Carnage",
	rarity = 1,
	pos = {x = 36, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Carnage"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_fallen_carnage"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_fallen_carnage"
SRL_MOD.modded_jokers_carnage = {}
SRL_MOD.modded_jokers_carnage[#SRL_MOD.modded_jokers_carnage + 1] = "j_srl_fallen_carnage"

--- Rotten Carnage ---

SMODS.Joker{
	key = "rotten_carnage",
	name = "Rotten Carnage",
	rarity = 1,
	pos = {x = 37, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Carnage"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rotten_carnage"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_rotten_carnage"
SRL_MOD.modded_jokers_carnage[#SRL_MOD.modded_jokers_carnage + 1] = "j_srl_rotten_carnage"

--- Shadow Carnage ---

SMODS.Joker{
	key = "shadow_carnage",
	name = "Shadow Carnage",
	rarity = 1,
	pos = {x = 38, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Carnage"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_carnage"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_carnage"
SRL_MOD.modded_jokers_carnage[#SRL_MOD.modded_jokers_carnage + 1] = "j_srl_shadow_carnage"

--- Carnage Antagonizer ---

SMODS.Joker{
	key = "carnage_antagonizer",
	name = "Carnage Antagonizer",
	rarity = 1,
	pos = {x = 39, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Carnage"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carnage_antagonizer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_carnage_antagonizer"
SRL_MOD.modded_jokers_carnage[#SRL_MOD.modded_jokers_carnage + 1] = "j_srl_carnage_antagonizer"

--- Carnage Tormenter ---

SMODS.Joker{
	key = "carnage_tormenter",
	name = "Carnage Tormenter",
	rarity = 1,
	pos = {x = 40, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Carnage"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carnage_tormenter"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_carnage_tormenter"
SRL_MOD.modded_jokers_carnage[#SRL_MOD.modded_jokers_carnage + 1] = "j_srl_carnage_tormenter"

--- Carnage Destructor ---

SMODS.Joker{
	key = "carnage_destructor",
	name = "Carnage Destructor",
	rarity = 1,
	pos = {x = 41, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Carnage"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carnage_destructor"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_carnage_destructor"
SRL_MOD.modded_jokers_carnage[#SRL_MOD.modded_jokers_carnage + 1] = "j_srl_carnage_destructor"

--- Pilwiz Guardian ---

SMODS.Joker{
	key = "pilwiz_guardian",
	name = "Pilwiz Guardian",
	rarity = 1,
	pos = {x = 42, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pilwiz_guardian"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_pilwiz_guardian"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_pilwiz_guardian"

--- Pilwiz Slasher ---

SMODS.Joker{
	key = "pilwiz_slasher",
	name = "Pilwiz Slasher",
	rarity = 1,
	pos = {x = 43, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pilwiz_slasher"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_pilwiz_slasher"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_pilwiz_slasher"

--- Arcane Pilwiz ---

SMODS.Joker{
	key = "arcane_pilwiz",
	name = "Arcane Pilwiz",
	rarity = 1,
	pos = {x = 44, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_arcane_pilwiz"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_arcane_pilwiz"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_arcane_pilwiz"

--- Flamehook Pilwiz ---

SMODS.Joker{
	key = "flamehook_pilwiz",
	name = "Flamehook Pilwiz",
	rarity = 1,
	pos = {x = 45, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_flamehook_pilwiz"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_flamehook_pilwiz"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_flamehook_pilwiz"

--- Darkscythe Pilwiz ---

SMODS.Joker{
	key = "darkscythe_pilwiz",
	name = "Darkscythe Pilwiz",
	rarity = 1,
	pos = {x = 46, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_darkscythe_pilwiz"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_darkscythe_pilwiz"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_darkscythe_pilwiz"

--- Steampowered Pilwiz ---

SMODS.Joker{
	key = "steampowered_pilwiz",
	name = "Steampowered Pilwiz",
	rarity = 1,
	pos = {x = 47, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_steampowered_pilwiz"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_steampowered_pilwiz"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_steampowered_pilwiz"

--- Abyss Banshee ---

SMODS.Joker{
	key = "abyss_banshee",
	name = "Abyss Banshee",
	rarity = 1,
	pos = {x = 48, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abyss_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_abyss_banshee"
SRL_MOD.modded_jokers_banshee = {}
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_abyss_banshee"

--- Savage Banshee ---

SMODS.Joker{
	key = "savage_banshee",
	name = "Savage Banshee",
	rarity = 1,
	pos = {x = 49, y = 4},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_savage_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_savage_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_savage_banshee"

--- Valentine Banshee ---

SMODS.Joker{
	key = "valentine_banshee",
	name = "Valentine Banshee",
	rarity = 1,
	pos = {x = 0, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valentine_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_valentine_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_valentine_banshee"

--- Anguish Banshee ---

SMODS.Joker{
	key = "anguish_banshee",
	name = "Anguish Banshee",
	rarity = 1,
	pos = {x = 1, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_anguish_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_anguish_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_anguish_banshee"

--- Impaler Banshee ---

SMODS.Joker{
	key = "impaler_banshee",
	name = "Impaler Banshee",
	rarity = 1,
	pos = {x = 2, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_impaler_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_impaler_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_impaler_banshee"

--- Styx Banshee ---

SMODS.Joker{
	key = "styx_banshee",
	name = "Styx Banshee",
	rarity = 1,
	pos = {x = 3, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_styx_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_styx_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_styx_banshee"

--- Destruction Banshee ---

SMODS.Joker{
	key = "destruction_banshee",
	name = "Destruction Banshee",
	rarity = 1,
	pos = {x = 4, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_destruction_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_destruction_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_destruction_banshee"

--- Pit Worm Tunneler ---

SMODS.Joker{
	key = "pit_worm_tunneler",
	name = "Pit Worm Tunneler",
	rarity = 1,
	pos = {x = 5, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_worm_tunneler"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_worm_tunneler"
SRL_MOD.modded_jokers_pit_worm = {}
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_pit_worm_tunneler"

--- Spitting Pit Worm ---

SMODS.Joker{
	key = "spitting_pit_worm",
	name = "Spitting Pit Worm",
	rarity = 1,
	pos = {x = 6, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spitting_pit_worm"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_spitting_pit_worm"
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_spitting_pit_worm"

--- Pit Worm Gladiator ---

SMODS.Joker{
	key = "pit_worm_gladiator",
	name = "Pit Worm Gladiator",
	rarity = 1,
	pos = {x = 7, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_worm_gladiator"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_worm_gladiator"
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_pit_worm_gladiator"

--- Accursed Pit Worm ---

SMODS.Joker{
	key = "accursed_pit_worm",
	name = "Accursed Pit Worm",
	rarity = 1,
	pos = {x = 8, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_accursed_pit_worm"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_accursed_pit_worm"
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_accursed_pit_worm"

--- Pit Worm Harbinger ---

SMODS.Joker{
	key = "pit_worm_harbinger",
	name = "Pit Worm Harbinger",
	rarity = 1,
	pos = {x = 9, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_worm_harbinger"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_worm_harbinger"
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_pit_worm_harbinger"

--- Vicious Pit Worm ---

SMODS.Joker{
	key = "vicious_pit_worm",
	name = "Vicious Pit Worm",
	rarity = 1,
	pos = {x = 10, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vicious_pit_worm"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_vicious_pit_worm"
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_vicious_pit_worm"

--- Ancient Spirit ---

SMODS.Joker{
	key = "ancient_spirit",
	name = "Ancient Spirit",
	rarity = 1,
	pos = {x = 11, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancient_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_ancient_spirit"
SRL_MOD.modded_jokers_spirit = {}
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_ancient_spirit"

--- Frozen Spirit ---

SMODS.Joker{
	key = "frozen_spirit",
	name = "Frozen Spirit",
	rarity = 1,
	pos = {x = 12, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frozen_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_frozen_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_frozen_spirit"

--- Succubus Spirit ---

SMODS.Joker{
	key = "succubus_spirit",
	name = "Succubus Spirit",
	rarity = 1,
	pos = {x = 13, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_succubus_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_succubus_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_succubus_spirit"

--- Willow Spirit ---

SMODS.Joker{
	key = "willow_spirit",
	name = "Willow Spirit",
	rarity = 1,
	pos = {x = 14, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_willow_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_willow_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_willow_spirit"

--- Exalted Spirit ---

SMODS.Joker{
	key = "exalted_spirit",
	name = "Exalted Spirit",
	rarity = 1,
	pos = {x = 15, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_exalted_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_exalted_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_exalted_spirit"

--- Clairvoyant Spirit ---

SMODS.Joker{
	key = "clairvoyant_spirit",
	name = "Clairvoyant Spirit",
	rarity = 1,
	pos = {x = 16, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_clairvoyant_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_clairvoyant_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_clairvoyant_spirit"

--- Pit Wraith Redeemer ---

SMODS.Joker{
	key = "pit_wraith_redeemer",
	name = "Pit Wraith Redeemer",
	rarity = 1,
	pos = {x = 17, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Wraith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_wraith_redeemer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_wraith_redeemer"
SRL_MOD.modded_jokers_pit_wraith = {}
SRL_MOD.modded_jokers_pit_wraith[#SRL_MOD.modded_jokers_pit_wraith + 1] = "j_srl_pit_wraith_redeemer"

--- Pit Wraith Dominator ---

SMODS.Joker{
	key = "pit_wraith_dominator",
	name = "Pit Wraith Dominator",
	rarity = 1,
	pos = {x = 18, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Wraith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_wraith_dominator"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_wraith_dominator"
SRL_MOD.modded_jokers_pit_wraith[#SRL_MOD.modded_jokers_pit_wraith + 1] = "j_srl_pit_wraith_dominator"

--- Pit Wraith Liberator ---

SMODS.Joker{
	key = "pit_wraith_liberator",
	name = "Pit Wraith Liberator",
	rarity = 1,
	pos = {x = 19, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Wraith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_wraith_liberator"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_wraith_liberator"
SRL_MOD.modded_jokers_pit_wraith[#SRL_MOD.modded_jokers_pit_wraith + 1] = "j_srl_pit_wraith_liberator"

--- Pit Wraith Lord ---

SMODS.Joker{
	key = "pit_wraith_lord",
	name = "Pit Wraith Lord",
	rarity = 1,
	pos = {x = 20, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Wraith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_wraith_lord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_wraith_lord"
SRL_MOD.modded_jokers_pit_wraith[#SRL_MOD.modded_jokers_pit_wraith + 1] = "j_srl_pit_wraith_lord"

--- Pit Wraith Overmind ---

SMODS.Joker{
	key = "pit_wraith_overmind",
	name = "Pit Wraith Overmind",
	rarity = 1,
	pos = {x = 21, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Wraith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_wraith_overmind"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_wraith_overmind"
SRL_MOD.modded_jokers_pit_wraith[#SRL_MOD.modded_jokers_pit_wraith + 1] = "j_srl_pit_wraith_overmind"

--- Pit Wraith Obliterator ---

SMODS.Joker{
	key = "pit_wraith_obliterator",
	name = "Pit Wraith Obliterator",
	rarity = 1,
	pos = {x = 22, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Wraith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_wraith_obliterator"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_wraith_obliterator"
SRL_MOD.modded_jokers_pit_wraith[#SRL_MOD.modded_jokers_pit_wraith + 1] = "j_srl_pit_wraith_obliterator"

--- Berserker Fiend ---

SMODS.Joker{
	key = "berserker_fiend",
	name = "Berserker Fiend",
	rarity = 1,
	pos = {x = 23, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Fiend"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_berserker_fiend"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_berserker_fiend"
SRL_MOD.modded_jokers_fiend = {}
SRL_MOD.modded_jokers_fiend[#SRL_MOD.modded_jokers_fiend + 1] = "j_srl_berserker_fiend"

--- Thrasher Fiend ---

SMODS.Joker{
	key = "thrasher_fiend",
	name = "Thrasher Fiend",
	rarity = 1,
	pos = {x = 24, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Fiend"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thrasher_fiend"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_thrasher_fiend"
SRL_MOD.modded_jokers_fiend[#SRL_MOD.modded_jokers_fiend + 1] = "j_srl_thrasher_fiend"

--- Mauler Fiend ---

SMODS.Joker{
	key = "mauler_fiend",
	name = "Mauler Fiend",
	rarity = 1,
	pos = {x = 25, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Fiend"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mauler_fiend"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mauler_fiend"
SRL_MOD.modded_jokers_fiend[#SRL_MOD.modded_jokers_fiend + 1] = "j_srl_mauler_fiend"

--- Destroyer Fiend ---

SMODS.Joker{
	key = "destroyer_fiend",
	name = "Destroyer Fiend",
	rarity = 1,
	pos = {x = 26, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Fiend"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_destroyer_fiend"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_destroyer_fiend"
SRL_MOD.modded_jokers_fiend[#SRL_MOD.modded_jokers_fiend + 1] = "j_srl_destroyer_fiend"

--- Annihilator Fiend ---

SMODS.Joker{
	key = "annihilator_fiend",
	name = "Annihilator Fiend",
	rarity = 1,
	pos = {x = 27, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Fiend"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_annihilator_fiend"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_annihilator_fiend"
SRL_MOD.modded_jokers_fiend[#SRL_MOD.modded_jokers_fiend + 1] = "j_srl_annihilator_fiend"

--- Ferocious Fiend ---

SMODS.Joker{
	key = "ferocious_fiend",
	name = "Ferocious Fiend",
	rarity = 1,
	pos = {x = 28, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Fiend"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ferocious_fiend"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ferocious_fiend"
SRL_MOD.modded_jokers_fiend[#SRL_MOD.modded_jokers_fiend + 1] = "j_srl_ferocious_fiend"

--- Brim Smith ---

SMODS.Joker{
	key = "brim_smith",
	name = "Brim Smith",
	rarity = 1,
	pos = {x = 29, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brim_smith"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_brim_smith"
SRL_MOD.modded_jokers_smith = {}
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_brim_smith"

--- Crystal Smith ---

SMODS.Joker{
	key = "crystal_smith",
	name = "Crystal Smith",
	rarity = 1,
	pos = {x = 30, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_crystal_smith"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_crystal_smith"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_crystal_smith"

--- Disease Crafter ---

SMODS.Joker{
	key = "disease_crafter",
	name = "Disease Crafter",
	rarity = 1,
	pos = {x = 31, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_disease_crafter"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_disease_crafter"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_disease_crafter"

--- Death Crafter ---

SMODS.Joker{
	key = "death_crafter",
	name = "Death Crafter",
	rarity = 1,
	pos = {x = 32, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_death_crafter"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_death_crafter"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_death_crafter"

--- Pestilence Crafter ---

SMODS.Joker{
	key = "pestilence_crafter",
	name = "Pestilence Crafter",
	rarity = 1,
	pos = {x = 33, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pestilence_crafter"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_pestilence_crafter"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_pestilence_crafter"

--- Hammer Lord ---

SMODS.Joker{
	key = "hammer_lord",
	name = "Hammer Lord",
	rarity = 1,
	pos = {x = 34, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hammer_lord"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_hammer_lord"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_hammer_lord"

--- Dark Brim Smith ---

SMODS.Joker{
	key = "dark_brim_smith",
	name = "Dark Brim Smith",
	rarity = 1,
	pos = {x = 35, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dark_brim_smith"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dark_brim_smith"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_dark_brim_smith"

--- Black Crystal Smith ---

SMODS.Joker{
	key = "black_crystal_smith",
	name = "Black Crystal Smith",
	rarity = 1,
	pos = {x = 36, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_black_crystal_smith"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_black_crystal_smith"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_black_crystal_smith"

--- Depravity Smith ---

SMODS.Joker{
	key = "depravity_smith",
	name = "Depravity Smith",
	rarity = 1,
	pos = {x = 37, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_depravity_smith"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_depravity_smith"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_depravity_smith"

--- Terror Hound ---

SMODS.Joker{
	key = "terror_hound",
	name = "Terror Hound",
	rarity = 1,
	pos = {x = 38, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_terror_hound"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_terror_hound"
SRL_MOD.modded_jokers_hound = {}
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_terror_hound"

--- Dread Hound ---

SMODS.Joker{
	key = "dread_hound",
	name = "Dread Hound",
	rarity = 1,
	pos = {x = 39, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dread_hound"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dread_hound"
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_dread_hound"

--- Panic Hound ---

SMODS.Joker{
	key = "panic_hound",
	name = "Panic Hound",
	rarity = 1,
	pos = {x = 40, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_panic_hound"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_panic_hound"
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_panic_hound"

--- Blood Hound ---

SMODS.Joker{
	key = "blood_hound",
	name = "Blood Hound",
	rarity = 1,
	pos = {x = 41, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blood_hound"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_blood_hound"
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_blood_hound"

--- Horror Hound ---

SMODS.Joker{
	key = "horror_hound",
	name = "Horror Hound",
	rarity = 1,
	pos = {x = 42, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_horror_hound"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_horror_hound"
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_horror_hound"

--- Hell Hound ---

SMODS.Joker{
	key = "hell_hound",
	name = "Hell Hound",
	rarity = 1,
	pos = {x = 43, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hell_hound"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_hell_hound"
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_hell_hound"

--- Bone Hound ---

SMODS.Joker{
	key = "bone_hound",
	name = "Bone Hound",
	rarity = 1,
	pos = {x = 44, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bone_hound"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_bone_hound"
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_bone_hound"

--- Timeless Master ---

SMODS.Joker{
	key = "timeless_master",
	name = "Timeless Master",
	rarity = 1,
	pos = {x = 45, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_timeless_master"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_timeless_master"
SRL_MOD.modded_jokers_demigod = {}
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_timeless_master"

--- Ceaseless Maker ---

SMODS.Joker{
	key = "ceaseless_maker",
	name = "Ceaseless Maker",
	rarity = 1,
	pos = {x = 46, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ceaseless_maker"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_ceaseless_maker"
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_ceaseless_maker"

--- Infinite Lord ---

SMODS.Joker{
	key = "infinite_lord",
	name = "Infinite Lord",
	rarity = 1,
	pos = {x = 47, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_infinite_lord"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_infinite_lord"
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_infinite_lord"

--- Celestial Idol ---

SMODS.Joker{
	key = "celestial_idol",
	name = "Celestial Idol",
	rarity = 1,
	pos = {x = 48, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_celestial_idol"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_celestial_idol"
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_celestial_idol"

--- Omnipotent Deity ---

SMODS.Joker{
	key = "omnipotent_deity",
	name = "Omnipotent Deity",
	rarity = 1,
	pos = {x = 49, y = 5},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_omnipotent_deity"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_omnipotent_deity"
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_omnipotent_deity"

--- Immortal King ---

SMODS.Joker{
	key = "immortal_king",
	name = "Immortal King",
	rarity = 1,
	pos = {x = 0, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_immortal_king"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_immortal_king"
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_immortal_king"

--- Servant Hunter ---

SMODS.Joker{
	key = "servant_hunter",
	name = "Servant Hunter",
	rarity = 1,
	pos = {x = 1, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_servant_hunter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_servant_hunter"
SRL_MOD.modded_jokers_hunter = {}
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_servant_hunter"

--- Light Hunter ---

SMODS.Joker{
	key = "light_hunter",
	name = "Light Hunter",
	rarity = 1,
	pos = {x = 2, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_light_hunter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_light_hunter"
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_light_hunter"

--- Moon Hunter ---

SMODS.Joker{
	key = "moon_hunter",
	name = "Moon Hunter",
	rarity = 1,
	pos = {x = 3, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_moon_hunter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_moon_hunter"
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_moon_hunter"

--- Faith Hunter ---

SMODS.Joker{
	key = "faith_hunter",
	name = "Faith Hunter",
	rarity = 1,
	pos = {x = 4, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_faith_hunter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_faith_hunter"
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_faith_hunter"

--- Hunter Director ---

SMODS.Joker{
	key = "hunter_director",
	name = "Hunter Director",
	rarity = 1,
	pos = {x = 5, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hunter_director"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_hunter_director"
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_hunter_director"

--- Heretic Hunter ---

SMODS.Joker{
	key = "heretic_hunter",
	name = "Heretic Hunter",
	rarity = 1,
	pos = {x = 6, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_heretic_hunter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_heretic_hunter"
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_heretic_hunter"

--- Diabolic Watchman ---

SMODS.Joker{
	key = "diabolic_watchman",
	name = "Diabolic Watchman",
	rarity = 1,
	pos = {x = 7, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_watchman"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_watchman"
SRL_MOD.modded_jokers_diabolic_horde = {}
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_watchman"

--- Diabolic Spectator ---

SMODS.Joker{
	key = "diabolic_spectator",
	name = "Diabolic Spectator",
	rarity = 1,
	pos = {x = 8, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_spectator"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_spectator"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_spectator"

--- Diabolic Intruder ---

SMODS.Joker{
	key = "diabolic_intruder",
	name = "Diabolic Intruder",
	rarity = 1,
	pos = {x = 9, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_intruder"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_intruder"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_intruder"

--- Diabolic Henchman ---

SMODS.Joker{
	key = "diabolic_henchman",
	name = "Diabolic Henchman",
	rarity = 1,
	pos = {x = 10, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_henchman"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_henchman"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_henchman"

--- Diabolic Commander ---

SMODS.Joker{
	key = "diabolic_commander",
	name = "Diabolic Commander",
	rarity = 1,
	pos = {x = 11, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_commander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_commander"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_commander"

--- Diabolic Observer ---

SMODS.Joker{
	key = "diabolic_observer",
	name = "Diabolic Observer",
	rarity = 1,
	pos = {x = 12, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_observer"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_observer"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_observer"

--- Diabolic Menace ---

SMODS.Joker{
	key = "diabolic_menace",
	name = "Diabolic Menace",
	rarity = 1,
	pos = {x = 13, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_menace"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_menace"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_menace"

--- Diabolic Nemesis ---

SMODS.Joker{
	key = "diabolic_nemesis",
	name = "Diabolic Nemesis",
	rarity = 1,
	pos = {x = 14, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_nemesis"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_nemesis"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_nemesis"

--- Diabolic Insurgent ---

SMODS.Joker{
	key = "diabolic_insurgent",
	name = "Diabolic Insurgent",
	rarity = 1,
	pos = {x = 15, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_insurgent"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_insurgent"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_insurgent"

--- Diabolic Rebel ---

SMODS.Joker{
	key = "diabolic_rebel",
	name = "Diabolic Rebel",
	rarity = 1,
	pos = {x = 16, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_rebel"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_rebel"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_rebel"

--- Skeleton Sniper ---

SMODS.Joker{
	key = "skeleton_sniper",
	name = "Skeleton Sniper",
	rarity = 1,
	pos = {x = 17, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Skeleton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skeleton_sniper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skeleton_sniper"
SRL_MOD.modded_jokers_skeleton = {}
SRL_MOD.modded_jokers_skeleton[#SRL_MOD.modded_jokers_skeleton + 1] = "j_srl_skeleton_sniper"

--- Skeleton Triggerman ---

SMODS.Joker{
	key = "skeleton_triggerman",
	name = "Skeleton Triggerman",
	rarity = 1,
	pos = {x = 18, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Skeleton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skeleton_triggerman"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skeleton_triggerman"
SRL_MOD.modded_jokers_skeleton[#SRL_MOD.modded_jokers_skeleton + 1] = "j_srl_skeleton_triggerman"

--- Skeleton Cannoneer ---

SMODS.Joker{
	key = "skeleton_cannoneer",
	name = "Skeleton Cannoneer",
	rarity = 1,
	pos = {x = 19, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Skeleton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skeleton_cannoneer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skeleton_cannoneer"
SRL_MOD.modded_jokers_skeleton[#SRL_MOD.modded_jokers_skeleton + 1] = "j_srl_skeleton_cannoneer"

--- Skeleton Marksman ---

SMODS.Joker{
	key = "skeleton_marksman",
	name = "Skeleton Marksman",
	rarity = 1,
	pos = {x = 20, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Skeleton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skeleton_marksman"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skeleton_marksman"
SRL_MOD.modded_jokers_skeleton[#SRL_MOD.modded_jokers_skeleton + 1] = "j_srl_skeleton_marksman"

--- Skeleton Mortarman ---

SMODS.Joker{
	key = "skeleton_mortarman",
	name = "Skeleton Mortarman",
	rarity = 1,
	pos = {x = 21, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Skeleton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skeleton_mortarman"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skeleton_mortarman"
SRL_MOD.modded_jokers_skeleton[#SRL_MOD.modded_jokers_skeleton + 1] = "j_srl_skeleton_mortarman"

--- Skeleton Gunslinger ---

SMODS.Joker{
	key = "skeleton_gunslinger",
	name = "Skeleton Gunslinger",
	rarity = 1,
	pos = {x = 22, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Skeleton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skeleton_gunslinger"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skeleton_gunslinger"
SRL_MOD.modded_jokers_skeleton[#SRL_MOD.modded_jokers_skeleton + 1] = "j_srl_skeleton_gunslinger"

--- Fire Priest ---

SMODS.Joker{
	key = "fire_priest",
	name = "Fire Priest",
	rarity = 1,
	pos = {x = 23, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_fire_priest"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_fire_priest"
SRL_MOD.modded_jokers_priest = {}
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_fire_priest"

--- Water Priest ---

SMODS.Joker{
	key = "water_priest",
	name = "Water Priest",
	rarity = 1,
	pos = {x = 24, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_water_priest"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_water_priest"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_water_priest"

--- Forest Priest ---

SMODS.Joker{
	key = "forest_priest",
	name = "Forest Priest",
	rarity = 1,
	pos = {x = 25, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forest_priest"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_forest_priest"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_forest_priest"

--- Mountain Priest ---

SMODS.Joker{
	key = "mountain_priest",
	name = "Mountain Priest",
	rarity = 1,
	pos = {x = 26, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mountain_priest"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_mountain_priest"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_mountain_priest"

--- War Priest ---

SMODS.Joker{
	key = "war_priest",
	name = "War Priest",
	rarity = 1,
	pos = {x = 27, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_war_priest"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_war_priest"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_war_priest"

--- Desert Priest ---

SMODS.Joker{
	key = "desert_priest",
	name = "Desert Priest",
	rarity = 1,
	pos = {x = 28, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_desert_priest"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_desert_priest"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_desert_priest"

--- Priest of Light ---

SMODS.Joker{
	key = "priest_of_light",
	name = "Priest of Light",
	rarity = 1,
	pos = {x = 29, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_priest_of_light"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_priest_of_light"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_priest_of_light"

--- Priest of Radiance ---

SMODS.Joker{
	key = "priest_of_radiance",
	name = "Priest of Radiance",
	rarity = 1,
	pos = {x = 30, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_priest_of_radiance"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_priest_of_radiance"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_priest_of_radiance"

--- Forsaken Swampdweller ---

SMODS.Joker{
	key = "forsaken_swampdweller",
	name = "Forsaken Swampdweller",
	rarity = 1,
	pos = {x = 31, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Forsaken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forsaken_swampdweller"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forsaken_swampdweller"
SRL_MOD.modded_jokers_forsaken = {}
SRL_MOD.modded_jokers_forsaken[#SRL_MOD.modded_jokers_forsaken + 1] = "j_srl_forsaken_swampdweller"

--- Forsaken Rotmongerer ---

SMODS.Joker{
	key = "forsaken_rotmongerer",
	name = "Forsaken Rotmongerer",
	rarity = 1,
	pos = {x = 32, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Forsaken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forsaken_rotmongerer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forsaken_rotmongerer"
SRL_MOD.modded_jokers_forsaken[#SRL_MOD.modded_jokers_forsaken + 1] = "j_srl_forsaken_rotmongerer"

--- Forsaken Seacrawler ---

SMODS.Joker{
	key = "forsaken_seacrawler",
	name = "Forsaken Seacrawler",
	rarity = 1,
	pos = {x = 33, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Forsaken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forsaken_seacrawler"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forsaken_seacrawler"
SRL_MOD.modded_jokers_forsaken[#SRL_MOD.modded_jokers_forsaken + 1] = "j_srl_forsaken_seacrawler"

--- Forsaken Bonescraper ---

SMODS.Joker{
	key = "forsaken_bonescraper",
	name = "Forsaken Bonescraper",
	rarity = 1,
	pos = {x = 34, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Forsaken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forsaken_bonescraper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forsaken_bonescraper"
SRL_MOD.modded_jokers_forsaken[#SRL_MOD.modded_jokers_forsaken + 1] = "j_srl_forsaken_bonescraper"

--- Forsaken Scourgewalker ---

SMODS.Joker{
	key = "forsaken_scourgewalker",
	name = "Forsaken Scourgewalker",
	rarity = 1,
	pos = {x = 35, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Forsaken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forsaken_scourgewalker"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forsaken_scourgewalker"
SRL_MOD.modded_jokers_forsaken[#SRL_MOD.modded_jokers_forsaken + 1] = "j_srl_forsaken_scourgewalker"

--- Forsaken Spinewhipper ---

SMODS.Joker{
	key = "forsaken_spinewhipper",
	name = "Forsaken Spinewhipper",
	rarity = 1,
	pos = {x = 36, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Forsaken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forsaken_spinewhipper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forsaken_spinewhipper"
SRL_MOD.modded_jokers_forsaken[#SRL_MOD.modded_jokers_forsaken + 1] = "j_srl_forsaken_spinewhipper"

--- Sandstone Imler ---

SMODS.Joker{
	key = "sandstone_imler",
	name = "Sandstone Imler",
	rarity = 1,
	pos = {x = 37, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sandstone_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_sandstone_imler"
SRL_MOD.modded_jokers_imler = {}
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_sandstone_imler"

--- Redstone Imler ---

SMODS.Joker{
	key = "redstone_imler",
	name = "Redstone Imler",
	rarity = 1,
	pos = {x = 38, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_redstone_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_redstone_imler"
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_redstone_imler"

--- Boulder Imler ---

SMODS.Joker{
	key = "boulder_imler",
	name = "Boulder Imler",
	rarity = 1,
	pos = {x = 39, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_boulder_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_boulder_imler"
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_boulder_imler"

--- Iron Imler ---

SMODS.Joker{
	key = "iron_imler",
	name = "Iron Imler",
	rarity = 1,
	pos = {x = 40, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_iron_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_iron_imler"
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_iron_imler"

--- Silver Imler ---

SMODS.Joker{
	key = "silver_imler",
	name = "Silver Imler",
	rarity = 1,
	pos = {x = 41, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_silver_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_silver_imler"
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_silver_imler"

--- Mithril Imler ---

SMODS.Joker{
	key = "mithril_imler",
	name = "Mithril Imler",
	rarity = 1,
	pos = {x = 42, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mithril_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mithril_imler"
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_mithril_imler"

--- Varve Imling ---

SMODS.Joker{
	key = "varve_imling",
	name = "Varve Imling",
	rarity = 1,
	pos = {x = 43, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_varve_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_varve_imling"
SRL_MOD.modded_jokers_imling = {}
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_varve_imling"

--- Leda Imling ---

SMODS.Joker{
	key = "leda_imling",
	name = "Leda Imling",
	rarity = 1,
	pos = {x = 44, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_leda_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_leda_imling"
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_leda_imling"

--- Tainted Imling ---

SMODS.Joker{
	key = "tainted_imling",
	name = "Tainted Imling",
	rarity = 1,
	pos = {x = 45, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tainted_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_tainted_imling"
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_tainted_imling"

--- Putrid Imling ---

SMODS.Joker{
	key = "putrid_imling",
	name = "Putrid Imling",
	rarity = 1,
	pos = {x = 46, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_putrid_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_putrid_imling"
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_putrid_imling"

--- Rancid Imling ---

SMODS.Joker{
	key = "rancid_imling",
	name = "Rancid Imling",
	rarity = 1,
	pos = {x = 47, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rancid_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_rancid_imling"
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_rancid_imling"

--- Diamond Imling ---

SMODS.Joker{
	key = "diamond_imling",
	name = "Diamond Imling",
	rarity = 1,
	pos = {x = 48, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diamond_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_diamond_imling"
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_diamond_imling"

--- Sand Giant ---

SMODS.Joker{
	key = "sand_giant",
	name = "Sand Giant",
	rarity = 1,
	pos = {x = 49, y = 6},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sand_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_sand_giant"
SRL_MOD.modded_jokers_giant = {}
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_sand_giant"

--- Stone Giant ---

SMODS.Joker{
	key = "stone_giant",
	name = "Stone Giant",
	rarity = 1,
	pos = {x = 0, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stone_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_stone_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_stone_giant"

--- Wall Giant ---

SMODS.Joker{
	key = "wall_giant",
	name = "Wall Giant",
	rarity = 1,
	pos = {x = 1, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wall_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_wall_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_wall_giant"

--- Tower Giant ---

SMODS.Joker{
	key = "tower_giant",
	name = "Tower Giant",
	rarity = 1,
	pos = {x = 2, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tower_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_tower_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_tower_giant"

--- Cosmic Giant ---

SMODS.Joker{
	key = "cosmic_giant",
	name = "Cosmic Giant",
	rarity = 1,
	pos = {x = 3, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cosmic_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_cosmic_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_cosmic_giant"

--- Colossal Giant ---

SMODS.Joker{
	key = "colossal_giant",
	name = "Colossal Giant",
	rarity = 1,
	pos = {x = 4, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_colossal_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_colossal_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_colossal_giant"

--- Giant Mangler ---

SMODS.Joker{
	key = "giant_mangler",
	name = "Giant Mangler",
	rarity = 1,
	pos = {x = 5, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_giant_mangler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_giant_mangler"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_giant_mangler"

--- Vicious Wolpertinger ---

SMODS.Joker{
	key = "vicious_wolpertinger",
	name = "Vicious Wolpertinger",
	rarity = 1,
	pos = {x = 6, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vicious_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_vicious_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger = {}
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_vicious_wolpertinger"

--- Vile Wolpertinger ---

SMODS.Joker{
	key = "vile_wolpertinger",
	name = "Vile Wolpertinger",
	rarity = 1,
	pos = {x = 7, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vile_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_vile_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_vile_wolpertinger"

--- Volatile Wolpertinger ---

SMODS.Joker{
	key = "volatile_wolpertinger",
	name = "Volatile Wolpertinger",
	rarity = 1,
	pos = {x = 8, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_volatile_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_volatile_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_volatile_wolpertinger"

--- Volcanic Wolpertinger ---

SMODS.Joker{
	key = "volcanic_wolpertinger",
	name = "Volcanic Wolpertinger",
	rarity = 1,
	pos = {x = 9, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_volcanic_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_volcanic_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_volcanic_wolpertinger"

--- Viridian Wolpertinger ---

SMODS.Joker{
	key = "viridian_wolpertinger",
	name = "Viridian Wolpertinger",
	rarity = 1,
	pos = {x = 10, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_viridian_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_viridian_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_viridian_wolpertinger"

--- Vampiric Wolpertinger ---

SMODS.Joker{
	key = "vampiric_wolpertinger",
	name = "Vampiric Wolpertinger",
	rarity = 1,
	pos = {x = 11, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vampiric_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_vampiric_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_vampiric_wolpertinger"

--- Dumpling ---

SMODS.Joker{
	key = "dumpling",
	name = "Dumpling",
	rarity = 1,
	pos = {x = 12, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dumpling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dumpling"
SRL_MOD.modded_jokers_dumpling = {}
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_dumpling"

--- Apis Charger ---

SMODS.Joker{
	key = "apis_charger",
	name = "Apis Charger",
	rarity = 1,
	pos = {x = 13, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_charger"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_charger"
SRL_MOD.modded_jokers_apis = {}
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_charger"

--- Apis Defender ---

SMODS.Joker{
	key = "apis_defender",
	name = "Apis Defender",
	rarity = 1,
	pos = {x = 14, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_defender"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_defender"
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_defender"

--- Apis Endurer ---

SMODS.Joker{
	key = "apis_endurer",
	name = "Apis Endurer",
	rarity = 1,
	pos = {x = 15, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_endurer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_endurer"
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_endurer"

--- Apis Guardian ---

SMODS.Joker{
	key = "apis_guardian",
	name = "Apis Guardian",
	rarity = 1,
	pos = {x = 16, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_guardian"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_guardian"
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_guardian"

--- Apis Majesty ---

SMODS.Joker{
	key = "apis_majesty",
	name = "Apis Majesty",
	rarity = 1,
	pos = {x = 17, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_majesty"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_majesty"
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_majesty"

--- Apis Protector ---

SMODS.Joker{
	key = "apis_protector",
	name = "Apis Protector",
	rarity = 1,
	pos = {x = 18, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_protector"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_protector"
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_protector"

--- Aen Rift Dancer ---

SMODS.Joker{
	key = "aen_rift_dancer",
	name = "Aen Rift Dancer",
	rarity = 1,
	pos = {x = 19, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Rift Dancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aen_rift_dancer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_aen_rift_dancer"
SRL_MOD.modded_jokers_rift_dancer = {}
SRL_MOD.modded_jokers_rift_dancer[#SRL_MOD.modded_jokers_rift_dancer + 1] = "j_srl_aen_rift_dancer"

--- Aerum Rift Dancer ---

SMODS.Joker{
	key = "aerum_rift_dancer",
	name = "Aerum Rift Dancer",
	rarity = 1,
	pos = {x = 20, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Rift Dancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aerum_rift_dancer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_aerum_rift_dancer"
SRL_MOD.modded_jokers_rift_dancer[#SRL_MOD.modded_jokers_rift_dancer + 1] = "j_srl_aerum_rift_dancer"

--- Inaer Rift Dancer ---

SMODS.Joker{
	key = "inaer_rift_dancer",
	name = "Inaer Rift Dancer",
	rarity = 1,
	pos = {x = 21, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Rift Dancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_inaer_rift_dancer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_inaer_rift_dancer"
SRL_MOD.modded_jokers_rift_dancer[#SRL_MOD.modded_jokers_rift_dancer + 1] = "j_srl_inaer_rift_dancer"

--- Nadin Rift Dancer ---

SMODS.Joker{
	key = "nadin_rift_dancer",
	name = "Nadin Rift Dancer",
	rarity = 1,
	pos = {x = 22, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Rift Dancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nadin_rift_dancer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nadin_rift_dancer"
SRL_MOD.modded_jokers_rift_dancer[#SRL_MOD.modded_jokers_rift_dancer + 1] = "j_srl_nadin_rift_dancer"

--- Ramun Rift Dancer ---

SMODS.Joker{
	key = "ramun_rift_dancer",
	name = "Ramun Rift Dancer",
	rarity = 1,
	pos = {x = 23, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Rift Dancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ramun_rift_dancer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_ramun_rift_dancer"
SRL_MOD.modded_jokers_rift_dancer[#SRL_MOD.modded_jokers_rift_dancer + 1] = "j_srl_ramun_rift_dancer"

--- Crazed Leper ---

SMODS.Joker{
	key = "crazed_leper",
	name = "Crazed Leper",
	rarity = 1,
	pos = {x = 24, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_crazed_leper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_crazed_leper"
SRL_MOD.modded_jokers_leper = {}
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_crazed_leper"

--- Leper Blightbringer ---

SMODS.Joker{
	key = "leper_blightbringer",
	name = "Leper Blightbringer",
	rarity = 1,
	pos = {x = 25, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_leper_blightbringer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_leper_blightbringer"
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_leper_blightbringer"

--- Leper Defiler ---

SMODS.Joker{
	key = "leper_defiler",
	name = "Leper Defiler",
	rarity = 1,
	pos = {x = 26, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_leper_defiler"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_leper_defiler"
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_leper_defiler"

--- Leper Plaguespreader ---

SMODS.Joker{
	key = "leper_plaguespreader",
	name = "Leper Plaguespreader",
	rarity = 1,
	pos = {x = 27, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_leper_plaguespreader"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_leper_plaguespreader"
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_leper_plaguespreader"

--- Blood Leper ---

SMODS.Joker{
	key = "blood_leper",
	name = "Blood Leper",
	rarity = 1,
	pos = {x = 28, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blood_leper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_blood_leper"
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_blood_leper"

--- Tortured Leper ---

SMODS.Joker{
	key = "tortured_leper",
	name = "Tortured Leper",
	rarity = 1,
	pos = {x = 29, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tortured_leper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_tortured_leper"
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_tortured_leper"

--- Blood Crusader ---

SMODS.Joker{
	key = "blood_crusader",
	name = "Blood Crusader",
	rarity = 1,
	pos = {x = 30, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blood_crusader"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_blood_crusader"
SRL_MOD.modded_jokers_crusader = {}
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_blood_crusader"

--- Dawn Crusader ---

SMODS.Joker{
	key = "dawn_crusader",
	name = "Dawn Crusader",
	rarity = 1,
	pos = {x = 31, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dawn_crusader"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_dawn_crusader"
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_dawn_crusader"

--- Dusk Crusader ---

SMODS.Joker{
	key = "dusk_crusader",
	name = "Dusk Crusader",
	rarity = 1,
	pos = {x = 32, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dusk_crusader"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_dusk_crusader"
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_dusk_crusader"

--- Holy Crusader ---

SMODS.Joker{
	key = "holy_crusader",
	name = "Holy Crusader",
	rarity = 1,
	pos = {x = 33, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_holy_crusader"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_holy_crusader"
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_holy_crusader"

--- Mist Crusader ---

SMODS.Joker{
	key = "mist_crusader",
	name = "Mist Crusader",
	rarity = 1,
	pos = {x = 34, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mist_crusader"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_mist_crusader"
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_mist_crusader"

--- Sun Crusader ---

SMODS.Joker{
	key = "sun_crusader",
	name = "Sun Crusader",
	rarity = 1,
	pos = {x = 35, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sun_crusader"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sun_crusader"
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_sun_crusader"

--- Griffon Divebomber ---

SMODS.Joker{
	key = "griffon_divebomber",
	name = "Griffon Divebomber",
	rarity = 1,
	pos = {x = 36, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_griffon_divebomber"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_griffon_divebomber"
SRL_MOD.modded_jokers_griffon = {}
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_griffon_divebomber"

--- Assault Griffon ---

SMODS.Joker{
	key = "assault_griffon",
	name = "Assault Griffon",
	rarity = 1,
	pos = {x = 37, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_assault_griffon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_assault_griffon"
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_assault_griffon"

--- Griffon Dreamfinder ---

SMODS.Joker{
	key = "griffon_dreamfinder",
	name = "Griffon Dreamfinder",
	rarity = 1,
	pos = {x = 38, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_griffon_dreamfinder"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_griffon_dreamfinder"
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_griffon_dreamfinder"

--- Griffon Screecher ---

SMODS.Joker{
	key = "griffon_screecher",
	name = "Griffon Screecher",
	rarity = 1,
	pos = {x = 39, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_griffon_screecher"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_griffon_screecher"
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_griffon_screecher"

--- Razorfoot Griffon ---

SMODS.Joker{
	key = "razorfoot_griffon",
	name = "Razorfoot Griffon",
	rarity = 1,
	pos = {x = 40, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_razorfoot_griffon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_razorfoot_griffon"
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_razorfoot_griffon"

--- Silverclaw Griffon ---

SMODS.Joker{
	key = "silverclaw_griffon",
	name = "Silverclaw Griffon",
	rarity = 1,
	pos = {x = 41, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_silverclaw_griffon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_silverclaw_griffon"
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_silverclaw_griffon"

--- Narklin Ophan ---

SMODS.Joker{
	key = "narklin_ophan",
	name = "Narklin Ophan",
	rarity = 1,
	pos = {x = 42, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Ophan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_narklin_ophan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_narklin_ophan"
SRL_MOD.modded_jokers_ophan = {}
SRL_MOD.modded_jokers_ophan[#SRL_MOD.modded_jokers_ophan + 1] = "j_srl_narklin_ophan"

--- Burhua Ophan ---

SMODS.Joker{
	key = "burhua_ophan",
	name = "Burhua Ophan",
	rarity = 1,
	pos = {x = 43, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Ophan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_burhua_ophan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_burhua_ophan"
SRL_MOD.modded_jokers_ophan[#SRL_MOD.modded_jokers_ophan + 1] = "j_srl_burhua_ophan"

--- Enim Ophan ---

SMODS.Joker{
	key = "enim_ophan",
	name = "Enim Ophan",
	rarity = 1,
	pos = {x = 44, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Ophan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_enim_ophan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_enim_ophan"
SRL_MOD.modded_jokers_ophan[#SRL_MOD.modded_jokers_ophan + 1] = "j_srl_enim_ophan"

--- Geylian Ophan ---

SMODS.Joker{
	key = "geylian_ophan",
	name = "Geylian Ophan",
	rarity = 1,
	pos = {x = 45, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Ophan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_geylian_ophan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_geylian_ophan"
SRL_MOD.modded_jokers_ophan[#SRL_MOD.modded_jokers_ophan + 1] = "j_srl_geylian_ophan"

--- Irantha Ophan ---

SMODS.Joker{
	key = "irantha_ophan",
	name = "Irantha Ophan",
	rarity = 1,
	pos = {x = 46, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Ophan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_irantha_ophan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_irantha_ophan"
SRL_MOD.modded_jokers_ophan[#SRL_MOD.modded_jokers_ophan + 1] = "j_srl_irantha_ophan"

--- Mitida Ophan ---

SMODS.Joker{
	key = "mitida_ophan",
	name = "Mitida Ophan",
	rarity = 1,
	pos = {x = 47, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Ophan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mitida_ophan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_mitida_ophan"
SRL_MOD.modded_jokers_ophan[#SRL_MOD.modded_jokers_ophan + 1] = "j_srl_mitida_ophan"

--- Ira Sin ---

SMODS.Joker{
	key = "ira_sin",
	name = "Ira Sin",
	rarity = 1,
	pos = {x = 48, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ira_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_ira_sin"
SRL_MOD.modded_jokers_sin = {}
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_ira_sin"

--- Superbia Sin ---

SMODS.Joker{
	key = "superbia_sin",
	name = "Superbia Sin",
	rarity = 1,
	pos = {x = 49, y = 7},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_superbia_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_superbia_sin"
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_superbia_sin"

--- Acedia Sin ---

SMODS.Joker{
	key = "acedia_sin",
	name = "Acedia Sin",
	rarity = 1,
	pos = {x = 0, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_acedia_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_acedia_sin"
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_acedia_sin"

--- Avaritia Sin ---

SMODS.Joker{
	key = "avaritia_sin",
	name = "Avaritia Sin",
	rarity = 1,
	pos = {x = 1, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_avaritia_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_avaritia_sin"
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_avaritia_sin"

--- Gula Sin ---

SMODS.Joker{
	key = "gula_sin",
	name = "Gula Sin",
	rarity = 1,
	pos = {x = 2, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gula_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gula_sin"
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_gula_sin"

--- Invidia Sin ---

SMODS.Joker{
	key = "invidia_sin",
	name = "Invidia Sin",
	rarity = 1,
	pos = {x = 3, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_invidia_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_invidia_sin"
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_invidia_sin"

--- Luxuria Sin ---

SMODS.Joker{
	key = "luxuria_sin",
	name = "Luxuria Sin",
	rarity = 1,
	pos = {x = 4, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_luxuria_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_luxuria_sin"
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_luxuria_sin"

--- Humanitas Sanctus ---

SMODS.Joker{
	key = "humanitas_sanctus",
	name = "Humanitas Sanctus",
	rarity = 1,
	pos = {x = 5, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_humanitas_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_humanitas_sanctus"
SRL_MOD.modded_jokers_sanctus = {}
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_humanitas_sanctus"

--- Humilitas Sanctus ---

SMODS.Joker{
	key = "humilitas_sanctus",
	name = "Humilitas Sanctus",
	rarity = 1,
	pos = {x = 6, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_humilitas_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_humilitas_sanctus"
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_humilitas_sanctus"

--- Caritas Sanctus ---

SMODS.Joker{
	key = "caritas_sanctus",
	name = "Caritas Sanctus",
	rarity = 1,
	pos = {x = 7, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_caritas_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_caritas_sanctus"
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_caritas_sanctus"

--- Castitas Sanctus ---

SMODS.Joker{
	key = "castitas_sanctus",
	name = "Castitas Sanctus",
	rarity = 1,
	pos = {x = 8, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_castitas_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_castitas_sanctus"
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_castitas_sanctus"

--- Magnificus Sanctus ---

SMODS.Joker{
	key = "magnificus_sanctus",
	name = "Magnificus Sanctus",
	rarity = 1,
	pos = {x = 9, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_magnificus_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_magnificus_sanctus"
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_magnificus_sanctus"

--- Temperantias Sanctus ---

SMODS.Joker{
	key = "temperantias_sanctus",
	name = "Temperantias Sanctus",
	rarity = 1,
	pos = {x = 10, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_temperantias_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_temperantias_sanctus"
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_temperantias_sanctus"

--- Patientias Sanctus ---

SMODS.Joker{
	key = "patientias_sanctus",
	name = "Patientias Sanctus",
	rarity = 1,
	pos = {x = 11, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_patientias_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_patientias_sanctus"
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_patientias_sanctus"

--- Revenant Cabalist ---

SMODS.Joker{
	key = "revenant_cabalist",
	name = "Revenant Cabalist",
	rarity = 1,
	pos = {x = 12, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_revenant_cabalist"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_revenant_cabalist"
SRL_MOD.modded_jokers_revenant = {}
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_revenant_cabalist"

--- Revenant Captain ---

SMODS.Joker{
	key = "revenant_captain",
	name = "Revenant Captain",
	rarity = 1,
	pos = {x = 13, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_revenant_captain"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_revenant_captain"
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_revenant_captain"

--- Revenant Horror ---

SMODS.Joker{
	key = "revenant_horror",
	name = "Revenant Horror",
	rarity = 1,
	pos = {x = 14, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_revenant_horror"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_revenant_horror"
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_revenant_horror"

--- Revenant King ---

SMODS.Joker{
	key = "revenant_king",
	name = "Revenant King",
	rarity = 1,
	pos = {x = 15, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_revenant_king"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_revenant_king"
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_revenant_king"

--- Revenant Sealord ---

SMODS.Joker{
	key = "revenant_sealord",
	name = "Revenant Sealord",
	rarity = 1,
	pos = {x = 16, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_revenant_sealord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_revenant_sealord"
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_revenant_sealord"

--- Revenant Soldier ---

SMODS.Joker{
	key = "revenant_soldier",
	name = "Revenant Soldier",
	rarity = 1,
	pos = {x = 17, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_revenant_soldier"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_revenant_soldier"
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_revenant_soldier"

--- Sphinx Avenger ---

SMODS.Joker{
	key = "sphinx_avenger",
	name = "Sphinx Avenger",
	rarity = 1,
	pos = {x = 18, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sphinx"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sphinx_avenger"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sphinx_avenger"
SRL_MOD.modded_jokers_sphinx = {}
SRL_MOD.modded_jokers_sphinx[#SRL_MOD.modded_jokers_sphinx + 1] = "j_srl_sphinx_avenger"

--- Sphinx Elder ---

SMODS.Joker{
	key = "sphinx_elder",
	name = "Sphinx Elder",
	rarity = 1,
	pos = {x = 19, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sphinx"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sphinx_elder"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sphinx_elder"
SRL_MOD.modded_jokers_sphinx[#SRL_MOD.modded_jokers_sphinx + 1] = "j_srl_sphinx_elder"

--- Sphinx Healer ---

SMODS.Joker{
	key = "sphinx_healer",
	name = "Sphinx Healer",
	rarity = 1,
	pos = {x = 20, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sphinx"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sphinx_healer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sphinx_healer"
SRL_MOD.modded_jokers_sphinx[#SRL_MOD.modded_jokers_sphinx + 1] = "j_srl_sphinx_healer"

--- Sphinx Justicar ---

SMODS.Joker{
	key = "sphinx_justicar",
	name = "Sphinx Justicar",
	rarity = 1,
	pos = {x = 21, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sphinx"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sphinx_justicar"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sphinx_justicar"
SRL_MOD.modded_jokers_sphinx[#SRL_MOD.modded_jokers_sphinx + 1] = "j_srl_sphinx_justicar"

--- Sphinx Ordainer ---

SMODS.Joker{
	key = "sphinx_ordainer",
	name = "Sphinx Ordainer",
	rarity = 1,
	pos = {x = 22, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sphinx"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sphinx_ordainer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sphinx_ordainer"
SRL_MOD.modded_jokers_sphinx[#SRL_MOD.modded_jokers_sphinx + 1] = "j_srl_sphinx_ordainer"

--- Sphinx Zealot ---

SMODS.Joker{
	key = "sphinx_zealot",
	name = "Sphinx Zealot",
	rarity = 1,
	pos = {x = 23, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sphinx"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sphinx_zealot"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sphinx_zealot"
SRL_MOD.modded_jokers_sphinx[#SRL_MOD.modded_jokers_sphinx + 1] = "j_srl_sphinx_zealot"

--- Neralim Seraph ---

SMODS.Joker{
	key = "neralim_seraph",
	name = "Neralim Seraph",
	rarity = 1,
	pos = {x = 24, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Seraph"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_neralim_seraph"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_neralim_seraph"
SRL_MOD.modded_jokers_seraph = {}
SRL_MOD.modded_jokers_seraph[#SRL_MOD.modded_jokers_seraph + 1] = "j_srl_neralim_seraph"

--- Andolin Seraph ---

SMODS.Joker{
	key = "andolin_seraph",
	name = "Andolin Seraph",
	rarity = 1,
	pos = {x = 25, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Seraph"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_andolin_seraph"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_andolin_seraph"
SRL_MOD.modded_jokers_seraph[#SRL_MOD.modded_jokers_seraph + 1] = "j_srl_andolin_seraph"

--- Undolim Seraph ---

SMODS.Joker{
	key = "undolim_seraph",
	name = "Undolim Seraph",
	rarity = 1,
	pos = {x = 26, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Seraph"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_undolim_seraph"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_undolim_seraph"
SRL_MOD.modded_jokers_seraph[#SRL_MOD.modded_jokers_seraph + 1] = "j_srl_undolim_seraph"

--- Vanelin Seraph ---

SMODS.Joker{
	key = "vanelin_seraph",
	name = "Vanelin Seraph",
	rarity = 1,
	pos = {x = 27, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Seraph"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vanelin_seraph"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_vanelin_seraph"
SRL_MOD.modded_jokers_seraph[#SRL_MOD.modded_jokers_seraph + 1] = "j_srl_vanelin_seraph"

--- Siralim Seraph ---

SMODS.Joker{
	key = "siralim_seraph",
	name = "Siralim Seraph",
	rarity = 1,
	pos = {x = 28, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Seraph"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siralim_seraph"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siralim_seraph"
SRL_MOD.modded_jokers_seraph[#SRL_MOD.modded_jokers_seraph + 1] = "j_srl_siralim_seraph"

--- Valkyrie Scout ---

SMODS.Joker{
	key = "valkyrie_scout",
	name = "Valkyrie Scout",
	rarity = 1,
	pos = {x = 29, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_scout"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_scout"
SRL_MOD.modded_jokers_valkyrie = {}
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_scout"

--- Valkyrie Knight ---

SMODS.Joker{
	key = "valkyrie_knight",
	name = "Valkyrie Knight",
	rarity = 1,
	pos = {x = 30, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_knight"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_knight"
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_knight"

--- Valkyrie Lancer ---

SMODS.Joker{
	key = "valkyrie_lancer",
	name = "Valkyrie Lancer",
	rarity = 1,
	pos = {x = 31, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_lancer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_lancer"
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_lancer"

--- Valkyrie Queen ---

SMODS.Joker{
	key = "valkyrie_queen",
	name = "Valkyrie Queen",
	rarity = 1,
	pos = {x = 32, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_queen"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_queen"
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_queen"

--- Valkyrie Champion ---

SMODS.Joker{
	key = "valkyrie_champion",
	name = "Valkyrie Champion",
	rarity = 1,
	pos = {x = 33, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_champion"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_champion"
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_champion"

--- Valkyrie Shieldmaiden ---

SMODS.Joker{
	key = "valkyrie_shieldmaiden",
	name = "Valkyrie Shieldmaiden",
	rarity = 1,
	pos = {x = 34, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_shieldmaiden"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_shieldmaiden"
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_shieldmaiden"

--- Aaxer Apocalypse ---

SMODS.Joker{
	key = "aaxer_apocalypse",
	name = "Aaxer Apocalypse",
	rarity = 1,
	pos = {x = 35, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Apocalypse"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aaxer_apocalypse"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_aaxer_apocalypse"
SRL_MOD.modded_jokers_apocalypse = {}
SRL_MOD.modded_jokers_apocalypse[#SRL_MOD.modded_jokers_apocalypse + 1] = "j_srl_aaxer_apocalypse"

--- Agor Apocalypse ---

SMODS.Joker{
	key = "agor_apocalypse",
	name = "Agor Apocalypse",
	rarity = 1,
	pos = {x = 36, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Apocalypse"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_agor_apocalypse"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_agor_apocalypse"
SRL_MOD.modded_jokers_apocalypse[#SRL_MOD.modded_jokers_apocalypse + 1] = "j_srl_agor_apocalypse"

--- Gorum Apocalypse ---

SMODS.Joker{
	key = "gorum_apocalypse",
	name = "Gorum Apocalypse",
	rarity = 1,
	pos = {x = 37, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Apocalypse"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gorum_apocalypse"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_gorum_apocalypse"
SRL_MOD.modded_jokers_apocalypse[#SRL_MOD.modded_jokers_apocalypse + 1] = "j_srl_gorum_apocalypse"

--- Inox Apocalypse ---

SMODS.Joker{
	key = "inox_apocalypse",
	name = "Inox Apocalypse",
	rarity = 1,
	pos = {x = 38, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Apocalypse"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_inox_apocalypse"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_inox_apocalypse"
SRL_MOD.modded_jokers_apocalypse[#SRL_MOD.modded_jokers_apocalypse + 1] = "j_srl_inox_apocalypse"

--- Zarox Apocalypse ---

SMODS.Joker{
	key = "zarox_apocalypse",
	name = "Zarox Apocalypse",
	rarity = 1,
	pos = {x = 39, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Apocalypse"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zarox_apocalypse"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_zarox_apocalypse"
SRL_MOD.modded_jokers_apocalypse[#SRL_MOD.modded_jokers_apocalypse + 1] = "j_srl_zarox_apocalypse"

--- Abyssal Spectre ---

SMODS.Joker{
	key = "abyssal_spectre",
	name = "Abyssal Spectre",
	rarity = 1,
	pos = {x = 40, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abyssal_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_abyssal_spectre"
SRL_MOD.modded_jokers_spectre = {}
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_abyssal_spectre"

--- Doomsday Spectre ---

SMODS.Joker{
	key = "doomsday_spectre",
	name = "Doomsday Spectre",
	rarity = 1,
	pos = {x = 41, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_doomsday_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_doomsday_spectre"
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_doomsday_spectre"

--- Dread Spectre ---

SMODS.Joker{
	key = "dread_spectre",
	name = "Dread Spectre",
	rarity = 1,
	pos = {x = 42, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dread_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dread_spectre"
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_dread_spectre"

--- Entropic Spectre ---

SMODS.Joker{
	key = "entropic_spectre",
	name = "Entropic Spectre",
	rarity = 1,
	pos = {x = 43, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_entropic_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_entropic_spectre"
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_entropic_spectre"

--- Nightveil Spectre ---

SMODS.Joker{
	key = "nightveil_spectre",
	name = "Nightveil Spectre",
	rarity = 1,
	pos = {x = 44, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nightveil_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nightveil_spectre"
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_nightveil_spectre"

--- Transient Spectre ---

SMODS.Joker{
	key = "transient_spectre",
	name = "Transient Spectre",
	rarity = 1,
	pos = {x = 45, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_transient_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_transient_spectre"
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_transient_spectre"

--- Runic Grimoire ---

SMODS.Joker{
	key = "runic_grimoire",
	name = "Runic Grimoire",
	rarity = 1,
	pos = {x = 46, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_runic_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_runic_grimoire"
SRL_MOD.modded_jokers_grimoire = {}
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_runic_grimoire"

--- Forbidden Grimoire ---

SMODS.Joker{
	key = "forbidden_grimoire",
	name = "Forbidden Grimoire",
	rarity = 1,
	pos = {x = 47, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forbidden_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_forbidden_grimoire"
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_forbidden_grimoire"

--- Necro Grimoire ---

SMODS.Joker{
	key = "necro_grimoire",
	name = "Necro Grimoire",
	rarity = 1,
	pos = {x = 48, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_necro_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_necro_grimoire"
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_necro_grimoire"

--- Eldritch Grimoire ---

SMODS.Joker{
	key = "eldritch_grimoire",
	name = "Eldritch Grimoire",
	rarity = 1,
	pos = {x = 49, y = 8},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eldritch_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_eldritch_grimoire"
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_eldritch_grimoire"

--- Ancient Grimoire ---

SMODS.Joker{
	key = "ancient_grimoire",
	name = "Ancient Grimoire",
	rarity = 1,
	pos = {x = 0, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancient_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ancient_grimoire"
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_ancient_grimoire"

--- Faded Grimoire ---

SMODS.Joker{
	key = "faded_grimoire",
	name = "Faded Grimoire",
	rarity = 1,
	pos = {x = 1, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_faded_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_faded_grimoire"
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_faded_grimoire"

--- Ashmouth Cerberus ---

SMODS.Joker{
	key = "ashmouth_cerberus",
	name = "Ashmouth Cerberus",
	rarity = 1,
	pos = {x = 2, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cerberus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ashmouth_cerberus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ashmouth_cerberus"
SRL_MOD.modded_jokers_cerberus = {}
SRL_MOD.modded_jokers_cerberus[#SRL_MOD.modded_jokers_cerberus + 1] = "j_srl_ashmouth_cerberus"

--- Caustic Cerberus ---

SMODS.Joker{
	key = "caustic_cerberus",
	name = "Caustic Cerberus",
	rarity = 1,
	pos = {x = 3, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cerberus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_caustic_cerberus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_caustic_cerberus"
SRL_MOD.modded_jokers_cerberus[#SRL_MOD.modded_jokers_cerberus + 1] = "j_srl_caustic_cerberus"

--- Cerberus Banelord ---

SMODS.Joker{
	key = "cerberus_banelord",
	name = "Cerberus Banelord",
	rarity = 1,
	pos = {x = 4, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cerberus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cerberus_banelord"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_cerberus_banelord"
SRL_MOD.modded_jokers_cerberus[#SRL_MOD.modded_jokers_cerberus + 1] = "j_srl_cerberus_banelord"

--- Cerberus Gatewatcher ---

SMODS.Joker{
	key = "cerberus_gatewatcher",
	name = "Cerberus Gatewatcher",
	rarity = 1,
	pos = {x = 5, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cerberus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cerberus_gatewatcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_cerberus_gatewatcher"
SRL_MOD.modded_jokers_cerberus[#SRL_MOD.modded_jokers_cerberus + 1] = "j_srl_cerberus_gatewatcher"

--- Cerberus Hellguard ---

SMODS.Joker{
	key = "cerberus_hellguard",
	name = "Cerberus Hellguard",
	rarity = 1,
	pos = {x = 6, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cerberus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cerberus_hellguard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_cerberus_hellguard"
SRL_MOD.modded_jokers_cerberus[#SRL_MOD.modded_jokers_cerberus + 1] = "j_srl_cerberus_hellguard"

--- Lightning Cerberus ---

SMODS.Joker{
	key = "lightning_cerberus",
	name = "Lightning Cerberus",
	rarity = 1,
	pos = {x = 7, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cerberus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lightning_cerberus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_lightning_cerberus"
SRL_MOD.modded_jokers_cerberus[#SRL_MOD.modded_jokers_cerberus + 1] = "j_srl_lightning_cerberus"

--- Asura Bonebreaker ---

SMODS.Joker{
	key = "asura_bonebreaker",
	name = "Asura Bonebreaker",
	rarity = 1,
	pos = {x = 8, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Asura"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_asura_bonebreaker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_asura_bonebreaker"
SRL_MOD.modded_jokers_asura = {}
SRL_MOD.modded_jokers_asura[#SRL_MOD.modded_jokers_asura + 1] = "j_srl_asura_bonebreaker"

--- Asura Gutslasher ---

SMODS.Joker{
	key = "asura_gutslasher",
	name = "Asura Gutslasher",
	rarity = 1,
	pos = {x = 9, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Asura"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_asura_gutslasher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_asura_gutslasher"
SRL_MOD.modded_jokers_asura[#SRL_MOD.modded_jokers_asura + 1] = "j_srl_asura_gutslasher"

--- Asura Blooddrinker ---

SMODS.Joker{
	key = "asura_blooddrinker",
	name = "Asura Blooddrinker",
	rarity = 1,
	pos = {x = 10, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Asura"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_asura_blooddrinker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_asura_blooddrinker"
SRL_MOD.modded_jokers_asura[#SRL_MOD.modded_jokers_asura + 1] = "j_srl_asura_blooddrinker"

--- Asura Heartripper ---

SMODS.Joker{
	key = "asura_heartripper",
	name = "Asura Heartripper",
	rarity = 1,
	pos = {x = 11, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Asura"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_asura_heartripper"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_asura_heartripper"
SRL_MOD.modded_jokers_asura[#SRL_MOD.modded_jokers_asura + 1] = "j_srl_asura_heartripper"

--- Asura Strangler ---

SMODS.Joker{
	key = "asura_strangler",
	name = "Asura Strangler",
	rarity = 1,
	pos = {x = 12, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Asura"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_asura_strangler"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_asura_strangler"
SRL_MOD.modded_jokers_asura[#SRL_MOD.modded_jokers_asura + 1] = "j_srl_asura_strangler"

--- Asura Fleshstomper ---

SMODS.Joker{
	key = "asura_fleshstomper",
	name = "Asura Fleshstomper",
	rarity = 1,
	pos = {x = 13, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Asura"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_asura_fleshstomper"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_asura_fleshstomper"
SRL_MOD.modded_jokers_asura[#SRL_MOD.modded_jokers_asura + 1] = "j_srl_asura_fleshstomper"

--- Coldslam Yeti ---

SMODS.Joker{
	key = "coldslam_yeti",
	name = "Coldslam Yeti",
	rarity = 1,
	pos = {x = 14, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Yeti"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_coldslam_yeti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_coldslam_yeti"
SRL_MOD.modded_jokers_yeti = {}
SRL_MOD.modded_jokers_yeti[#SRL_MOD.modded_jokers_yeti + 1] = "j_srl_coldslam_yeti"

--- Chillbreeze Yeti ---

SMODS.Joker{
	key = "chillbreeze_yeti",
	name = "Chillbreeze Yeti",
	rarity = 1,
	pos = {x = 15, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Yeti"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chillbreeze_yeti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_chillbreeze_yeti"
SRL_MOD.modded_jokers_yeti[#SRL_MOD.modded_jokers_yeti + 1] = "j_srl_chillbreeze_yeti"

--- Icemane Yeti ---

SMODS.Joker{
	key = "icemane_yeti",
	name = "Icemane Yeti",
	rarity = 1,
	pos = {x = 16, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Yeti"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_icemane_yeti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_icemane_yeti"
SRL_MOD.modded_jokers_yeti[#SRL_MOD.modded_jokers_yeti + 1] = "j_srl_icemane_yeti"

--- Frostbite Yeti ---

SMODS.Joker{
	key = "frostbite_yeti",
	name = "Frostbite Yeti",
	rarity = 1,
	pos = {x = 17, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Yeti"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frostbite_yeti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_frostbite_yeti"
SRL_MOD.modded_jokers_yeti[#SRL_MOD.modded_jokers_yeti + 1] = "j_srl_frostbite_yeti"

--- Snowsting Yeti ---

SMODS.Joker{
	key = "snowsting_yeti",
	name = "Snowsting Yeti",
	rarity = 1,
	pos = {x = 18, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Yeti"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_snowsting_yeti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_snowsting_yeti"
SRL_MOD.modded_jokers_yeti[#SRL_MOD.modded_jokers_yeti + 1] = "j_srl_snowsting_yeti"

--- Rimefist Yeti ---

SMODS.Joker{
	key = "rimefist_yeti",
	name = "Rimefist Yeti",
	rarity = 1,
	pos = {x = 19, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Yeti"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rimefist_yeti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_rimefist_yeti"
SRL_MOD.modded_jokers_yeti[#SRL_MOD.modded_jokers_yeti + 1] = "j_srl_rimefist_yeti"

--- Coast Watcher ---

SMODS.Joker{
	key = "coast_watcher",
	name = "Coast Watcher",
	rarity = 1,
	pos = {x = 20, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_coast_watcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_coast_watcher"
SRL_MOD.modded_jokers_watcher = {}
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_coast_watcher"

--- Glade Watcher ---

SMODS.Joker{
	key = "glade_watcher",
	name = "Glade Watcher",
	rarity = 1,
	pos = {x = 21, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_glade_watcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_glade_watcher"
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_glade_watcher"

--- Hell Watcher ---

SMODS.Joker{
	key = "hell_watcher",
	name = "Hell Watcher",
	rarity = 1,
	pos = {x = 22, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hell_watcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_hell_watcher"
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_hell_watcher"

--- Rift Watcher ---

SMODS.Joker{
	key = "rift_watcher",
	name = "Rift Watcher",
	rarity = 1,
	pos = {x = 23, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rift_watcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_rift_watcher"
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_rift_watcher"

--- Roost Watcher ---

SMODS.Joker{
	key = "roost_watcher",
	name = "Roost Watcher",
	rarity = 1,
	pos = {x = 24, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_roost_watcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_roost_watcher"
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_roost_watcher"

--- Sky Watcher ---

SMODS.Joker{
	key = "sky_watcher",
	name = "Sky Watcher",
	rarity = 1,
	pos = {x = 25, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sky_watcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sky_watcher"
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_sky_watcher"

--- Manticore Conqueror ---

SMODS.Joker{
	key = "manticore_conqueror",
	name = "Manticore Conqueror",
	rarity = 1,
	pos = {x = 26, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_manticore_conqueror"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_manticore_conqueror"
SRL_MOD.modded_jokers_manticore = {}
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_manticore_conqueror"

--- Flailing Manticore ---

SMODS.Joker{
	key = "flailing_manticore",
	name = "Flailing Manticore",
	rarity = 1,
	pos = {x = 27, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_flailing_manticore"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_flailing_manticore"
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_flailing_manticore"

--- Crimson Manticore ---

SMODS.Joker{
	key = "crimson_manticore",
	name = "Crimson Manticore",
	rarity = 1,
	pos = {x = 28, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_crimson_manticore"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_crimson_manticore"
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_crimson_manticore"

--- Manticore Decimator ---

SMODS.Joker{
	key = "manticore_decimator",
	name = "Manticore Decimator",
	rarity = 1,
	pos = {x = 29, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_manticore_decimator"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_manticore_decimator"
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_manticore_decimator"

--- Sawback Manticore ---

SMODS.Joker{
	key = "sawback_manticore",
	name = "Sawback Manticore",
	rarity = 1,
	pos = {x = 30, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sawback_manticore"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_sawback_manticore"
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_sawback_manticore"

--- Prowling Manticore ---

SMODS.Joker{
	key = "prowling_manticore",
	name = "Prowling Manticore",
	rarity = 1,
	pos = {x = 31, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_prowling_manticore"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_prowling_manticore"
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_prowling_manticore"

--- Deranged Gorgon ---

SMODS.Joker{
	key = "deranged_gorgon",
	name = "Deranged Gorgon",
	rarity = 1,
	pos = {x = 32, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gorgon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_deranged_gorgon"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_deranged_gorgon"
SRL_MOD.modded_jokers_gorgon = {}
SRL_MOD.modded_jokers_gorgon[#SRL_MOD.modded_jokers_gorgon + 1] = "j_srl_deranged_gorgon"

--- Gorgon Gazer ---

SMODS.Joker{
	key = "gorgon_gazer",
	name = "Gorgon Gazer",
	rarity = 1,
	pos = {x = 33, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gorgon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gorgon_gazer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_gorgon_gazer"
SRL_MOD.modded_jokers_gorgon[#SRL_MOD.modded_jokers_gorgon + 1] = "j_srl_gorgon_gazer"

--- Gorgon Sorceress ---

SMODS.Joker{
	key = "gorgon_sorceress",
	name = "Gorgon Sorceress",
	rarity = 1,
	pos = {x = 34, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gorgon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gorgon_sorceress"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_gorgon_sorceress"
SRL_MOD.modded_jokers_gorgon[#SRL_MOD.modded_jokers_gorgon + 1] = "j_srl_gorgon_sorceress"

--- Gorgon Witch ---

SMODS.Joker{
	key = "gorgon_witch",
	name = "Gorgon Witch",
	rarity = 1,
	pos = {x = 35, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gorgon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gorgon_witch"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_gorgon_witch"
SRL_MOD.modded_jokers_gorgon[#SRL_MOD.modded_jokers_gorgon + 1] = "j_srl_gorgon_witch"

--- Medusa ---

SMODS.Joker{
	key = "medusa",
	name = "Medusa",
	rarity = 1,
	pos = {x = 36, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gorgon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_medusa"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_medusa"
SRL_MOD.modded_jokers_gorgon[#SRL_MOD.modded_jokers_gorgon + 1] = "j_srl_medusa"

--- Unhinged Gorgon ---

SMODS.Joker{
	key = "unhinged_gorgon",
	name = "Unhinged Gorgon",
	rarity = 1,
	pos = {x = 37, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gorgon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unhinged_gorgon"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_unhinged_gorgon"
SRL_MOD.modded_jokers_gorgon[#SRL_MOD.modded_jokers_gorgon + 1] = "j_srl_unhinged_gorgon"

--- Terror Wight ---

SMODS.Joker{
	key = "terror_wight",
	name = "Terror Wight",
	rarity = 1,
	pos = {x = 38, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_terror_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_terror_wight"
SRL_MOD.modded_jokers_wight = {}
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_terror_wight"

--- Gravebane Wight ---

SMODS.Joker{
	key = "gravebane_wight",
	name = "Gravebane Wight",
	rarity = 1,
	pos = {x = 39, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gravebane_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gravebane_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_gravebane_wight"

--- Reclusive Wight ---

SMODS.Joker{
	key = "reclusive_wight",
	name = "Reclusive Wight",
	rarity = 1,
	pos = {x = 40, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_reclusive_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_reclusive_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_reclusive_wight"

--- Roofstalker Wight ---

SMODS.Joker{
	key = "roofstalker_wight",
	name = "Roofstalker Wight",
	rarity = 1,
	pos = {x = 41, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_roofstalker_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_roofstalker_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_roofstalker_wight"

--- Dread Wight ---

SMODS.Joker{
	key = "dread_wight",
	name = "Dread Wight",
	rarity = 1,
	pos = {x = 42, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dread_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dread_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_dread_wight"

--- Trepidation Wight ---

SMODS.Joker{
	key = "trepidation_wight",
	name = "Trepidation Wight",
	rarity = 1,
	pos = {x = 43, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_trepidation_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_trepidation_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_trepidation_wight"

--- Dungeon Shade ---

SMODS.Joker{
	key = "dungeon_shade",
	name = "Dungeon Shade",
	rarity = 1,
	pos = {x = 44, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dungeon_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dungeon_shade"
SRL_MOD.modded_jokers_shade = {}
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_dungeon_shade"

--- Evernight Shade ---

SMODS.Joker{
	key = "evernight_shade",
	name = "Evernight Shade",
	rarity = 1,
	pos = {x = 45, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_evernight_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_evernight_shade"
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_evernight_shade"

--- Hoar Shade ---

SMODS.Joker{
	key = "hoar_shade",
	name = "Hoar Shade",
	rarity = 1,
	pos = {x = 46, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hoar_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_hoar_shade"
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_hoar_shade"

--- Gateway Shade ---

SMODS.Joker{
	key = "gateway_shade",
	name = "Gateway Shade",
	rarity = 1,
	pos = {x = 47, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gateway_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gateway_shade"
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_gateway_shade"

--- Drifting Shade ---

SMODS.Joker{
	key = "drifting_shade",
	name = "Drifting Shade",
	rarity = 1,
	pos = {x = 48, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_drifting_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_drifting_shade"
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_drifting_shade"

--- Whispering Shade ---

SMODS.Joker{
	key = "whispering_shade",
	name = "Whispering Shade",
	rarity = 1,
	pos = {x = 49, y = 9},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_whispering_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_whispering_shade"
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_whispering_shade"

--- Masochist Witch ---

SMODS.Joker{
	key = "masochist_witch",
	name = "Masochist Witch",
	rarity = 1,
	pos = {x = 0, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_masochist_witch"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_masochist_witch"
SRL_MOD.modded_jokers_masochist = {}
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_masochist_witch"

--- Lurid Masochist ---

SMODS.Joker{
	key = "lurid_masochist",
	name = "Lurid Masochist",
	rarity = 1,
	pos = {x = 1, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lurid_masochist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_lurid_masochist"
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_lurid_masochist"

--- Macabre Masochist ---

SMODS.Joker{
	key = "macabre_masochist",
	name = "Macabre Masochist",
	rarity = 1,
	pos = {x = 2, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_macabre_masochist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_macabre_masochist"
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_macabre_masochist"

--- Masochist Angler ---

SMODS.Joker{
	key = "masochist_angler",
	name = "Masochist Angler",
	rarity = 1,
	pos = {x = 3, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_masochist_angler"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_masochist_angler"
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_masochist_angler"

--- Sanguine Masochist ---

SMODS.Joker{
	key = "sanguine_masochist",
	name = "Sanguine Masochist",
	rarity = 1,
	pos = {x = 4, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sanguine_masochist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sanguine_masochist"
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_sanguine_masochist"

--- Favored Masochist ---

SMODS.Joker{
	key = "favored_masochist",
	name = "Favored Masochist",
	rarity = 1,
	pos = {x = 5, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_favored_masochist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_favored_masochist"
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_favored_masochist"

--- Ahnok Tremor ---

SMODS.Joker{
	key = "ahnok_tremor",
	name = "Ahnok Tremor",
	rarity = 1,
	pos = {x = 6, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tremor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ahnok_tremor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ahnok_tremor"
SRL_MOD.modded_jokers_tremor = {}
SRL_MOD.modded_jokers_tremor[#SRL_MOD.modded_jokers_tremor + 1] = "j_srl_ahnok_tremor"

--- Quamar Tremor ---

SMODS.Joker{
	key = "quamar_tremor",
	name = "Quamar Tremor",
	rarity = 1,
	pos = {x = 7, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tremor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_quamar_tremor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_quamar_tremor"
SRL_MOD.modded_jokers_tremor[#SRL_MOD.modded_jokers_tremor + 1] = "j_srl_quamar_tremor"

--- Quarnok Tremor ---

SMODS.Joker{
	key = "quarnok_tremor",
	name = "Quarnok Tremor",
	rarity = 1,
	pos = {x = 8, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tremor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_quarnok_tremor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_quarnok_tremor"
SRL_MOD.modded_jokers_tremor[#SRL_MOD.modded_jokers_tremor + 1] = "j_srl_quarnok_tremor"

--- Ahnkol Tremor ---

SMODS.Joker{
	key = "ahnkol_tremor",
	name = "Ahnkol Tremor",
	rarity = 1,
	pos = {x = 9, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tremor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ahnkol_tremor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ahnkol_tremor"
SRL_MOD.modded_jokers_tremor[#SRL_MOD.modded_jokers_tremor + 1] = "j_srl_ahnkol_tremor"

--- Urhul Tremor ---

SMODS.Joker{
	key = "urhul_tremor",
	name = "Urhul Tremor",
	rarity = 1,
	pos = {x = 10, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tremor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_urhul_tremor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_urhul_tremor"
SRL_MOD.modded_jokers_tremor[#SRL_MOD.modded_jokers_tremor + 1] = "j_srl_urhul_tremor"

--- Spitting Arachnalisk ---

SMODS.Joker{
	key = "spitting_arachnalisk",
	name = "Spitting Arachnalisk",
	rarity = 1,
	pos = {x = 11, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spitting_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_spitting_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk = {}
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_spitting_arachnalisk"

--- Canopy Arachnalisk ---

SMODS.Joker{
	key = "canopy_arachnalisk",
	name = "Canopy Arachnalisk",
	rarity = 1,
	pos = {x = 12, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_canopy_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_canopy_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_canopy_arachnalisk"

--- Dragonlair Arachnalisk ---

SMODS.Joker{
	key = "dragonlair_arachnalisk",
	name = "Dragonlair Arachnalisk",
	rarity = 1,
	pos = {x = 13, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragonlair_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dragonlair_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_dragonlair_arachnalisk"

--- Goliath Arachnalisk ---

SMODS.Joker{
	key = "goliath_arachnalisk",
	name = "Goliath Arachnalisk",
	rarity = 1,
	pos = {x = 14, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_goliath_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_goliath_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_goliath_arachnalisk"

--- Woolly Arachnalisk ---

SMODS.Joker{
	key = "woolly_arachnalisk",
	name = "Woolly Arachnalisk",
	rarity = 1,
	pos = {x = 15, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_woolly_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_woolly_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_woolly_arachnalisk"

--- Ancient Arachnalisk ---

SMODS.Joker{
	key = "ancient_arachnalisk",
	name = "Ancient Arachnalisk",
	rarity = 1,
	pos = {x = 16, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancient_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ancient_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_ancient_arachnalisk"

--- Elemental Familiar ---

SMODS.Joker{
	key = "elemental_familiar",
	name = "Elemental Familiar",
	rarity = 1,
	pos = {x = 17, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Familiar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elemental_familiar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_elemental_familiar"
SRL_MOD.modded_jokers_familiar = {}
SRL_MOD.modded_jokers_familiar[#SRL_MOD.modded_jokers_familiar + 1] = "j_srl_elemental_familiar"

--- Arcane Familiar ---

SMODS.Joker{
	key = "arcane_familiar",
	name = "Arcane Familiar",
	rarity = 1,
	pos = {x = 18, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Familiar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_arcane_familiar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_arcane_familiar"
SRL_MOD.modded_jokers_familiar[#SRL_MOD.modded_jokers_familiar + 1] = "j_srl_arcane_familiar"

--- Flood Familiar ---

SMODS.Joker{
	key = "flood_familiar",
	name = "Flood Familiar",
	rarity = 1,
	pos = {x = 19, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Familiar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_flood_familiar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_flood_familiar"
SRL_MOD.modded_jokers_familiar[#SRL_MOD.modded_jokers_familiar + 1] = "j_srl_flood_familiar"

--- Judge Familiar ---

SMODS.Joker{
	key = "judge_familiar",
	name = "Judge Familiar",
	rarity = 1,
	pos = {x = 20, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Familiar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_judge_familiar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_judge_familiar"
SRL_MOD.modded_jokers_familiar[#SRL_MOD.modded_jokers_familiar + 1] = "j_srl_judge_familiar"

--- Mystical Familiar ---

SMODS.Joker{
	key = "mystical_familiar",
	name = "Mystical Familiar",
	rarity = 1,
	pos = {x = 21, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Familiar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mystical_familiar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mystical_familiar"
SRL_MOD.modded_jokers_familiar[#SRL_MOD.modded_jokers_familiar + 1] = "j_srl_mystical_familiar"

--- Palace Familiar ---

SMODS.Joker{
	key = "palace_familiar",
	name = "Palace Familiar",
	rarity = 1,
	pos = {x = 22, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Familiar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_palace_familiar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_palace_familiar"
SRL_MOD.modded_jokers_familiar[#SRL_MOD.modded_jokers_familiar + 1] = "j_srl_palace_familiar"

--- Monstrous Gargantuan ---

SMODS.Joker{
	key = "monstrous_gargantuan",
	name = "Monstrous Gargantuan",
	rarity = 1,
	pos = {x = 23, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_monstrous_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_monstrous_gargantuan"
SRL_MOD.modded_jokers_gargantuan = {}
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_monstrous_gargantuan"

--- Sturdy Gargantuan ---

SMODS.Joker{
	key = "sturdy_gargantuan",
	name = "Sturdy Gargantuan",
	rarity = 1,
	pos = {x = 24, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sturdy_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_sturdy_gargantuan"
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_sturdy_gargantuan"

--- Shackled Gargantuan ---

SMODS.Joker{
	key = "shackled_gargantuan",
	name = "Shackled Gargantuan",
	rarity = 1,
	pos = {x = 25, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shackled_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_shackled_gargantuan"
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_shackled_gargantuan"

--- Daunting Gargantuan ---

SMODS.Joker{
	key = "daunting_gargantuan",
	name = "Daunting Gargantuan",
	rarity = 1,
	pos = {x = 26, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_daunting_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_daunting_gargantuan"
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_daunting_gargantuan"

--- Fearsome Gargantuan ---

SMODS.Joker{
	key = "fearsome_gargantuan",
	name = "Fearsome Gargantuan",
	rarity = 1,
	pos = {x = 27, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_fearsome_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_fearsome_gargantuan"
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_fearsome_gargantuan"

--- Forest Gargantuan ---

SMODS.Joker{
	key = "forest_gargantuan",
	name = "Forest Gargantuan",
	rarity = 1,
	pos = {x = 28, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forest_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_forest_gargantuan"
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_forest_gargantuan"

--- Vortex Observer ---

SMODS.Joker{
	key = "vortex_observer",
	name = "Vortex Observer",
	rarity = 1,
	pos = {x = 29, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vortex_observer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_vortex_observer"
SRL_MOD.modded_jokers_vortex = {}
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_vortex_observer"

--- Untamed Vortex ---

SMODS.Joker{
	key = "untamed_vortex",
	name = "Untamed Vortex",
	rarity = 1,
	pos = {x = 30, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_untamed_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_untamed_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_untamed_vortex"

--- Cerebral Vortex ---

SMODS.Joker{
	key = "cerebral_vortex",
	name = "Cerebral Vortex",
	rarity = 1,
	pos = {x = 31, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cerebral_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_cerebral_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_cerebral_vortex"

--- Consuming Vortex ---

SMODS.Joker{
	key = "consuming_vortex",
	name = "Consuming Vortex",
	rarity = 1,
	pos = {x = 32, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_consuming_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_consuming_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_consuming_vortex"

--- Mana Vortex ---

SMODS.Joker{
	key = "mana_vortex",
	name = "Mana Vortex",
	rarity = 1,
	pos = {x = 33, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mana_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mana_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_mana_vortex"

--- Psychic Vortex ---

SMODS.Joker{
	key = "psychic_vortex",
	name = "Psychic Vortex",
	rarity = 1,
	pos = {x = 34, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_psychic_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_psychic_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_psychic_vortex"

--- Waspid Worker ---

SMODS.Joker{
	key = "waspid_worker",
	name = "Waspid Worker",
	rarity = 1,
	pos = {x = 35, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Waspid"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_waspid_worker"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_waspid_worker"
SRL_MOD.modded_jokers_waspid = {}
SRL_MOD.modded_jokers_waspid[#SRL_MOD.modded_jokers_waspid + 1] = "j_srl_waspid_worker"

--- Waspid Guardian ---

SMODS.Joker{
	key = "waspid_guardian",
	name = "Waspid Guardian",
	rarity = 1,
	pos = {x = 36, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Waspid"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_waspid_guardian"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_waspid_guardian"
SRL_MOD.modded_jokers_waspid[#SRL_MOD.modded_jokers_waspid + 1] = "j_srl_waspid_guardian"

--- Waspid Soldier ---

SMODS.Joker{
	key = "waspid_soldier",
	name = "Waspid Soldier",
	rarity = 1,
	pos = {x = 37, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Waspid"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_waspid_soldier"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_waspid_soldier"
SRL_MOD.modded_jokers_waspid[#SRL_MOD.modded_jokers_waspid + 1] = "j_srl_waspid_soldier"

--- Waspid Infiltrator ---

SMODS.Joker{
	key = "waspid_infiltrator",
	name = "Waspid Infiltrator",
	rarity = 1,
	pos = {x = 38, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Waspid"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_waspid_infiltrator"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_waspid_infiltrator"
SRL_MOD.modded_jokers_waspid[#SRL_MOD.modded_jokers_waspid + 1] = "j_srl_waspid_infiltrator"

--- Waspid Slicer ---

SMODS.Joker{
	key = "waspid_slicer",
	name = "Waspid Slicer",
	rarity = 1,
	pos = {x = 39, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Waspid"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_waspid_slicer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_waspid_slicer"
SRL_MOD.modded_jokers_waspid[#SRL_MOD.modded_jokers_waspid + 1] = "j_srl_waspid_slicer"

--- Waspid Scout ---

SMODS.Joker{
	key = "waspid_scout",
	name = "Waspid Scout",
	rarity = 1,
	pos = {x = 40, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Waspid"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_waspid_scout"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_waspid_scout"
SRL_MOD.modded_jokers_waspid[#SRL_MOD.modded_jokers_waspid + 1] = "j_srl_waspid_scout"

--- Failed Experiment ---

SMODS.Joker{
	key = "failed_experiment",
	name = "Failed Experiment",
	rarity = 1,
	pos = {x = 41, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_failed_experiment"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_failed_experiment"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_failed_experiment"

--- Bard Balladeer ---

SMODS.Joker{
	key = "bard_balladeer",
	name = "Bard Balladeer",
	rarity = 1,
	pos = {x = 42, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_balladeer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_balladeer"
SRL_MOD.modded_jokers_bard = {}
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_balladeer"

--- Bard Jongleur ---

SMODS.Joker{
	key = "bard_jongleur",
	name = "Bard Jongleur",
	rarity = 1,
	pos = {x = 43, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_jongleur"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_jongleur"
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_jongleur"

--- Bard Minstrel ---

SMODS.Joker{
	key = "bard_minstrel",
	name = "Bard Minstrel",
	rarity = 1,
	pos = {x = 44, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_minstrel"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_minstrel"
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_minstrel"

--- Bard Poet ---

SMODS.Joker{
	key = "bard_poet",
	name = "Bard Poet",
	rarity = 1,
	pos = {x = 45, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_poet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_poet"
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_poet"

--- Bard Trovatore ---

SMODS.Joker{
	key = "bard_trovatore",
	name = "Bard Trovatore",
	rarity = 1,
	pos = {x = 46, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_trovatore"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_trovatore"
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_trovatore"

--- Bard Versifier ---

SMODS.Joker{
	key = "bard_versifier",
	name = "Bard Versifier",
	rarity = 1,
	pos = {x = 47, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_versifier"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_versifier"
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_versifier"

--- Centaur Ranger ---

SMODS.Joker{
	key = "centaur_ranger",
	name = "Centaur Ranger",
	rarity = 1,
	pos = {x = 48, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_ranger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_ranger"
SRL_MOD.modded_jokers_centaur = {}
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_ranger"

--- Centaur Warrior ---

SMODS.Joker{
	key = "centaur_warrior",
	name = "Centaur Warrior",
	rarity = 1,
	pos = {x = 49, y = 10},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_warrior"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_warrior"
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_warrior"

--- Centaur Wrangler ---

SMODS.Joker{
	key = "centaur_wrangler",
	name = "Centaur Wrangler",
	rarity = 1,
	pos = {x = 0, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_wrangler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_wrangler"
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_wrangler"

--- Centaur Raider ---

SMODS.Joker{
	key = "centaur_raider",
	name = "Centaur Raider",
	rarity = 1,
	pos = {x = 1, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_raider"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_raider"
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_raider"

--- Centaur Runner ---

SMODS.Joker{
	key = "centaur_runner",
	name = "Centaur Runner",
	rarity = 1,
	pos = {x = 2, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_runner"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_runner"
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_runner"

--- Centaur Chaser ---

SMODS.Joker{
	key = "centaur_chaser",
	name = "Centaur Chaser",
	rarity = 1,
	pos = {x = 3, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_chaser"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_chaser"
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_chaser"

--- Elf Cleric ---

SMODS.Joker{
	key = "elf_cleric",
	name = "Elf Cleric",
	rarity = 1,
	pos = {x = 4, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_cleric"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_cleric"
SRL_MOD.modded_jokers_elf = {}
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_cleric"

--- Elf Monk ---

SMODS.Joker{
	key = "elf_monk",
	name = "Elf Monk",
	rarity = 1,
	pos = {x = 5, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_monk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_monk"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_monk"

--- Elf Mystic ---

SMODS.Joker{
	key = "elf_mystic",
	name = "Elf Mystic",
	rarity = 1,
	pos = {x = 6, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_mystic"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_mystic"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_mystic"

--- Elf Barbarian ---

SMODS.Joker{
	key = "elf_barbarian",
	name = "Elf Barbarian",
	rarity = 1,
	pos = {x = 7, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_barbarian"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_barbarian"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_barbarian"

--- Elf Huntsman ---

SMODS.Joker{
	key = "elf_huntsman",
	name = "Elf Huntsman",
	rarity = 1,
	pos = {x = 8, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_huntsman"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_huntsman"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_huntsman"

--- Elf Rogue ---

SMODS.Joker{
	key = "elf_rogue",
	name = "Elf Rogue",
	rarity = 1,
	pos = {x = 9, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_rogue"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_rogue"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_rogue"

--- Ritual Abomination ---

SMODS.Joker{
	key = "ritual_abomination",
	name = "Ritual Abomination",
	rarity = 1,
	pos = {x = 10, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ritual_abomination"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_ritual_abomination"
SRL_MOD.modded_jokers_abomination = {}
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_ritual_abomination"

--- Abomination Brute ---

SMODS.Joker{
	key = "abomination_brute",
	name = "Abomination Brute",
	rarity = 1,
	pos = {x = 11, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abomination_brute"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_abomination_brute"
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_abomination_brute"

--- Flesh Abomination ---

SMODS.Joker{
	key = "flesh_abomination",
	name = "Flesh Abomination",
	rarity = 1,
	pos = {x = 12, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_flesh_abomination"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_flesh_abomination"
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_flesh_abomination"

--- Abomination Volatile ---

SMODS.Joker{
	key = "abomination_volatile",
	name = "Abomination Volatile",
	rarity = 1,
	pos = {x = 13, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abomination_volatile"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_abomination_volatile"
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_abomination_volatile"

--- Gore Abomination ---

SMODS.Joker{
	key = "gore_abomination",
	name = "Gore Abomination",
	rarity = 1,
	pos = {x = 14, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gore_abomination"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gore_abomination"
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_gore_abomination"

--- Wandering Abomination ---

SMODS.Joker{
	key = "wandering_abomination",
	name = "Wandering Abomination",
	rarity = 1,
	pos = {x = 15, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wandering_abomination"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_wandering_abomination"
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_wandering_abomination"

--- Nix Creeper ---

SMODS.Joker{
	key = "nix_creeper",
	name = "Nix Creeper",
	rarity = 1,
	pos = {x = 16, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_creeper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_creeper"
SRL_MOD.modded_jokers_nix = {}
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_creeper"

--- Nix Guardian ---

SMODS.Joker{
	key = "nix_guardian",
	name = "Nix Guardian",
	rarity = 1,
	pos = {x = 17, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_guardian"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_guardian"
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_guardian"

--- Nix Imposter ---

SMODS.Joker{
	key = "nix_imposter",
	name = "Nix Imposter",
	rarity = 1,
	pos = {x = 18, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_imposter"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_imposter"
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_imposter"

--- Nix Informer ---

SMODS.Joker{
	key = "nix_informer",
	name = "Nix Informer",
	rarity = 1,
	pos = {x = 19, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_informer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_informer"
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_informer"

--- Nix Scoundrel ---

SMODS.Joker{
	key = "nix_scoundrel",
	name = "Nix Scoundrel",
	rarity = 1,
	pos = {x = 20, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_scoundrel"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_scoundrel"
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_scoundrel"

--- Nix Shadowjumper ---

SMODS.Joker{
	key = "nix_shadowjumper",
	name = "Nix Shadowjumper",
	rarity = 1,
	pos = {x = 21, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_shadowjumper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_shadowjumper"
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_shadowjumper"

--- Plague Alchemist ---

SMODS.Joker{
	key = "plague_alchemist",
	name = "Plague Alchemist",
	rarity = 1,
	pos = {x = 22, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_alchemist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_plague_alchemist"
SRL_MOD.modded_jokers_plague_doctor = {}
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_alchemist"

--- Plague Herbalist ---

SMODS.Joker{
	key = "plague_herbalist",
	name = "Plague Herbalist",
	rarity = 1,
	pos = {x = 23, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_herbalist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_plague_herbalist"
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_herbalist"

--- Plague Quack ---

SMODS.Joker{
	key = "plague_quack",
	name = "Plague Quack",
	rarity = 1,
	pos = {x = 24, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_quack"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_plague_quack"
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_quack"

--- Plague Scholar ---

SMODS.Joker{
	key = "plague_scholar",
	name = "Plague Scholar",
	rarity = 1,
	pos = {x = 25, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_scholar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_plague_scholar"
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_scholar"

--- Plague Soothsayer ---

SMODS.Joker{
	key = "plague_soothsayer",
	name = "Plague Soothsayer",
	rarity = 1,
	pos = {x = 26, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_soothsayer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_plague_soothsayer"
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_soothsayer"

--- Plague Surgeon ---

SMODS.Joker{
	key = "plague_surgeon",
	name = "Plague Surgeon",
	rarity = 1,
	pos = {x = 27, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_surgeon"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_plague_surgeon"
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_surgeon"

--- Terra Vulpes ---

SMODS.Joker{
	key = "terra_vulpes",
	name = "Terra Vulpes",
	rarity = 1,
	pos = {x = 28, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_terra_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_terra_vulpes"
SRL_MOD.modded_jokers_vulpes = {}
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_terra_vulpes"

--- Decaying Vulpes ---

SMODS.Joker{
	key = "decaying_vulpes",
	name = "Decaying Vulpes",
	rarity = 1,
	pos = {x = 29, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_decaying_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_decaying_vulpes"
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_decaying_vulpes"

--- Lost Vulpes ---

SMODS.Joker{
	key = "lost_vulpes",
	name = "Lost Vulpes",
	rarity = 1,
	pos = {x = 30, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lost_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_lost_vulpes"
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_lost_vulpes"

--- Skyward Vulpes ---

SMODS.Joker{
	key = "skyward_vulpes",
	name = "Skyward Vulpes",
	rarity = 1,
	pos = {x = 31, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skyward_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_skyward_vulpes"
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_skyward_vulpes"

--- Spirit Vulpes ---

SMODS.Joker{
	key = "spirit_vulpes",
	name = "Spirit Vulpes",
	rarity = 1,
	pos = {x = 32, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spirit_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_spirit_vulpes"
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_spirit_vulpes"

--- Cosmos Vulpes ---

SMODS.Joker{
	key = "cosmos_vulpes",
	name = "Cosmos Vulpes",
	rarity = 1,
	pos = {x = 33, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cosmos_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_cosmos_vulpes"
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_cosmos_vulpes"

--- Stag Celestial ---

SMODS.Joker{
	key = "stag_celestial",
	name = "Stag Celestial",
	rarity = 1,
	pos = {x = 34, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_celestial"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_celestial"
SRL_MOD.modded_jokers_stag = {}
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_celestial"

--- Stag Guardian ---

SMODS.Joker{
	key = "stag_guardian",
	name = "Stag Guardian",
	rarity = 1,
	pos = {x = 35, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_guardian"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_guardian"
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_guardian"

--- Stag Idol ---

SMODS.Joker{
	key = "stag_idol",
	name = "Stag Idol",
	rarity = 1,
	pos = {x = 36, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_idol"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_idol"
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_idol"

--- Stag Overseer ---

SMODS.Joker{
	key = "stag_overseer",
	name = "Stag Overseer",
	rarity = 1,
	pos = {x = 37, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_overseer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_overseer"
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_overseer"

--- Stag Royal ---

SMODS.Joker{
	key = "stag_royal",
	name = "Stag Royal",
	rarity = 1,
	pos = {x = 38, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_royal"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_royal"
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_royal"

--- Stag Spirit ---

SMODS.Joker{
	key = "stag_spirit",
	name = "Stag Spirit",
	rarity = 1,
	pos = {x = 39, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_spirit"
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_spirit"

--- Ethereal Basilisk ---

SMODS.Joker{
	key = "ethereal_basilisk",
	name = "Ethereal Basilisk",
	rarity = 1,
	pos = {x = 40, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Basilisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ethereal_basilisk"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ethereal_basilisk"
SRL_MOD.modded_jokers_basilisk = {}
SRL_MOD.modded_jokers_basilisk[#SRL_MOD.modded_jokers_basilisk + 1] = "j_srl_ethereal_basilisk"

--- Dormant Basilisk ---

SMODS.Joker{
	key = "dormant_basilisk",
	name = "Dormant Basilisk",
	rarity = 1,
	pos = {x = 41, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Basilisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dormant_basilisk"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_dormant_basilisk"
SRL_MOD.modded_jokers_basilisk[#SRL_MOD.modded_jokers_basilisk + 1] = "j_srl_dormant_basilisk"

--- Lurking Basilisk ---

SMODS.Joker{
	key = "lurking_basilisk",
	name = "Lurking Basilisk",
	rarity = 1,
	pos = {x = 42, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Basilisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lurking_basilisk"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_lurking_basilisk"
SRL_MOD.modded_jokers_basilisk[#SRL_MOD.modded_jokers_basilisk + 1] = "j_srl_lurking_basilisk"

--- Crashing Basilisk ---

SMODS.Joker{
	key = "crashing_basilisk",
	name = "Crashing Basilisk",
	rarity = 1,
	pos = {x = 43, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Basilisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_crashing_basilisk"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_crashing_basilisk"
SRL_MOD.modded_jokers_basilisk[#SRL_MOD.modded_jokers_basilisk + 1] = "j_srl_crashing_basilisk"

--- Roaring Basilisk ---

SMODS.Joker{
	key = "roaring_basilisk",
	name = "Roaring Basilisk",
	rarity = 1,
	pos = {x = 44, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Basilisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_roaring_basilisk"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_roaring_basilisk"
SRL_MOD.modded_jokers_basilisk[#SRL_MOD.modded_jokers_basilisk + 1] = "j_srl_roaring_basilisk"

--- Stomping Basilisk ---

SMODS.Joker{
	key = "stomping_basilisk",
	name = "Stomping Basilisk",
	rarity = 1,
	pos = {x = 45, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Basilisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stomping_basilisk"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_stomping_basilisk"
SRL_MOD.modded_jokers_basilisk[#SRL_MOD.modded_jokers_basilisk + 1] = "j_srl_stomping_basilisk"

--- Fire Salamander ---

SMODS.Joker{
	key = "fire_salamander",
	name = "Fire Salamander",
	rarity = 1,
	pos = {x = 46, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Salamander"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_fire_salamander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_fire_salamander"
SRL_MOD.modded_jokers_salamander = {}
SRL_MOD.modded_jokers_salamander[#SRL_MOD.modded_jokers_salamander + 1] = "j_srl_fire_salamander"

--- Thunder Salamander ---

SMODS.Joker{
	key = "thunder_salamander",
	name = "Thunder Salamander",
	rarity = 1,
	pos = {x = 47, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Salamander"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thunder_salamander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_thunder_salamander"
SRL_MOD.modded_jokers_salamander[#SRL_MOD.modded_jokers_salamander + 1] = "j_srl_thunder_salamander"

--- Water Salamander ---

SMODS.Joker{
	key = "water_salamander",
	name = "Water Salamander",
	rarity = 1,
	pos = {x = 48, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Salamander"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_water_salamander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_water_salamander"
SRL_MOD.modded_jokers_salamander[#SRL_MOD.modded_jokers_salamander + 1] = "j_srl_water_salamander"

--- Wind Salamander ---

SMODS.Joker{
	key = "wind_salamander",
	name = "Wind Salamander",
	rarity = 1,
	pos = {x = 49, y = 11},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Salamander"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wind_salamander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wind_salamander"
SRL_MOD.modded_jokers_salamander[#SRL_MOD.modded_jokers_salamander + 1] = "j_srl_wind_salamander"

--- Ice Salamander ---

SMODS.Joker{
	key = "ice_salamander",
	name = "Ice Salamander",
	rarity = 1,
	pos = {x = 0, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Salamander"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ice_salamander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ice_salamander"
SRL_MOD.modded_jokers_salamander[#SRL_MOD.modded_jokers_salamander + 1] = "j_srl_ice_salamander"

--- Earth Salamander ---

SMODS.Joker{
	key = "earth_salamander",
	name = "Earth Salamander",
	rarity = 1,
	pos = {x = 1, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Salamander"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_earth_salamander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_earth_salamander"
SRL_MOD.modded_jokers_salamander[#SRL_MOD.modded_jokers_salamander + 1] = "j_srl_earth_salamander"

--- Vegetable Dumpling ---

SMODS.Joker{
	key = "vegetable_dumpling",
	name = "Vegetable Dumpling",
	rarity = 1,
	pos = {x = 2, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vegetable_dumpling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_vegetable_dumpling"
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_vegetable_dumpling"

--- Aegis Angel ---

SMODS.Joker{
	key = "aegis_angel",
	name = "Aegis Angel",
	rarity = 1,
	pos = {x = 3, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aegis_angel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_aegis_angel"
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_aegis_angel"

--- Amethyst Paragon ---

SMODS.Joker{
	key = "amethyst_paragon",
	name = "Amethyst Paragon",
	rarity = 1,
	pos = {x = 4, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Paragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amethyst_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amethyst_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_amethyst_paragon"

--- Ancient Yeti ---

SMODS.Joker{
	key = "ancient_yeti",
	name = "Ancient Yeti",
	rarity = 1,
	pos = {x = 5, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Yeti"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancient_yeti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ancient_yeti"
SRL_MOD.modded_jokers_yeti[#SRL_MOD.modded_jokers_yeti + 1] = "j_srl_ancient_yeti"

--- Apis Warrior ---

SMODS.Joker{
	key = "apis_warrior",
	name = "Apis Warrior",
	rarity = 1,
	pos = {x = 6, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_warrior"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_warrior"
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_warrior"

--- Aspect of Change ---

SMODS.Joker{
	key = "aspect_of_change",
	name = "Aspect of Change",
	rarity = 1,
	pos = {x = 7, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aspect_of_change"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_aspect_of_change"
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_aspect_of_change"

--- Aspect of Time ---

SMODS.Joker{
	key = "aspect_of_time",
	name = "Aspect of Time",
	rarity = 1,
	pos = {x = 8, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aspect_of_time"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_aspect_of_time"
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_aspect_of_time"

--- Zantai ---

SMODS.Joker{
	key = "zantai",
	name = "Zantai",
	rarity = 1,
	pos = {x = 9, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Asura"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zantai"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_zantai"
SRL_MOD.modded_jokers_asura[#SRL_MOD.modded_jokers_asura + 1] = "j_srl_zantai"

--- Addled Leper ---

SMODS.Joker{
	key = "addled_leper",
	name = "Addled Leper",
	rarity = 1,
	pos = {x = 10, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_addled_leper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_addled_leper"
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_addled_leper"

--- Thylacine ---

SMODS.Joker{
	key = "thylacine",
	name = "Thylacine",
	rarity = 1,
	pos = {x = 11, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hound"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thylacine"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_thylacine"
SRL_MOD.modded_jokers_hound[#SRL_MOD.modded_jokers_hound + 1] = "j_srl_thylacine"

--- Bound Cerberus ---

SMODS.Joker{
	key = "bound_cerberus",
	name = "Bound Cerberus",
	rarity = 1,
	pos = {x = 12, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cerberus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bound_cerberus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_bound_cerberus"
SRL_MOD.modded_jokers_cerberus[#SRL_MOD.modded_jokers_cerberus + 1] = "j_srl_bound_cerberus"

--- Brownie Loner ---

SMODS.Joker{
	key = "brownie_loner",
	name = "Brownie Loner",
	rarity = 1,
	pos = {x = 13, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Brownie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brownie_loner"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_brownie_loner"
SRL_MOD.modded_jokers_brownie[#SRL_MOD.modded_jokers_brownie + 1] = "j_srl_brownie_loner"

--- Carnage Devourer ---

SMODS.Joker{
	key = "carnage_devourer",
	name = "Carnage Devourer",
	rarity = 1,
	pos = {x = 14, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Carnage"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carnage_devourer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_carnage_devourer"
SRL_MOD.modded_jokers_carnage[#SRL_MOD.modded_jokers_carnage + 1] = "j_srl_carnage_devourer"

--- Carver Chopper ---

SMODS.Joker{
	key = "carver_chopper",
	name = "Carver Chopper",
	rarity = 1,
	pos = {x = 15, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carver_chopper"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_carver_chopper"
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_carver_chopper"

--- Celestial Occultist ---

SMODS.Joker{
	key = "celestial_occultist",
	name = "Celestial Occultist",
	rarity = 1,
	pos = {x = 16, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Occultist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_celestial_occultist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_celestial_occultist"
SRL_MOD.modded_jokers_occultist[#SRL_MOD.modded_jokers_occultist + 1] = "j_srl_celestial_occultist"

--- Creeping Arachnalisk ---

SMODS.Joker{
	key = "creeping_arachnalisk",
	name = "Creeping Arachnalisk",
	rarity = 1,
	pos = {x = 17, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_creeping_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_creeping_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_creeping_arachnalisk"

--- Cursed Slime ---

SMODS.Joker{
	key = "cursed_slime",
	name = "Cursed Slime",
	rarity = 1,
	pos = {x = 18, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cursed_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_cursed_slime"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_cursed_slime"

--- Deceptive Fiend ---

SMODS.Joker{
	key = "deceptive_fiend",
	name = "Deceptive Fiend",
	rarity = 1,
	pos = {x = 19, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Fiend"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_deceptive_fiend"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_deceptive_fiend"
SRL_MOD.modded_jokers_fiend[#SRL_MOD.modded_jokers_fiend + 1] = "j_srl_deceptive_fiend"

--- Priest Vizier ---

SMODS.Joker{
	key = "priest_vizier",
	name = "Priest Vizier",
	rarity = 1,
	pos = {x = 20, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Priest"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_priest_vizier"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_priest_vizier"
SRL_MOD.modded_jokers_priest[#SRL_MOD.modded_jokers_priest + 1] = "j_srl_priest_vizier"

--- Diabolic Bhuta ---

SMODS.Joker{
	key = "diabolic_bhuta",
	name = "Diabolic Bhuta",
	rarity = 1,
	pos = {x = 21, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Diabolic Horde"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diabolic_bhuta"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_diabolic_bhuta"
SRL_MOD.modded_jokers_diabolic_horde[#SRL_MOD.modded_jokers_diabolic_horde + 1] = "j_srl_diabolic_bhuta"

--- Vengeful Djinn ---

SMODS.Joker{
	key = "vengeful_djinn",
	name = "Vengeful Djinn",
	rarity = 1,
	pos = {x = 22, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vengeful_djinn"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_vengeful_djinn"
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_vengeful_djinn"

--- Docile Wolpertinger ---

SMODS.Joker{
	key = "docile_wolpertinger",
	name = "Docile Wolpertinger",
	rarity = 1,
	pos = {x = 23, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_docile_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_docile_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_docile_wolpertinger"

--- Citadel ---

SMODS.Joker{
	key = "citadel",
	name = "Citadel",
	rarity = 1,
	pos = {x = 24, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_citadel"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_citadel"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_citadel"

--- Flametongue Efreet ---

SMODS.Joker{
	key = "flametongue_efreet",
	name = "Flametongue Efreet",
	rarity = 1,
	pos = {x = 25, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Efreet"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_flametongue_efreet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_flametongue_efreet"
SRL_MOD.modded_jokers_efreet[#SRL_MOD.modded_jokers_efreet + 1] = "j_srl_flametongue_efreet"

--- Dryad Seductress ---

SMODS.Joker{
	key = "dryad_seductress",
	name = "Dryad Seductress",
	rarity = 1,
	pos = {x = 26, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_seductress"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_seductress"
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_seductress"

--- Ancient Ent ---

SMODS.Joker{
	key = "ancient_ent",
	name = "Ancient Ent",
	rarity = 1,
	pos = {x = 27, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Ent"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancient_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ancient_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_ancient_ent"

--- Festering Ghoul ---

SMODS.Joker{
	key = "festering_ghoul",
	name = "Festering Ghoul",
	rarity = 1,
	pos = {x = 28, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ghoul"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_festering_ghoul"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_festering_ghoul"
SRL_MOD.modded_jokers_ghoul[#SRL_MOD.modded_jokers_ghoul + 1] = "j_srl_festering_ghoul"

--- Fog Spirit ---

SMODS.Joker{
	key = "fog_spirit",
	name = "Fog Spirit",
	rarity = 1,
	pos = {x = 29, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_fog_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_fog_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_fog_spirit"

--- Frostbite Wight ---

SMODS.Joker{
	key = "frostbite_wight",
	name = "Frostbite Wight",
	rarity = 1,
	pos = {x = 30, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frostbite_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_frostbite_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_frostbite_wight"

--- Gorgon Trickster ---

SMODS.Joker{
	key = "gorgon_trickster",
	name = "Gorgon Trickster",
	rarity = 1,
	pos = {x = 31, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gorgon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gorgon_trickster"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_gorgon_trickster"
SRL_MOD.modded_jokers_gorgon[#SRL_MOD.modded_jokers_gorgon + 1] = "j_srl_gorgon_trickster"

--- Grave Leper ---

SMODS.Joker{
	key = "grave_leper",
	name = "Grave Leper",
	rarity = 1,
	pos = {x = 32, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_grave_leper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_grave_leper"
SRL_MOD.modded_jokers_leper[#SRL_MOD.modded_jokers_leper + 1] = "j_srl_grave_leper"

--- Griffon Archer ---

SMODS.Joker{
	key = "griffon_archer",
	name = "Griffon Archer",
	rarity = 1,
	pos = {x = 33, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_griffon_archer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_griffon_archer"
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_griffon_archer"

--- Harpy Marauder ---

SMODS.Joker{
	key = "harpy_marauder",
	name = "Harpy Marauder",
	rarity = 1,
	pos = {x = 34, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Harpy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_harpy_marauder"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_harpy_marauder"
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_harpy_marauder"

--- Hidden Grimoire ---

SMODS.Joker{
	key = "hidden_grimoire",
	name = "Hidden Grimoire",
	rarity = 1,
	pos = {x = 35, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hidden_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_hidden_grimoire"
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_hidden_grimoire"

--- Hunter Scout ---

SMODS.Joker{
	key = "hunter_scout",
	name = "Hunter Scout",
	rarity = 1,
	pos = {x = 36, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hunter_scout"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_hunter_scout"
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_hunter_scout"

--- Industrias Sanctus ---

SMODS.Joker{
	key = "industrias_sanctus",
	name = "Industrias Sanctus",
	rarity = 1,
	pos = {x = 37, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sanctus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_industrias_sanctus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_industrias_sanctus"
SRL_MOD.modded_jokers_sanctus[#SRL_MOD.modded_jokers_sanctus + 1] = "j_srl_industrias_sanctus"

--- Infested Slime ---

SMODS.Joker{
	key = "infested_slime",
	name = "Infested Slime",
	rarity = 1,
	pos = {x = 38, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Slime"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_infested_slime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_infested_slime"
SRL_MOD.modded_jokers_slime[#SRL_MOD.modded_jokers_slime + 1] = "j_srl_infested_slime"

--- Lurking Pit Worm ---

SMODS.Joker{
	key = "lurking_pit_worm",
	name = "Lurking Pit Worm",
	rarity = 1,
	pos = {x = 39, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lurking_pit_worm"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lurking_pit_worm"
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_lurking_pit_worm"

--- Malignant Spirit ---

SMODS.Joker{
	key = "malignant_spirit",
	name = "Malignant Spirit",
	rarity = 1,
	pos = {x = 40, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_malignant_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_malignant_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_malignant_spirit"

--- Marble Imler ---

SMODS.Joker{
	key = "marble_imler",
	name = "Marble Imler",
	rarity = 1,
	pos = {x = 41, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marble_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_marble_imler"
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_marble_imler"

--- Minotaur Lancer ---

SMODS.Joker{
	key = "minotaur_lancer",
	name = "Minotaur Lancer",
	rarity = 1,
	pos = {x = 42, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Minotaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_minotaur_lancer"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_minotaur_lancer"
SRL_MOD.modded_jokers_minotaur[#SRL_MOD.modded_jokers_minotaur + 1] = "j_srl_minotaur_lancer"

--- Mite Paralyzer ---

SMODS.Joker{
	key = "mite_paralyzer",
	name = "Mite Paralyzer",
	rarity = 1,
	pos = {x = 43, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mite"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mite_paralyzer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mite_paralyzer"
SRL_MOD.modded_jokers_mite[#SRL_MOD.modded_jokers_mite + 1] = "j_srl_mite_paralyzer"

--- Moon Crusader ---

SMODS.Joker{
	key = "moon_crusader",
	name = "Moon Crusader",
	rarity = 1,
	pos = {x = 44, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_moon_crusader"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_moon_crusader"
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_moon_crusader"

--- Mud Golem ---

SMODS.Joker{
	key = "mud_golem",
	name = "Mud Golem",
	rarity = 1,
	pos = {x = 45, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Golem"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mud_golem"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mud_golem"
SRL_MOD.modded_jokers_golem[#SRL_MOD.modded_jokers_golem + 1] = "j_srl_mud_golem"

--- Forsaken Plaguebearer ---

SMODS.Joker{
	key = "forsaken_plaguebearer",
	name = "Forsaken Plaguebearer",
	rarity = 1,
	pos = {x = 46, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Forsaken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forsaken_plaguebearer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forsaken_plaguebearer"
SRL_MOD.modded_jokers_forsaken[#SRL_MOD.modded_jokers_forsaken + 1] = "j_srl_forsaken_plaguebearer"

--- Mystical Giant ---

SMODS.Joker{
	key = "mystical_giant",
	name = "Mystical Giant",
	rarity = 1,
	pos = {x = 47, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mystical_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mystical_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_mystical_giant"

--- Opal Paragon ---

SMODS.Joker{
	key = "opal_paragon",
	name = "Opal Paragon",
	rarity = 1,
	pos = {x = 48, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Paragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_opal_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_opal_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_opal_paragon"

--- Phase Rogue ---

SMODS.Joker{
	key = "phase_rogue",
	name = "Phase Rogue",
	rarity = 1,
	pos = {x = 49, y = 12},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phase Warrior"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phase_rogue"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phase_rogue"
SRL_MOD.modded_jokers_phase_warrior[#SRL_MOD.modded_jokers_phase_warrior + 1] = "j_srl_phase_rogue"

--- Pilwiz Harvester ---

SMODS.Joker{
	key = "pilwiz_harvester",
	name = "Pilwiz Harvester",
	rarity = 1,
	pos = {x = 0, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pilwiz_harvester"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_pilwiz_harvester"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_pilwiz_harvester"

--- Pilwiz Herbalist ---

SMODS.Joker{
	key = "pilwiz_herbalist",
	name = "Pilwiz Herbalist",
	rarity = 1,
	pos = {x = 1, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Pilwiz"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pilwiz_herbalist"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_pilwiz_herbalist"
SRL_MOD.modded_jokers_pilwiz[#SRL_MOD.modded_jokers_pilwiz + 1] = "j_srl_pilwiz_herbalist"

--- Pit Wraith Tormenter ---

SMODS.Joker{
	key = "pit_wraith_tormenter",
	name = "Pit Wraith Tormenter",
	rarity = 1,
	pos = {x = 2, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Wraith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pit_wraith_tormenter"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_pit_wraith_tormenter"
SRL_MOD.modded_jokers_pit_wraith[#SRL_MOD.modded_jokers_pit_wraith + 1] = "j_srl_pit_wraith_tormenter"

--- Plague Reaper ---

SMODS.Joker{
	key = "plague_reaper",
	name = "Plague Reaper",
	rarity = 1,
	pos = {x = 3, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Reaper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_reaper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_plague_reaper"
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_plague_reaper"

--- Prophetic Spectre ---

SMODS.Joker{
	key = "prophetic_spectre",
	name = "Prophetic Spectre",
	rarity = 1,
	pos = {x = 4, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_prophetic_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_prophetic_spectre"
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_prophetic_spectre"

--- Radiant Amaranth ---

SMODS.Joker{
	key = "radiant_amaranth",
	name = "Radiant Amaranth",
	rarity = 1,
	pos = {x = 5, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_radiant_amaranth"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_radiant_amaranth"
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_radiant_amaranth"

--- Raven Guardian ---

SMODS.Joker{
	key = "raven_guardian",
	name = "Raven Guardian",
	rarity = 1,
	pos = {x = 6, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_guardian"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_guardian"
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_guardian"

--- Revenant Dagon ---

SMODS.Joker{
	key = "revenant_dagon",
	name = "Revenant Dagon",
	rarity = 1,
	pos = {x = 7, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_revenant_dagon"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_revenant_dagon"
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_revenant_dagon"

--- Tormented Banshee ---

SMODS.Joker{
	key = "tormented_banshee",
	name = "Tormented Banshee",
	rarity = 1,
	pos = {x = 8, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tormented_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_tormented_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_tormented_banshee"

--- Sentry Guard ---

SMODS.Joker{
	key = "sentry_guard",
	name = "Sentry Guard",
	rarity = 1,
	pos = {x = 9, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doomguard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sentry_guard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_sentry_guard"
SRL_MOD.modded_jokers_doomguard[#SRL_MOD.modded_jokers_doomguard + 1] = "j_srl_sentry_guard"

--- Gruesome Gargantuan ---

SMODS.Joker{
	key = "gruesome_gargantuan",
	name = "Gruesome Gargantuan",
	rarity = 1,
	pos = {x = 10, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gruesome_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_gruesome_gargantuan"
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_gruesome_gargantuan"

--- Shapeshifter Novice ---

SMODS.Joker{
	key = "shapeshifter_novice",
	name = "Shapeshifter Novice",
	rarity = 1,
	pos = {x = 11, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shapeshifter_novice"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_shapeshifter_novice"
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_shapeshifter_novice"

--- Silent Hunter ---

SMODS.Joker{
	key = "silent_hunter",
	name = "Silent Hunter",
	rarity = 1,
	pos = {x = 12, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Hunter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_silent_hunter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_silent_hunter"
SRL_MOD.modded_jokers_hunter[#SRL_MOD.modded_jokers_hunter + 1] = "j_srl_silent_hunter"

--- Siren Lifetaker ---

SMODS.Joker{
	key = "siren_lifetaker",
	name = "Siren Lifetaker",
	rarity = 1,
	pos = {x = 13, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Siren"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siren_lifetaker"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_siren_lifetaker"
SRL_MOD.modded_jokers_siren[#SRL_MOD.modded_jokers_siren + 1] = "j_srl_siren_lifetaker"

--- Skeleton Buccaneer ---

SMODS.Joker{
	key = "skeleton_buccaneer",
	name = "Skeleton Buccaneer",
	rarity = 1,
	pos = {x = 14, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Skeleton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skeleton_buccaneer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skeleton_buccaneer"
SRL_MOD.modded_jokers_skeleton[#SRL_MOD.modded_jokers_skeleton + 1] = "j_srl_skeleton_buccaneer"

--- Slurping Bat ---

SMODS.Joker{
	key = "slurping_bat",
	name = "Slurping Bat",
	rarity = 1,
	pos = {x = 15, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_slurping_bat"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_slurping_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_slurping_bat"

--- Smoke Devil ---

SMODS.Joker{
	key = "smoke_devil",
	name = "Smoke Devil",
	rarity = 1,
	pos = {x = 16, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_smoke_devil"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_smoke_devil"
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_smoke_devil"

--- Spectral Familiar ---

SMODS.Joker{
	key = "spectral_familiar",
	name = "Spectral Familiar",
	rarity = 1,
	pos = {x = 17, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Familiar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spectral_familiar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spectral_familiar"
SRL_MOD.modded_jokers_familiar[#SRL_MOD.modded_jokers_familiar + 1] = "j_srl_spectral_familiar"

--- Sphinx Usurper ---

SMODS.Joker{
	key = "sphinx_usurper",
	name = "Sphinx Usurper",
	rarity = 1,
	pos = {x = 18, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Sphinx"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sphinx_usurper"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sphinx_usurper"
SRL_MOD.modded_jokers_sphinx[#SRL_MOD.modded_jokers_sphinx + 1] = "j_srl_sphinx_usurper"

--- Static Clutcher ---

SMODS.Joker{
	key = "static_clutcher",
	name = "Static Clutcher",
	rarity = 1,
	pos = {x = 19, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_static_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_static_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_static_clutcher"

--- Stonehorn Gargoyle ---

SMODS.Joker{
	key = "stonehorn_gargoyle",
	name = "Stonehorn Gargoyle",
	rarity = 1,
	pos = {x = 20, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stonehorn_gargoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_stonehorn_gargoyle"
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_stonehorn_gargoyle"

--- Subaqueous Dragon ---

SMODS.Joker{
	key = "subaqueous_dragon",
	name = "Subaqueous Dragon",
	rarity = 1,
	pos = {x = 21, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_subaqueous_dragon"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_subaqueous_dragon"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_subaqueous_dragon"

--- Swarm Mummy ---

SMODS.Joker{
	key = "swarm_mummy",
	name = "Swarm Mummy",
	rarity = 1,
	pos = {x = 22, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mummy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_swarm_mummy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_swarm_mummy"
SRL_MOD.modded_jokers_mummy[#SRL_MOD.modded_jokers_mummy + 1] = "j_srl_swarm_mummy"

--- Transcended Phoenix ---

SMODS.Joker{
	key = "transcended_phoenix",
	name = "Transcended Phoenix",
	rarity = 1,
	pos = {x = 23, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_transcended_phoenix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_transcended_phoenix"
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_transcended_phoenix"

--- Troll Youngster ---

SMODS.Joker{
	key = "troll_youngster",
	name = "Troll Youngster",
	rarity = 1,
	pos = {x = 24, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_troll_youngster"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_troll_youngster"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_troll_youngster"

--- Unchained Djinn ---

SMODS.Joker{
	key = "unchained_djinn",
	name = "Unchained Djinn",
	rarity = 1,
	pos = {x = 25, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Djinn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unchained_djinn"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_unchained_djinn"
SRL_MOD.modded_jokers_djinn[#SRL_MOD.modded_jokers_djinn + 1] = "j_srl_unchained_djinn"

--- Wandering Shade ---

SMODS.Joker{
	key = "wandering_shade",
	name = "Wandering Shade",
	rarity = 1,
	pos = {x = 26, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wandering_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_wandering_shade"
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_wandering_shade"

--- War Crafter ---

SMODS.Joker{
	key = "war_crafter",
	name = "War Crafter",
	rarity = 1,
	pos = {x = 27, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Smith"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_war_crafter"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_war_crafter"
SRL_MOD.modded_jokers_smith[#SRL_MOD.modded_jokers_smith + 1] = "j_srl_war_crafter"

--- Waspid Hiveleader ---

SMODS.Joker{
	key = "waspid_hiveleader",
	name = "Waspid Hiveleader",
	rarity = 1,
	pos = {x = 28, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Waspid"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_waspid_hiveleader"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_waspid_hiveleader"
SRL_MOD.modded_jokers_waspid[#SRL_MOD.modded_jokers_waspid + 1] = "j_srl_waspid_hiveleader"

--- Watcher Sentinel ---

SMODS.Joker{
	key = "watcher_sentinel",
	name = "Watcher Sentinel",
	rarity = 1,
	pos = {x = 29, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_watcher_sentinel"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_watcher_sentinel"
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_watcher_sentinel"

--- Whiptail Clutcher ---

SMODS.Joker{
	key = "whiptail_clutcher",
	name = "Whiptail Clutcher",
	rarity = 1,
	pos = {x = 30, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_whiptail_clutcher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_whiptail_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_whiptail_clutcher"

--- Woeful Spectre ---

SMODS.Joker{
	key = "woeful_spectre",
	name = "Woeful Spectre",
	rarity = 1,
	pos = {x = 31, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spectre"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_woeful_spectre"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_woeful_spectre"
SRL_MOD.modded_jokers_spectre[#SRL_MOD.modded_jokers_spectre + 1] = "j_srl_woeful_spectre"

--- Wyvern Toxicfang ---

SMODS.Joker{
	key = "wyvern_toxicfang",
	name = "Wyvern Toxicfang",
	rarity = 1,
	pos = {x = 32, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Wyvern"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wyvern_toxicfang"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_wyvern_toxicfang"
SRL_MOD.modded_jokers_wyvern[#SRL_MOD.modded_jokers_wyvern + 1] = "j_srl_wyvern_toxicfang"

--- Bard Fool ---

SMODS.Joker{
	key = "bard_fool",
	name = "Bard Fool",
	rarity = 1,
	pos = {x = 33, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_fool"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_fool"
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_fool"

--- Bile Abomination ---

SMODS.Joker{
	key = "bile_abomination",
	name = "Bile Abomination",
	rarity = 1,
	pos = {x = 34, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bile_abomination"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_bile_abomination"
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_bile_abomination"

--- Centaur Duelist ---

SMODS.Joker{
	key = "centaur_duelist",
	name = "Centaur Duelist",
	rarity = 1,
	pos = {x = 35, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_duelist"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_duelist"
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_duelist"

--- Chaos Salamander ---

SMODS.Joker{
	key = "chaos_salamander",
	name = "Chaos Salamander",
	rarity = 1,
	pos = {x = 36, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Salamander"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chaos_salamander"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_chaos_salamander"
SRL_MOD.modded_jokers_salamander[#SRL_MOD.modded_jokers_salamander + 1] = "j_srl_chaos_salamander"

--- Elf Drifter ---

SMODS.Joker{
	key = "elf_drifter",
	name = "Elf Drifter",
	rarity = 1,
	pos = {x = 37, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_drifter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_drifter"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_drifter"

--- Incandescent Vulpes ---

SMODS.Joker{
	key = "incandescent_vulpes",
	name = "Incandescent Vulpes",
	rarity = 1,
	pos = {x = 38, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_incandescent_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_incandescent_vulpes"
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_incandescent_vulpes"

--- Lich Necromancer ---

SMODS.Joker{
	key = "lich_necromancer",
	name = "Lich Necromancer",
	rarity = 1,
	pos = {x = 39, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_necromancer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lich_necromancer"
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_necromancer"

--- Malignant Storm ---

SMODS.Joker{
	key = "malignant_storm",
	name = "Malignant Storm",
	rarity = 1,
	pos = {x = 40, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_malignant_storm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_malignant_storm"
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_malignant_storm"

--- Sadomasochist ---

SMODS.Joker{
	key = "sadomasochist",
	name = "Sadomasochist",
	rarity = 1,
	pos = {x = 41, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sadomasochist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sadomasochist"
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_sadomasochist"

--- Corox Apocalypse ---

SMODS.Joker{
	key = "corox_apocalypse",
	name = "Corox Apocalypse",
	rarity = 1,
	pos = {x = 42, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Apocalypse"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_corox_apocalypse"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_corox_apocalypse"
SRL_MOD.modded_jokers_apocalypse[#SRL_MOD.modded_jokers_apocalypse + 1] = "j_srl_corox_apocalypse"

--- Eternal Divinity ---

SMODS.Joker{
	key = "eternal_divinity",
	name = "Eternal Divinity",
	rarity = 1,
	pos = {x = 43, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eternal_divinity"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_eternal_divinity"
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_eternal_divinity"

--- Maluh Ophan ---

SMODS.Joker{
	key = "maluh_ophan",
	name = "Maluh Ophan",
	rarity = 1,
	pos = {x = 44, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Ophan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_maluh_ophan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_maluh_ophan"
SRL_MOD.modded_jokers_ophan[#SRL_MOD.modded_jokers_ophan + 1] = "j_srl_maluh_ophan"

--- Apollinaire ---

SMODS.Joker{
	key = "apollinaire",
	name = "Apollinaire",
	rarity = 1,
	pos = {x = 45, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Rift Dancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apollinaire"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apollinaire"
SRL_MOD.modded_jokers_rift_dancer[#SRL_MOD.modded_jokers_rift_dancer + 1] = "j_srl_apollinaire"

--- Nex Seraph ---

SMODS.Joker{
	key = "nex_seraph",
	name = "Nex Seraph",
	rarity = 1,
	pos = {x = 46, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Seraph"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nex_seraph"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nex_seraph"
SRL_MOD.modded_jokers_seraph[#SRL_MOD.modded_jokers_seraph + 1] = "j_srl_nex_seraph"

--- Gorlum Tremor ---

SMODS.Joker{
	key = "gorlum_tremor",
	name = "Gorlum Tremor",
	rarity = 1,
	pos = {x = 47, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tremor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gorlum_tremor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_gorlum_tremor"
SRL_MOD.modded_jokers_tremor[#SRL_MOD.modded_jokers_tremor + 1] = "j_srl_gorlum_tremor"

--- Nix Backstabber ---

SMODS.Joker{
	key = "nix_backstabber",
	name = "Nix Backstabber",
	rarity = 1,
	pos = {x = 48, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_backstabber"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_backstabber"
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_backstabber"

--- Plague Expert ---

SMODS.Joker{
	key = "plague_expert",
	name = "Plague Expert",
	rarity = 1,
	pos = {x = 49, y = 13},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_expert"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_plague_expert"
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_expert"

--- Martyaxwar ---

SMODS.Joker{
	key = "martyaxwar",
	name = "Martyaxwar",
	rarity = 1,
	pos = {x = 0, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_martyaxwar"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_martyaxwar"
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_martyaxwar"

--- Rock Imling ---

SMODS.Joker{
	key = "rock_imling",
	name = "Rock Imling",
	rarity = 1,
	pos = {x = 1, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rock_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_rock_imling"
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_rock_imling"

--- Spitting Basilisk ---

SMODS.Joker{
	key = "spitting_basilisk",
	name = "Spitting Basilisk",
	rarity = 1,
	pos = {x = 2, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Basilisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spitting_basilisk"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_spitting_basilisk"
SRL_MOD.modded_jokers_basilisk[#SRL_MOD.modded_jokers_basilisk + 1] = "j_srl_spitting_basilisk"

--- Stag Abstract ---

SMODS.Joker{
	key = "stag_abstract",
	name = "Stag Abstract",
	rarity = 1,
	pos = {x = 3, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_abstract"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_abstract"
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_abstract"

--- Toxic Smog ---

SMODS.Joker{
	key = "toxic_smog",
	name = "Toxic Smog",
	rarity = 1,
	pos = {x = 4, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxic_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_toxic_smog"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_toxic_smog"

--- Unicorn Firewalker ---

SMODS.Joker{
	key = "unicorn_firewalker",
	name = "Unicorn Firewalker",
	rarity = 1,
	pos = {x = 5, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unicorn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unicorn_firewalker"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unicorn_firewalker"
SRL_MOD.modded_jokers_unicorn[#SRL_MOD.modded_jokers_unicorn + 1] = "j_srl_unicorn_firewalker"

--- Valkyrie Duelist ---

SMODS.Joker{
	key = "valkyrie_duelist",
	name = "Valkyrie Duelist",
	rarity = 1,
	pos = {x = 6, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_duelist"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_duelist"
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_duelist"

--- Dolor Sin ---

SMODS.Joker{
	key = "dolor_sin",
	name = "Dolor Sin",
	rarity = 1,
	pos = {x = 7, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sin"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dolor_sin"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dolor_sin"
SRL_MOD.modded_jokers_sin[#SRL_MOD.modded_jokers_sin + 1] = "j_srl_dolor_sin"

--- Sulfuric Vortex ---

SMODS.Joker{
	key = "sulfuric_vortex",
	name = "Sulfuric Vortex",
	rarity = 1,
	pos = {x = 8, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sulfuric_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sulfuric_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_sulfuric_vortex"

--- Imp Incarnate ---

SMODS.Joker{
	key = "imp_incarnate",
	name = "Imp Incarnate",
	rarity = 1,
	pos = {x = 9, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_incarnate"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_imp_incarnate"
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_incarnate"

--- Iconus ---

SMODS.Joker{
	key = "iconus",
	name = "Iconus",
	rarity = 1,
	pos = {x = 10, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_iconus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_iconus"
SRL_MOD.modded_jokers_godspawn = {}
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_iconus"

--- Ottum ---

SMODS.Joker{
	key = "ottum",
	name = "Ottum",
	rarity = 1,
	pos = {x = 11, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ottum"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ottum"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_ottum"

--- The Lost ---

SMODS.Joker{
	key = "the_lost",
	name = "The Lost",
	rarity = 1,
	pos = {x = 12, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_the_lost"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_the_lost"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_the_lost"

--- Tisya ---

SMODS.Joker{
	key = "tisya",
	name = "Tisya",
	rarity = 1,
	pos = {x = 13, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tisya"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_tisya"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_tisya"

--- Walken ---

SMODS.Joker{
	key = "walken",
	name = "Walken",
	rarity = 1,
	pos = {x = 14, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_walken"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_walken"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_walken"

--- Mumu ---

SMODS.Joker{
	key = "mumu",
	name = "Mumu",
	rarity = 1,
	pos = {x = 15, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mumu"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_mumu"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_mumu"

--- Ugat ---

SMODS.Joker{
	key = "ugat",
	name = "Ugat",
	rarity = 1,
	pos = {x = 16, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ugat"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ugat"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_ugat"

--- Yllor ---

SMODS.Joker{
	key = "yllor",
	name = "Yllor",
	rarity = 1,
	pos = {x = 17, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_yllor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_yllor"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_yllor"

--- Elqor ---

SMODS.Joker{
	key = "elqor",
	name = "Elqor",
	rarity = 1,
	pos = {x = 18, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elqor"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_elqor"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_elqor"

--- Dikya ---

SMODS.Joker{
	key = "dikya",
	name = "Dikya",
	rarity = 1,
	pos = {x = 19, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dikya"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_dikya"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_dikya"

--- Kalasag ---

SMODS.Joker{
	key = "kalasag",
	name = "Kalasag",
	rarity = 1,
	pos = {x = 20, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kalasag"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_kalasag"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_kalasag"

--- Aja Birku ---

SMODS.Joker{
	key = "aja_birku",
	name = "Aja Birku",
	rarity = 1,
	pos = {x = 21, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aja_birku"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_aja_birku"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_aja_birku"

--- Laglor ---

SMODS.Joker{
	key = "laglor",
	name = "Laglor",
	rarity = 1,
	pos = {x = 22, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_laglor"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_laglor"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_laglor"

--- Emlai ---

SMODS.Joker{
	key = "emlai",
	name = "Emlai",
	rarity = 1,
	pos = {x = 23, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_emlai"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_emlai"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_emlai"

--- Alakadan ---

SMODS.Joker{
	key = "alakadan",
	name = "Alakadan",
	rarity = 1,
	pos = {x = 24, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_alakadan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_alakadan"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_alakadan"

--- Pandemonium Queen ---

SMODS.Joker{
	key = "pandemonium_queen",
	name = "Pandemonium Queen",
	rarity = 1,
	pos = {x = 25, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Doom Fortress"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pandemonium_queen"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_pandemonium_queen"
SRL_MOD.modded_jokers_doom_fortress[#SRL_MOD.modded_jokers_doom_fortress + 1] = "j_srl_pandemonium_queen"

--- Surathli ---

SMODS.Joker{
	key = "surathli",
	name = "Surathli",
	rarity = 1,
	pos = {x = 26, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_surathli"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_surathli"
SRL_MOD.modded_jokers_avatar = {}
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_surathli"

--- Aeolian ---

SMODS.Joker{
	key = "aeolian",
	name = "Aeolian",
	rarity = 1,
	pos = {x = 27, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aeolian"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_aeolian"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_aeolian"

--- Azural ---

SMODS.Joker{
	key = "azural",
	name = "Azural",
	rarity = 1,
	pos = {x = 28, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_azural"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_azural"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_azural"

--- Erebyss ---

SMODS.Joker{
	key = "erebyss",
	name = "Erebyss",
	rarity = 1,
	pos = {x = 29, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_erebyss"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_erebyss"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_erebyss"

--- Friden ---

SMODS.Joker{
	key = "friden",
	name = "Friden",
	rarity = 1,
	pos = {x = 30, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_friden"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_friden"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_friden"

--- Gonfurian ---

SMODS.Joker{
	key = "gonfurian",
	name = "Gonfurian",
	rarity = 1,
	pos = {x = 31, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gonfurian"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_gonfurian"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_gonfurian"

--- Lister ---

SMODS.Joker{
	key = "lister",
	name = "Lister",
	rarity = 1,
	pos = {x = 32, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lister"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_lister"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_lister"

--- Meraxis ---

SMODS.Joker{
	key = "meraxis",
	name = "Meraxis",
	rarity = 1,
	pos = {x = 33, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_meraxis"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_meraxis"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_meraxis"

--- Regalis ---

SMODS.Joker{
	key = "regalis",
	name = "Regalis",
	rarity = 1,
	pos = {x = 34, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_regalis"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_regalis"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_regalis"

--- Tartarith ---

SMODS.Joker{
	key = "tartarith",
	name = "Tartarith",
	rarity = 1,
	pos = {x = 35, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tartarith"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_tartarith"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_tartarith"

--- Vulcanar ---

SMODS.Joker{
	key = "vulcanar",
	name = "Vulcanar",
	rarity = 1,
	pos = {x = 36, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vulcanar"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_vulcanar"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_vulcanar"

--- Yseros ---

SMODS.Joker{
	key = "yseros",
	name = "Yseros",
	rarity = 1,
	pos = {x = 37, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_yseros"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_yseros"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_yseros"

--- Vertraag ---

SMODS.Joker{
	key = "vertraag",
	name = "Vertraag",
	rarity = 1,
	pos = {x = 38, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vertraag"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_vertraag"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_vertraag"

--- Torun ---

SMODS.Joker{
	key = "torun",
	name = "Torun",
	rarity = 1,
	pos = {x = 39, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_torun"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_torun"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_torun"

--- Zonte ---

SMODS.Joker{
	key = "zonte",
	name = "Zonte",
	rarity = 1,
	pos = {x = 40, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zonte"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_zonte"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_zonte"

--- Grenale ---

SMODS.Joker{
	key = "grenale",
	name = "Grenale",
	rarity = 1,
	pos = {x = 41, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_grenale"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_grenale"
SRL_MOD.modded_jokers_alemental = {}
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_grenale"

--- Lagergoyle ---

SMODS.Joker{
	key = "lagergoyle",
	name = "Lagergoyle",
	rarity = 1,
	pos = {x = 42, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lagergoyle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_lagergoyle"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_lagergoyle"

--- Scotchpion ---

SMODS.Joker{
	key = "scotchpion",
	name = "Scotchpion",
	rarity = 1,
	pos = {x = 43, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_scotchpion"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_scotchpion"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_scotchpion"

--- Spirits ---

SMODS.Joker{
	key = "spirits",
	name = "Spirits",
	rarity = 1,
	pos = {x = 44, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spirits"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_spirits"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_spirits"

--- Ryetrap ---

SMODS.Joker{
	key = "ryetrap",
	name = "Ryetrap",
	rarity = 1,
	pos = {x = 45, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ryetrap"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_ryetrap"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_ryetrap"

--- Vermowl ---

SMODS.Joker{
	key = "vermowl",
	name = "Vermowl",
	rarity = 1,
	pos = {x = 46, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vermowl"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_vermowl"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_vermowl"

--- Vulperry ---

SMODS.Joker{
	key = "vulperry",
	name = "Vulperry",
	rarity = 1,
	pos = {x = 47, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vulperry"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_vulperry"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_vulperry"

--- Whiskull ---

SMODS.Joker{
	key = "whiskull",
	name = "Whiskull",
	rarity = 1,
	pos = {x = 48, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_whiskull"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_whiskull"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_whiskull"

--- Winegel ---

SMODS.Joker{
	key = "winegel",
	name = "Winegel",
	rarity = 1,
	pos = {x = 49, y = 14},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_winegel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_winegel"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_winegel"

--- Woodka ---

SMODS.Joker{
	key = "woodka",
	name = "Woodka",
	rarity = 1,
	pos = {x = 0, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Alemental"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_woodka"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_woodka"
SRL_MOD.modded_jokers_alemental[#SRL_MOD.modded_jokers_alemental + 1] = "j_srl_woodka"

--- Pyro Grimoire ---

SMODS.Joker{
	key = "pyro_grimoire",
	name = "Pyro Grimoire",
	rarity = 1,
	pos = {x = 1, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Grimoire"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pyro_grimoire"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_pyro_grimoire"
SRL_MOD.modded_jokers_grimoire[#SRL_MOD.modded_jokers_grimoire + 1] = "j_srl_pyro_grimoire"

--- Treat Imling ---

SMODS.Joker{
	key = "treat_imling",
	name = "Treat Imling",
	rarity = 1,
	pos = {x = 2, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_treat_imling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_treat_imling"
SRL_MOD.modded_jokers_imling[#SRL_MOD.modded_jokers_imling + 1] = "j_srl_treat_imling"

--- Trick Imler ---

SMODS.Joker{
	key = "trick_imler",
	name = "Trick Imler",
	rarity = 1,
	pos = {x = 3, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Imler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_trick_imler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_trick_imler"
SRL_MOD.modded_jokers_imler[#SRL_MOD.modded_jokers_imler + 1] = "j_srl_trick_imler"

--- Spooky Shade ---

SMODS.Joker{
	key = "spooky_shade",
	name = "Spooky Shade",
	rarity = 1,
	pos = {x = 4, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shade"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spooky_shade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_spooky_shade"
SRL_MOD.modded_jokers_shade[#SRL_MOD.modded_jokers_shade + 1] = "j_srl_spooky_shade"

--- Headless Wight ---

SMODS.Joker{
	key = "headless_wight",
	name = "Headless Wight",
	rarity = 1,
	pos = {x = 5, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_headless_wight"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_headless_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_headless_wight"

--- Cloth Abomination ---

SMODS.Joker{
	key = "cloth_abomination",
	name = "Cloth Abomination",
	rarity = 1,
	pos = {x = 6, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Abomination"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cloth_abomination"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_cloth_abomination"
SRL_MOD.modded_jokers_abomination[#SRL_MOD.modded_jokers_abomination + 1] = "j_srl_cloth_abomination"

--- Silverbone Construct ---

SMODS.Joker{
	key = "silverbone_construct",
	name = "Silverbone Construct",
	rarity = 1,
	pos = {x = 7, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_silverbone_construct"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_silverbone_construct"
SRL_MOD.modded_jokers_construct = {}
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_silverbone_construct"

--- Skywatch Construct ---

SMODS.Joker{
	key = "skywatch_construct",
	name = "Skywatch Construct",
	rarity = 1,
	pos = {x = 8, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skywatch_construct"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_skywatch_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_skywatch_construct"

--- Treewall Construct ---

SMODS.Joker{
	key = "treewall_construct",
	name = "Treewall Construct",
	rarity = 1,
	pos = {x = 9, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_treewall_construct"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_treewall_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_treewall_construct"

--- Willow Construct ---

SMODS.Joker{
	key = "willow_construct",
	name = "Willow Construct",
	rarity = 1,
	pos = {x = 10, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_willow_construct"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_willow_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_willow_construct"

--- Astro Construct ---

SMODS.Joker{
	key = "astro_construct",
	name = "Astro Construct",
	rarity = 1,
	pos = {x = 11, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_astro_construct"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_astro_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_astro_construct"

--- Bloodmail Construct ---

SMODS.Joker{
	key = "bloodmail_construct",
	name = "Bloodmail Construct",
	rarity = 1,
	pos = {x = 12, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bloodmail_construct"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bloodmail_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_bloodmail_construct"

--- Heavenshield Construct ---

SMODS.Joker{
	key = "heavenshield_construct",
	name = "Heavenshield Construct",
	rarity = 1,
	pos = {x = 13, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_heavenshield_construct"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_heavenshield_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_heavenshield_construct"

--- Magma Construct ---

SMODS.Joker{
	key = "magma_construct",
	name = "Magma Construct",
	rarity = 1,
	pos = {x = 14, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_magma_construct"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_magma_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_magma_construct"

--- Nightveil Construct ---

SMODS.Joker{
	key = "nightveil_construct",
	name = "Nightveil Construct",
	rarity = 1,
	pos = {x = 15, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nightveil_construct"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nightveil_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_nightveil_construct"

--- Redsteel Construct ---

SMODS.Joker{
	key = "redsteel_construct",
	name = "Redsteel Construct",
	rarity = 1,
	pos = {x = 16, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Construct"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_redsteel_construct"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_redsteel_construct"
SRL_MOD.modded_jokers_construct[#SRL_MOD.modded_jokers_construct + 1] = "j_srl_redsteel_construct"

--- Stag Guide ---

SMODS.Joker{
	key = "stag_guide",
	name = "Stag Guide",
	rarity = 1,
	pos = {x = 17, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Stag"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stag_guide"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_stag_guide"
SRL_MOD.modded_jokers_stag[#SRL_MOD.modded_jokers_stag + 1] = "j_srl_stag_guide"

--- Bard Caroller ---

SMODS.Joker{
	key = "bard_caroller",
	name = "Bard Caroller",
	rarity = 1,
	pos = {x = 18, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Bard"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bard_caroller"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bard_caroller"
SRL_MOD.modded_jokers_bard[#SRL_MOD.modded_jokers_bard + 1] = "j_srl_bard_caroller"

--- Blizzard ---

SMODS.Joker{
	key = "blizzard",
	name = "Blizzard",
	rarity = 1,
	pos = {x = 19, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Storm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blizzard"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_blizzard"
SRL_MOD.modded_jokers_storm[#SRL_MOD.modded_jokers_storm + 1] = "j_srl_blizzard"

--- Evergreen Ent ---

SMODS.Joker{
	key = "evergreen_ent",
	name = "Evergreen Ent",
	rarity = 1,
	pos = {x = 20, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Ent"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_evergreen_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_evergreen_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_evergreen_ent"

--- Holiday Spirit ---

SMODS.Joker{
	key = "holiday_spirit",
	name = "Holiday Spirit",
	rarity = 1,
	pos = {x = 21, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_holiday_spirit"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_holiday_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_holiday_spirit"

--- Gift Mimic ---

SMODS.Joker{
	key = "gift_mimic",
	name = "Gift Mimic",
	rarity = 1,
	pos = {x = 22, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Mimic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gift_mimic"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_gift_mimic"
SRL_MOD.modded_jokers_mimic[#SRL_MOD.modded_jokers_mimic + 1] = "j_srl_gift_mimic"

--- Jingle Elf ---

SMODS.Joker{
	key = "jingle_elf",
	name = "Jingle Elf",
	rarity = 1,
	pos = {x = 23, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_jingle_elf"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_jingle_elf"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_jingle_elf"

--- Jolly Old Giant ---

SMODS.Joker{
	key = "jolly_old_giant",
	name = "Jolly Old Giant",
	rarity = 1,
	pos = {x = 24, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_jolly_old_giant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_jolly_old_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_jolly_old_giant"

--- Pudding ---

SMODS.Joker{
	key = "pudding",
	name = "Pudding",
	rarity = 1,
	pos = {x = 25, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pudding"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_pudding"
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_pudding"

--- Trollboar ---

SMODS.Joker{
	key = "trollboar",
	name = "Trollboar",
	rarity = 1,
	pos = {x = 26, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_trollboar"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_trollboar"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_trollboar"

--- Ascendant Revenant ---

SMODS.Joker{
	key = "ascendant_revenant",
	name = "Ascendant Revenant",
	rarity = 1,
	pos = {x = 27, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Revenant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ascendant_revenant"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_ascendant_revenant"
SRL_MOD.modded_jokers_revenant[#SRL_MOD.modded_jokers_revenant + 1] = "j_srl_ascendant_revenant"

--- Fortune Dragon ---

SMODS.Joker{
	key = "fortune_dragon",
	name = "Fortune Dragon",
	rarity = 1,
	pos = {x = 28, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_fortune_dragon"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_fortune_dragon"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_fortune_dragon"

--- Solar Amaranth ---

SMODS.Joker{
	key = "solar_amaranth",
	name = "Solar Amaranth",
	rarity = 1,
	pos = {x = 29, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amaranth"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_solar_amaranth"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_solar_amaranth"
SRL_MOD.modded_jokers_amaranth[#SRL_MOD.modded_jokers_amaranth + 1] = "j_srl_solar_amaranth"

--- Vernal Wolpertinger ---

SMODS.Joker{
	key = "vernal_wolpertinger",
	name = "Vernal Wolpertinger",
	rarity = 1,
	pos = {x = 30, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vernal_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_vernal_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_vernal_wolpertinger"

--- Squash ---

SMODS.Joker{
	key = "squash",
	name = "Squash",
	rarity = 1,
	pos = {x = 31, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_squash"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_squash"
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_squash"

--- Apis Adolescent ---

SMODS.Joker{
	key = "apis_adolescent",
	name = "Apis Adolescent",
	rarity = 1,
	pos = {x = 32, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Apis"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apis_adolescent"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_apis_adolescent"
SRL_MOD.modded_jokers_apis[#SRL_MOD.modded_jokers_apis + 1] = "j_srl_apis_adolescent"

--- Bunny Devil ---

SMODS.Joker{
	key = "bunny_devil",
	name = "Bunny Devil",
	rarity = 1,
	pos = {x = 33, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Devil"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bunny_devil"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_bunny_devil"
SRL_MOD.modded_jokers_devil[#SRL_MOD.modded_jokers_devil + 1] = "j_srl_bunny_devil"

--- Chocolate Paragon ---

SMODS.Joker{
	key = "chocolate_paragon",
	name = "Chocolate Paragon",
	rarity = 1,
	pos = {x = 34, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Paragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chocolate_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_chocolate_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_chocolate_paragon"

--- Dryad Sunbather ---

SMODS.Joker{
	key = "dryad_sunbather",
	name = "Dryad Sunbather",
	rarity = 1,
	pos = {x = 35, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dryad"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryad_sunbather"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dryad_sunbather"
SRL_MOD.modded_jokers_dryad[#SRL_MOD.modded_jokers_dryad + 1] = "j_srl_dryad_sunbather"

--- Festival Smog ---

SMODS.Joker{
	key = "festival_smog",
	name = "Festival Smog",
	rarity = 1,
	pos = {x = 36, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_festival_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_festival_smog"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_festival_smog"

--- Killer Cooler ---

SMODS.Joker{
	key = "killer_cooler",
	name = "Killer Cooler",
	rarity = 1,
	pos = {x = 37, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Mimic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_killer_cooler"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_killer_cooler"
SRL_MOD.modded_jokers_mimic[#SRL_MOD.modded_jokers_mimic + 1] = "j_srl_killer_cooler"

--- Melon ---

SMODS.Joker{
	key = "melon",
	name = "Melon",
	rarity = 1,
	pos = {x = 38, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_melon"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_melon"
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_melon"

--- Omelette ---

SMODS.Joker{
	key = "omelette",
	name = "Omelette",
	rarity = 1,
	pos = {x = 39, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_omelette"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_omelette"
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_omelette"

--- Ovoid Vortex ---

SMODS.Joker{
	key = "ovoid_vortex",
	name = "Ovoid Vortex",
	rarity = 1,
	pos = {x = 40, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ovoid_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ovoid_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_ovoid_vortex"

--- Inflatable Watcher ---

SMODS.Joker{
	key = "inflatable_watcher",
	name = "Inflatable Watcher",
	rarity = 1,
	pos = {x = 41, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Watcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_inflatable_watcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_inflatable_watcher"
SRL_MOD.modded_jokers_watcher[#SRL_MOD.modded_jokers_watcher + 1] = "j_srl_inflatable_watcher"

--- Tanukrook ---

SMODS.Joker{
	key = "tanukrook",
	name = "Tanukrook",
	rarity = 1,
	pos = {x = 42, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tanukrook"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tanukrook"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_tanukrook"
SRL_MOD.modded_jokers_tanukrook = {}
SRL_MOD.modded_jokers_tanukrook[#SRL_MOD.modded_jokers_tanukrook + 1] = "j_srl_tanukrook"

--- Mogwai ---

SMODS.Joker{
	key = "mogwai",
	name = "Mogwai",
	rarity = 1,
	pos = {x = 43, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mogwai"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mogwai"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mogwai"
SRL_MOD.modded_jokers_mogwai = {}
SRL_MOD.modded_jokers_mogwai[#SRL_MOD.modded_jokers_mogwai + 1] = "j_srl_mogwai"

--- Purrghast ---

SMODS.Joker{
	key = "purrghast",
	name = "Purrghast",
	rarity = 1,
	pos = {x = 44, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Purrghast"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_purrghast"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_purrghast"
SRL_MOD.modded_jokers_purrghast = {}
SRL_MOD.modded_jokers_purrghast[#SRL_MOD.modded_jokers_purrghast + 1] = "j_srl_purrghast"

--- Colg ---

SMODS.Joker{
	key = "colg",
	name = "Colg",
	rarity = 1,
	pos = {x = 45, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_colg"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_colg"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_colg"

--- Darksulker ---

SMODS.Joker{
	key = "darksulker",
	name = "Darksulker",
	rarity = 1,
	pos = {x = 46, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_darksulker"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_darksulker"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_darksulker"

--- Diamant ---

SMODS.Joker{
	key = "diamant",
	name = "Diamant",
	rarity = 1,
	pos = {x = 47, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diamant"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_diamant"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_diamant"

--- Kapre ---

SMODS.Joker{
	key = "kapre",
	name = "Kapre",
	rarity = 1,
	pos = {x = 48, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kapre"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_kapre"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_kapre"

--- Linta ---

SMODS.Joker{
	key = "linta",
	name = "Linta",
	rarity = 1,
	pos = {x = 49, y = 15},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_linta"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_linta"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_linta"

--- Noxpit ---

SMODS.Joker{
	key = "noxpit",
	name = "Noxpit",
	rarity = 1,
	pos = {x = 0, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_noxpit"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_noxpit"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_noxpit"

--- Tenbran ---

SMODS.Joker{
	key = "tenbran",
	name = "Tenbran",
	rarity = 1,
	pos = {x = 1, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tenbran"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_tenbran"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_tenbran"

--- Amphisbaena Chef ---

SMODS.Joker{
	key = "amphisbaena_chef",
	name = "Amphisbaena Chef",
	rarity = 1,
	pos = {x = 2, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amphisbaena"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amphisbaena_chef"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amphisbaena_chef"
SRL_MOD.modded_jokers_amphisbaena = {}
SRL_MOD.modded_jokers_amphisbaena[#SRL_MOD.modded_jokers_amphisbaena + 1] = "j_srl_amphisbaena_chef"

--- Amphisbaena Arbitrator ---

SMODS.Joker{
	key = "amphisbaena_arbitrator",
	name = "Amphisbaena Arbitrator",
	rarity = 1,
	pos = {x = 3, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amphisbaena"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amphisbaena_arbitrator"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amphisbaena_arbitrator"
SRL_MOD.modded_jokers_amphisbaena[#SRL_MOD.modded_jokers_amphisbaena + 1] = "j_srl_amphisbaena_arbitrator"

--- Amphisbaena Vaccinator ---

SMODS.Joker{
	key = "amphisbaena_vaccinator",
	name = "Amphisbaena Vaccinator",
	rarity = 1,
	pos = {x = 4, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amphisbaena"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amphisbaena_vaccinator"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amphisbaena_vaccinator"
SRL_MOD.modded_jokers_amphisbaena[#SRL_MOD.modded_jokers_amphisbaena + 1] = "j_srl_amphisbaena_vaccinator"

--- Amphisbaena Gardener ---

SMODS.Joker{
	key = "amphisbaena_gardener",
	name = "Amphisbaena Gardener",
	rarity = 1,
	pos = {x = 5, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amphisbaena"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amphisbaena_gardener"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amphisbaena_gardener"
SRL_MOD.modded_jokers_amphisbaena[#SRL_MOD.modded_jokers_amphisbaena + 1] = "j_srl_amphisbaena_gardener"

--- Amphisbaena Inspector ---

SMODS.Joker{
	key = "amphisbaena_inspector",
	name = "Amphisbaena Inspector",
	rarity = 1,
	pos = {x = 6, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amphisbaena"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amphisbaena_inspector"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amphisbaena_inspector"
SRL_MOD.modded_jokers_amphisbaena[#SRL_MOD.modded_jokers_amphisbaena + 1] = "j_srl_amphisbaena_inspector"

--- Amphisbaena Prospector ---

SMODS.Joker{
	key = "amphisbaena_prospector",
	name = "Amphisbaena Prospector",
	rarity = 1,
	pos = {x = 7, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Amphisbaena"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amphisbaena_prospector"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_amphisbaena_prospector"
SRL_MOD.modded_jokers_amphisbaena[#SRL_MOD.modded_jokers_amphisbaena + 1] = "j_srl_amphisbaena_prospector"

--- Arcane Automaton ---

SMODS.Joker{
	key = "arcane_automaton",
	name = "Arcane Automaton",
	rarity = 1,
	pos = {x = 8, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Automaton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_arcane_automaton"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_arcane_automaton"
SRL_MOD.modded_jokers_automaton = {}
SRL_MOD.modded_jokers_automaton[#SRL_MOD.modded_jokers_automaton + 1] = "j_srl_arcane_automaton"

--- Cursed Automaton ---

SMODS.Joker{
	key = "cursed_automaton",
	name = "Cursed Automaton",
	rarity = 1,
	pos = {x = 9, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Automaton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cursed_automaton"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_cursed_automaton"
SRL_MOD.modded_jokers_automaton[#SRL_MOD.modded_jokers_automaton + 1] = "j_srl_cursed_automaton"

--- Decrepit Automaton ---

SMODS.Joker{
	key = "decrepit_automaton",
	name = "Decrepit Automaton",
	rarity = 1,
	pos = {x = 10, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Automaton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_decrepit_automaton"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_decrepit_automaton"
SRL_MOD.modded_jokers_automaton[#SRL_MOD.modded_jokers_automaton + 1] = "j_srl_decrepit_automaton"

--- Ancient Automaton ---

SMODS.Joker{
	key = "ancient_automaton",
	name = "Ancient Automaton",
	rarity = 1,
	pos = {x = 11, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Automaton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancient_automaton"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ancient_automaton"
SRL_MOD.modded_jokers_automaton[#SRL_MOD.modded_jokers_automaton + 1] = "j_srl_ancient_automaton"

--- Luxury Automaton ---

SMODS.Joker{
	key = "luxury_automaton",
	name = "Luxury Automaton",
	rarity = 1,
	pos = {x = 12, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Automaton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_luxury_automaton"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_luxury_automaton"
SRL_MOD.modded_jokers_automaton[#SRL_MOD.modded_jokers_automaton + 1] = "j_srl_luxury_automaton"

--- Siege Automaton ---

SMODS.Joker{
	key = "siege_automaton",
	name = "Siege Automaton",
	rarity = 1,
	pos = {x = 13, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Automaton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siege_automaton"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_siege_automaton"
SRL_MOD.modded_jokers_automaton[#SRL_MOD.modded_jokers_automaton + 1] = "j_srl_siege_automaton"

--- War Automaton ---

SMODS.Joker{
	key = "war_automaton",
	name = "War Automaton",
	rarity = 1,
	pos = {x = 14, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Automaton"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_war_automaton"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_war_automaton"
SRL_MOD.modded_jokers_automaton[#SRL_MOD.modded_jokers_automaton + 1] = "j_srl_war_automaton"

--- Cave Cockatrice ---

SMODS.Joker{
	key = "cave_cockatrice",
	name = "Cave Cockatrice",
	rarity = 1,
	pos = {x = 15, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cockatrice"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cave_cockatrice"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_cave_cockatrice"
SRL_MOD.modded_jokers_cockatrice = {}
SRL_MOD.modded_jokers_cockatrice[#SRL_MOD.modded_jokers_cockatrice + 1] = "j_srl_cave_cockatrice"

--- Cold Cockatrice ---

SMODS.Joker{
	key = "cold_cockatrice",
	name = "Cold Cockatrice",
	rarity = 1,
	pos = {x = 16, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cockatrice"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cold_cockatrice"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_cold_cockatrice"
SRL_MOD.modded_jokers_cockatrice[#SRL_MOD.modded_jokers_cockatrice + 1] = "j_srl_cold_cockatrice"

--- Clamorous Cockatrice ---

SMODS.Joker{
	key = "clamorous_cockatrice",
	name = "Clamorous Cockatrice",
	rarity = 1,
	pos = {x = 17, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cockatrice"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_clamorous_cockatrice"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_clamorous_cockatrice"
SRL_MOD.modded_jokers_cockatrice[#SRL_MOD.modded_jokers_cockatrice + 1] = "j_srl_clamorous_cockatrice"

--- Carrion Cockatrice ---

SMODS.Joker{
	key = "carrion_cockatrice",
	name = "Carrion Cockatrice",
	rarity = 1,
	pos = {x = 18, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cockatrice"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carrion_cockatrice"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_carrion_cockatrice"
SRL_MOD.modded_jokers_cockatrice[#SRL_MOD.modded_jokers_cockatrice + 1] = "j_srl_carrion_cockatrice"

--- Clawing Cockatrice ---

SMODS.Joker{
	key = "clawing_cockatrice",
	name = "Clawing Cockatrice",
	rarity = 1,
	pos = {x = 19, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cockatrice"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_clawing_cockatrice"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_clawing_cockatrice"
SRL_MOD.modded_jokers_cockatrice[#SRL_MOD.modded_jokers_cockatrice + 1] = "j_srl_clawing_cockatrice"

--- Contagious Cockatrice ---

SMODS.Joker{
	key = "contagious_cockatrice",
	name = "Contagious Cockatrice",
	rarity = 1,
	pos = {x = 20, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Cockatrice"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_contagious_cockatrice"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_contagious_cockatrice"
SRL_MOD.modded_jokers_cockatrice[#SRL_MOD.modded_jokers_cockatrice + 1] = "j_srl_contagious_cockatrice"

--- Amorphous Shambler ---

SMODS.Joker{
	key = "amorphous_shambler",
	name = "Amorphous Shambler",
	rarity = 1,
	pos = {x = 21, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sea Shambler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_amorphous_shambler"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_amorphous_shambler"
SRL_MOD.modded_jokers_sea_shambler = {}
SRL_MOD.modded_jokers_sea_shambler[#SRL_MOD.modded_jokers_sea_shambler + 1] = "j_srl_amorphous_shambler"

--- Shambler Recruiter ---

SMODS.Joker{
	key = "shambler_recruiter",
	name = "Shambler Recruiter",
	rarity = 1,
	pos = {x = 22, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sea Shambler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shambler_recruiter"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shambler_recruiter"
SRL_MOD.modded_jokers_sea_shambler[#SRL_MOD.modded_jokers_sea_shambler + 1] = "j_srl_shambler_recruiter"

--- Innocent Shambler ---

SMODS.Joker{
	key = "innocent_shambler",
	name = "Innocent Shambler",
	rarity = 1,
	pos = {x = 23, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sea Shambler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_innocent_shambler"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_innocent_shambler"
SRL_MOD.modded_jokers_sea_shambler[#SRL_MOD.modded_jokers_sea_shambler + 1] = "j_srl_innocent_shambler"

--- Shambler Rescuer ---

SMODS.Joker{
	key = "shambler_rescuer",
	name = "Shambler Rescuer",
	rarity = 1,
	pos = {x = 24, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sea Shambler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shambler_rescuer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shambler_rescuer"
SRL_MOD.modded_jokers_sea_shambler[#SRL_MOD.modded_jokers_sea_shambler + 1] = "j_srl_shambler_rescuer"

--- Lugubrious Shambler ---

SMODS.Joker{
	key = "lugubrious_shambler",
	name = "Lugubrious Shambler",
	rarity = 1,
	pos = {x = 25, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sea Shambler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lugubrious_shambler"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lugubrious_shambler"
SRL_MOD.modded_jokers_sea_shambler[#SRL_MOD.modded_jokers_sea_shambler + 1] = "j_srl_lugubrious_shambler"

--- Sparktail Courier ---

SMODS.Joker{
	key = "sparktail_courier",
	name = "Sparktail Courier",
	rarity = 1,
	pos = {x = 26, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Sparktail"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sparktail_courier"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sparktail_courier"
SRL_MOD.modded_jokers_sparktail = {}
SRL_MOD.modded_jokers_sparktail[#SRL_MOD.modded_jokers_sparktail + 1] = "j_srl_sparktail_courier"

--- Battrap ---

SMODS.Joker{
	key = "battrap",
	name = "Battrap",
	rarity = 1,
	pos = {x = 27, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Snaptrap"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_battrap"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_battrap"
SRL_MOD.modded_jokers_snaptrap = {}
SRL_MOD.modded_jokers_snaptrap[#SRL_MOD.modded_jokers_snaptrap + 1] = "j_srl_battrap"

--- Snaptrap Cultivar ---

SMODS.Joker{
	key = "snaptrap_cultivar",
	name = "Snaptrap Cultivar",
	rarity = 1,
	pos = {x = 28, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Snaptrap"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_snaptrap_cultivar"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_snaptrap_cultivar"
SRL_MOD.modded_jokers_snaptrap[#SRL_MOD.modded_jokers_snaptrap + 1] = "j_srl_snaptrap_cultivar"

--- Wizened Snaptrap ---

SMODS.Joker{
	key = "wizened_snaptrap",
	name = "Wizened Snaptrap",
	rarity = 1,
	pos = {x = 29, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Snaptrap"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wizened_snaptrap"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_wizened_snaptrap"
SRL_MOD.modded_jokers_snaptrap[#SRL_MOD.modded_jokers_snaptrap + 1] = "j_srl_wizened_snaptrap"

--- Parasitic Snaptrap ---

SMODS.Joker{
	key = "parasitic_snaptrap",
	name = "Parasitic Snaptrap",
	rarity = 1,
	pos = {x = 30, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Snaptrap"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_parasitic_snaptrap"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_parasitic_snaptrap"
SRL_MOD.modded_jokers_snaptrap[#SRL_MOD.modded_jokers_snaptrap + 1] = "j_srl_parasitic_snaptrap"

--- Alluring Snaptrap ---

SMODS.Joker{
	key = "alluring_snaptrap",
	name = "Alluring Snaptrap",
	rarity = 1,
	pos = {x = 31, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Snaptrap"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_alluring_snaptrap"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_alluring_snaptrap"
SRL_MOD.modded_jokers_snaptrap[#SRL_MOD.modded_jokers_snaptrap + 1] = "j_srl_alluring_snaptrap"

--- Sticky Snaptrap ---

SMODS.Joker{
	key = "sticky_snaptrap",
	name = "Sticky Snaptrap",
	rarity = 1,
	pos = {x = 32, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Snaptrap"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sticky_snaptrap"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_sticky_snaptrap"
SRL_MOD.modded_jokers_snaptrap[#SRL_MOD.modded_jokers_snaptrap + 1] = "j_srl_sticky_snaptrap"

--- Sparktail Professor ---

SMODS.Joker{
	key = "sparktail_professor",
	name = "Sparktail Professor",
	rarity = 1,
	pos = {x = 33, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Sparktail"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sparktail_professor"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sparktail_professor"
SRL_MOD.modded_jokers_sparktail[#SRL_MOD.modded_jokers_sparktail + 1] = "j_srl_sparktail_professor"

--- Sparktail Officer ---

SMODS.Joker{
	key = "sparktail_officer",
	name = "Sparktail Officer",
	rarity = 1,
	pos = {x = 34, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Sparktail"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sparktail_officer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sparktail_officer"
SRL_MOD.modded_jokers_sparktail[#SRL_MOD.modded_jokers_sparktail + 1] = "j_srl_sparktail_officer"

--- Sparktail Student ---

SMODS.Joker{
	key = "sparktail_student",
	name = "Sparktail Student",
	rarity = 1,
	pos = {x = 35, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Sparktail"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sparktail_student"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sparktail_student"
SRL_MOD.modded_jokers_sparktail[#SRL_MOD.modded_jokers_sparktail + 1] = "j_srl_sparktail_student"

--- Sparktail Searcher ---

SMODS.Joker{
	key = "sparktail_searcher",
	name = "Sparktail Searcher",
	rarity = 1,
	pos = {x = 36, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Sparktail"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sparktail_searcher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sparktail_searcher"
SRL_MOD.modded_jokers_sparktail[#SRL_MOD.modded_jokers_sparktail + 1] = "j_srl_sparktail_searcher"

--- Sparktail Engineer ---

SMODS.Joker{
	key = "sparktail_engineer",
	name = "Sparktail Engineer",
	rarity = 1,
	pos = {x = 37, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Sparktail"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sparktail_engineer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sparktail_engineer"
SRL_MOD.modded_jokers_sparktail[#SRL_MOD.modded_jokers_sparktail + 1] = "j_srl_sparktail_engineer"

--- Shadow Zealot ---

SMODS.Joker{
	key = "shadow_zealot",
	name = "Shadow Zealot",
	rarity = 1,
	pos = {x = 38, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shadow"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_zealot"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_zealot"
SRL_MOD.modded_jokers_shadow = {}
SRL_MOD.modded_jokers_shadow[#SRL_MOD.modded_jokers_shadow + 1] = "j_srl_shadow_zealot"

--- Shadow Moth ---

SMODS.Joker{
	key = "shadow_moth",
	name = "Shadow Moth",
	rarity = 1,
	pos = {x = 39, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shadow"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_moth"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_moth"
SRL_MOD.modded_jokers_shadow[#SRL_MOD.modded_jokers_shadow + 1] = "j_srl_shadow_moth"

--- Shadow Cobra ---

SMODS.Joker{
	key = "shadow_cobra",
	name = "Shadow Cobra",
	rarity = 1,
	pos = {x = 40, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shadow"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_cobra"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_cobra"
SRL_MOD.modded_jokers_shadow[#SRL_MOD.modded_jokers_shadow + 1] = "j_srl_shadow_cobra"

--- Shadow Wolf ---

SMODS.Joker{
	key = "shadow_wolf",
	name = "Shadow Wolf",
	rarity = 1,
	pos = {x = 41, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shadow"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_wolf"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_wolf"
SRL_MOD.modded_jokers_shadow[#SRL_MOD.modded_jokers_shadow + 1] = "j_srl_shadow_wolf"

--- Shadow Demon ---

SMODS.Joker{
	key = "shadow_demon",
	name = "Shadow Demon",
	rarity = 1,
	pos = {x = 42, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shadow"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_demon"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_demon"
SRL_MOD.modded_jokers_shadow[#SRL_MOD.modded_jokers_shadow + 1] = "j_srl_shadow_demon"

--- Shadow Juggernaut ---

SMODS.Joker{
	key = "shadow_juggernaut",
	name = "Shadow Juggernaut",
	rarity = 1,
	pos = {x = 43, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Shadow"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shadow_juggernaut"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shadow_juggernaut"
SRL_MOD.modded_jokers_shadow[#SRL_MOD.modded_jokers_shadow + 1] = "j_srl_shadow_juggernaut"

--- Angelic Voidlord ---

SMODS.Joker{
	key = "angelic_voidlord",
	name = "Angelic Voidlord",
	rarity = 1,
	pos = {x = 44, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Voidlord"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_angelic_voidlord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_angelic_voidlord"
SRL_MOD.modded_jokers_voidlord = {}
SRL_MOD.modded_jokers_voidlord[#SRL_MOD.modded_jokers_voidlord + 1] = "j_srl_angelic_voidlord"

--- Vampiric Voidlord ---

SMODS.Joker{
	key = "vampiric_voidlord",
	name = "Vampiric Voidlord",
	rarity = 1,
	pos = {x = 45, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Voidlord"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vampiric_voidlord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_vampiric_voidlord"
SRL_MOD.modded_jokers_voidlord[#SRL_MOD.modded_jokers_voidlord + 1] = "j_srl_vampiric_voidlord"

--- Feral Voidlord ---

SMODS.Joker{
	key = "feral_voidlord",
	name = "Feral Voidlord",
	rarity = 1,
	pos = {x = 46, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Voidlord"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_feral_voidlord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_feral_voidlord"
SRL_MOD.modded_jokers_voidlord[#SRL_MOD.modded_jokers_voidlord + 1] = "j_srl_feral_voidlord"

--- Imperial Voidlord ---

SMODS.Joker{
	key = "imperial_voidlord",
	name = "Imperial Voidlord",
	rarity = 1,
	pos = {x = 47, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Voidlord"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imperial_voidlord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_imperial_voidlord"
SRL_MOD.modded_jokers_voidlord[#SRL_MOD.modded_jokers_voidlord + 1] = "j_srl_imperial_voidlord"

--- Demonic Voidlord ---

SMODS.Joker{
	key = "demonic_voidlord",
	name = "Demonic Voidlord",
	rarity = 1,
	pos = {x = 48, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Voidlord"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_demonic_voidlord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_demonic_voidlord"
SRL_MOD.modded_jokers_voidlord[#SRL_MOD.modded_jokers_voidlord + 1] = "j_srl_demonic_voidlord"

--- Subversive Voidlord ---

SMODS.Joker{
	key = "subversive_voidlord",
	name = "Subversive Voidlord",
	rarity = 1,
	pos = {x = 49, y = 16},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Voidlord"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_subversive_voidlord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_subversive_voidlord"
SRL_MOD.modded_jokers_voidlord[#SRL_MOD.modded_jokers_voidlord + 1] = "j_srl_subversive_voidlord"

--- Dancing Wisp ---

SMODS.Joker{
	key = "dancing_wisp",
	name = "Dancing Wisp",
	rarity = 1,
	pos = {x = 0, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Wisp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dancing_wisp"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_dancing_wisp"
SRL_MOD.modded_jokers_wisp = {}
SRL_MOD.modded_jokers_wisp[#SRL_MOD.modded_jokers_wisp + 1] = "j_srl_dancing_wisp"

--- Abyssal Wisp ---

SMODS.Joker{
	key = "abyssal_wisp",
	name = "Abyssal Wisp",
	rarity = 1,
	pos = {x = 1, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Wisp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abyssal_wisp"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_abyssal_wisp"
SRL_MOD.modded_jokers_wisp[#SRL_MOD.modded_jokers_wisp + 1] = "j_srl_abyssal_wisp"

--- Laughing Wisp ---

SMODS.Joker{
	key = "laughing_wisp",
	name = "Laughing Wisp",
	rarity = 1,
	pos = {x = 2, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Wisp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_laughing_wisp"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_laughing_wisp"
SRL_MOD.modded_jokers_wisp[#SRL_MOD.modded_jokers_wisp + 1] = "j_srl_laughing_wisp"

--- Scheming Wisp ---

SMODS.Joker{
	key = "scheming_wisp",
	name = "Scheming Wisp",
	rarity = 1,
	pos = {x = 3, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Wisp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_scheming_wisp"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_scheming_wisp"
SRL_MOD.modded_jokers_wisp[#SRL_MOD.modded_jokers_wisp + 1] = "j_srl_scheming_wisp"

--- Wisp Watcher ---

SMODS.Joker{
	key = "wisp_watcher",
	name = "Wisp Watcher",
	rarity = 1,
	pos = {x = 4, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Wisp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wisp_watcher"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_wisp_watcher"
SRL_MOD.modded_jokers_wisp[#SRL_MOD.modded_jokers_wisp + 1] = "j_srl_wisp_watcher"

--- Wisp Seer ---

SMODS.Joker{
	key = "wisp_seer",
	name = "Wisp Seer",
	rarity = 1,
	pos = {x = 5, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Wisp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wisp_seer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_wisp_seer"
SRL_MOD.modded_jokers_wisp[#SRL_MOD.modded_jokers_wisp + 1] = "j_srl_wisp_seer"

--- Oculum Leech ---

SMODS.Joker{
	key = "oculum_leech",
	name = "Oculum Leech",
	rarity = 1,
	pos = {x = 6, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leech"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_oculum_leech"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_oculum_leech"
SRL_MOD.modded_jokers_leech = {}
SRL_MOD.modded_jokers_leech[#SRL_MOD.modded_jokers_leech + 1] = "j_srl_oculum_leech"

--- Oozing Leech ---

SMODS.Joker{
	key = "oozing_leech",
	name = "Oozing Leech",
	rarity = 1,
	pos = {x = 7, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leech"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_oozing_leech"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_oozing_leech"
SRL_MOD.modded_jokers_leech[#SRL_MOD.modded_jokers_leech + 1] = "j_srl_oozing_leech"

--- Leech Digger ---

SMODS.Joker{
	key = "leech_digger",
	name = "Leech Digger",
	rarity = 1,
	pos = {x = 8, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leech"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_leech_digger"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_leech_digger"
SRL_MOD.modded_jokers_leech[#SRL_MOD.modded_jokers_leech + 1] = "j_srl_leech_digger"

--- Leech Devourer ---

SMODS.Joker{
	key = "leech_devourer",
	name = "Leech Devourer",
	rarity = 1,
	pos = {x = 9, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leech"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_leech_devourer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_leech_devourer"
SRL_MOD.modded_jokers_leech[#SRL_MOD.modded_jokers_leech + 1] = "j_srl_leech_devourer"

--- Toxic Leech ---

SMODS.Joker{
	key = "toxic_leech",
	name = "Toxic Leech",
	rarity = 1,
	pos = {x = 10, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leech"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxic_leech"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_toxic_leech"
SRL_MOD.modded_jokers_leech[#SRL_MOD.modded_jokers_leech + 1] = "j_srl_toxic_leech"

--- Moon Leech ---

SMODS.Joker{
	key = "moon_leech",
	name = "Moon Leech",
	rarity = 1,
	pos = {x = 11, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Leech"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_moon_leech"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_moon_leech"
SRL_MOD.modded_jokers_leech[#SRL_MOD.modded_jokers_leech + 1] = "j_srl_moon_leech"

--- Hemomancer Lord ---

SMODS.Joker{
	key = "hemomancer_lord",
	name = "Hemomancer Lord",
	rarity = 1,
	pos = {x = 12, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hemomancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hemomancer_lord"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_hemomancer_lord"
SRL_MOD.modded_jokers_hemomancer = {}
SRL_MOD.modded_jokers_hemomancer[#SRL_MOD.modded_jokers_hemomancer + 1] = "j_srl_hemomancer_lord"

--- Mutant Hemomancer ---

SMODS.Joker{
	key = "mutant_hemomancer",
	name = "Mutant Hemomancer",
	rarity = 1,
	pos = {x = 13, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hemomancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mutant_hemomancer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_mutant_hemomancer"
SRL_MOD.modded_jokers_hemomancer[#SRL_MOD.modded_jokers_hemomancer + 1] = "j_srl_mutant_hemomancer"

--- Lunar Hemomancer ---

SMODS.Joker{
	key = "lunar_hemomancer",
	name = "Lunar Hemomancer",
	rarity = 1,
	pos = {x = 14, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hemomancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lunar_hemomancer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lunar_hemomancer"
SRL_MOD.modded_jokers_hemomancer[#SRL_MOD.modded_jokers_hemomancer + 1] = "j_srl_lunar_hemomancer"

--- Hemomancer Devourer ---

SMODS.Joker{
	key = "hemomancer_devourer",
	name = "Hemomancer Devourer",
	rarity = 1,
	pos = {x = 15, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hemomancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hemomancer_devourer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_hemomancer_devourer"
SRL_MOD.modded_jokers_hemomancer[#SRL_MOD.modded_jokers_hemomancer + 1] = "j_srl_hemomancer_devourer"

--- Hemomancer Donor ---

SMODS.Joker{
	key = "hemomancer_donor",
	name = "Hemomancer Donor",
	rarity = 1,
	pos = {x = 16, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hemomancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hemomancer_donor"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_hemomancer_donor"
SRL_MOD.modded_jokers_hemomancer[#SRL_MOD.modded_jokers_hemomancer + 1] = "j_srl_hemomancer_donor"

--- Hemomancer Seer ---

SMODS.Joker{
	key = "hemomancer_seer",
	name = "Hemomancer Seer",
	rarity = 1,
	pos = {x = 17, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Hemomancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hemomancer_seer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_hemomancer_seer"
SRL_MOD.modded_jokers_hemomancer[#SRL_MOD.modded_jokers_hemomancer + 1] = "j_srl_hemomancer_seer"

--- Dusk Ossein ---

SMODS.Joker{
	key = "dusk_ossein",
	name = "Dusk Ossein",
	rarity = 1,
	pos = {x = 18, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ossein"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dusk_ossein"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dusk_ossein"
SRL_MOD.modded_jokers_ossein = {}
SRL_MOD.modded_jokers_ossein[#SRL_MOD.modded_jokers_ossein + 1] = "j_srl_dusk_ossein"

--- Igneous Ossein ---

SMODS.Joker{
	key = "igneous_ossein",
	name = "Igneous Ossein",
	rarity = 1,
	pos = {x = 19, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ossein"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_igneous_ossein"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_igneous_ossein"
SRL_MOD.modded_jokers_ossein[#SRL_MOD.modded_jokers_ossein + 1] = "j_srl_igneous_ossein"

--- Bloody Ossein ---

SMODS.Joker{
	key = "bloody_ossein",
	name = "Bloody Ossein",
	rarity = 1,
	pos = {x = 20, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ossein"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bloody_ossein"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_bloody_ossein"
SRL_MOD.modded_jokers_ossein[#SRL_MOD.modded_jokers_ossein + 1] = "j_srl_bloody_ossein"

--- Augmented Ossein ---

SMODS.Joker{
	key = "augmented_ossein",
	name = "Augmented Ossein",
	rarity = 1,
	pos = {x = 21, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ossein"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_augmented_ossein"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_augmented_ossein"
SRL_MOD.modded_jokers_ossein[#SRL_MOD.modded_jokers_ossein + 1] = "j_srl_augmented_ossein"

--- Scourge Ossein ---

SMODS.Joker{
	key = "scourge_ossein",
	name = "Scourge Ossein",
	rarity = 1,
	pos = {x = 22, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ossein"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_scourge_ossein"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_scourge_ossein"
SRL_MOD.modded_jokers_ossein[#SRL_MOD.modded_jokers_ossein + 1] = "j_srl_scourge_ossein"

--- Ossein Defender ---

SMODS.Joker{
	key = "ossein_defender",
	name = "Ossein Defender",
	rarity = 1,
	pos = {x = 23, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ossein"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ossein_defender"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_ossein_defender"
SRL_MOD.modded_jokers_ossein[#SRL_MOD.modded_jokers_ossein + 1] = "j_srl_ossein_defender"

--- Eft Howler ---

SMODS.Joker{
	key = "eft_howler",
	name = "Eft Howler",
	rarity = 1,
	pos = {x = 24, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Eft"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eft_howler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_eft_howler"
SRL_MOD.modded_jokers_eft = {}
SRL_MOD.modded_jokers_eft[#SRL_MOD.modded_jokers_eft + 1] = "j_srl_eft_howler"

--- Eft Stalker ---

SMODS.Joker{
	key = "eft_stalker",
	name = "Eft Stalker",
	rarity = 1,
	pos = {x = 25, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Eft"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eft_stalker"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_eft_stalker"
SRL_MOD.modded_jokers_eft[#SRL_MOD.modded_jokers_eft + 1] = "j_srl_eft_stalker"

--- Eft Climber ---

SMODS.Joker{
	key = "eft_climber",
	name = "Eft Climber",
	rarity = 1,
	pos = {x = 26, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Eft"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eft_climber"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_eft_climber"
SRL_MOD.modded_jokers_eft[#SRL_MOD.modded_jokers_eft + 1] = "j_srl_eft_climber"

--- Eft Elder ---

SMODS.Joker{
	key = "eft_elder",
	name = "Eft Elder",
	rarity = 1,
	pos = {x = 27, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Eft"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eft_elder"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_eft_elder"
SRL_MOD.modded_jokers_eft[#SRL_MOD.modded_jokers_eft + 1] = "j_srl_eft_elder"

--- Bloody Eft ---

SMODS.Joker{
	key = "bloody_eft",
	name = "Bloody Eft",
	rarity = 1,
	pos = {x = 28, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Eft"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bloody_eft"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_bloody_eft"
SRL_MOD.modded_jokers_eft[#SRL_MOD.modded_jokers_eft + 1] = "j_srl_bloody_eft"

--- Eft Scavenger ---

SMODS.Joker{
	key = "eft_scavenger",
	name = "Eft Scavenger",
	rarity = 1,
	pos = {x = 29, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Eft"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eft_scavenger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_eft_scavenger"
SRL_MOD.modded_jokers_eft[#SRL_MOD.modded_jokers_eft + 1] = "j_srl_eft_scavenger"

--- Inquisitor Egglayer ---

SMODS.Joker{
	key = "inquisitor_egglayer",
	name = "Inquisitor Egglayer",
	rarity = 1,
	pos = {x = 30, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Inquisitor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_inquisitor_egglayer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_inquisitor_egglayer"
SRL_MOD.modded_jokers_inquisitor = {}
SRL_MOD.modded_jokers_inquisitor[#SRL_MOD.modded_jokers_inquisitor + 1] = "j_srl_inquisitor_egglayer"

--- Carnivorous Inquisitor ---

SMODS.Joker{
	key = "carnivorous_inquisitor",
	name = "Carnivorous Inquisitor",
	rarity = 1,
	pos = {x = 31, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Inquisitor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_carnivorous_inquisitor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_carnivorous_inquisitor"
SRL_MOD.modded_jokers_inquisitor[#SRL_MOD.modded_jokers_inquisitor + 1] = "j_srl_carnivorous_inquisitor"

--- Watchful Inquisitor ---

SMODS.Joker{
	key = "watchful_inquisitor",
	name = "Watchful Inquisitor",
	rarity = 1,
	pos = {x = 32, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Inquisitor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_watchful_inquisitor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_watchful_inquisitor"
SRL_MOD.modded_jokers_inquisitor[#SRL_MOD.modded_jokers_inquisitor + 1] = "j_srl_watchful_inquisitor"

--- Inquisitor Weaver ---

SMODS.Joker{
	key = "inquisitor_weaver",
	name = "Inquisitor Weaver",
	rarity = 1,
	pos = {x = 33, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Inquisitor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_inquisitor_weaver"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_inquisitor_weaver"
SRL_MOD.modded_jokers_inquisitor[#SRL_MOD.modded_jokers_inquisitor + 1] = "j_srl_inquisitor_weaver"

--- Infernal Inquisitor ---

SMODS.Joker{
	key = "infernal_inquisitor",
	name = "Infernal Inquisitor",
	rarity = 1,
	pos = {x = 34, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Inquisitor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_infernal_inquisitor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_infernal_inquisitor"
SRL_MOD.modded_jokers_inquisitor[#SRL_MOD.modded_jokers_inquisitor + 1] = "j_srl_infernal_inquisitor"

--- Inquisitor Countess ---

SMODS.Joker{
	key = "inquisitor_countess",
	name = "Inquisitor Countess",
	rarity = 1,
	pos = {x = 35, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Inquisitor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_inquisitor_countess"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_inquisitor_countess"
SRL_MOD.modded_jokers_inquisitor[#SRL_MOD.modded_jokers_inquisitor + 1] = "j_srl_inquisitor_countess"

--- Exiled Satyr ---

SMODS.Joker{
	key = "exiled_satyr",
	name = "Exiled Satyr",
	rarity = 1,
	pos = {x = 36, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Satyr"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_exiled_satyr"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_exiled_satyr"
SRL_MOD.modded_jokers_satyr = {}
SRL_MOD.modded_jokers_satyr[#SRL_MOD.modded_jokers_satyr + 1] = "j_srl_exiled_satyr"

--- Spry Satyr ---

SMODS.Joker{
	key = "spry_satyr",
	name = "Spry Satyr",
	rarity = 1,
	pos = {x = 37, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Satyr"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spry_satyr"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_spry_satyr"
SRL_MOD.modded_jokers_satyr[#SRL_MOD.modded_jokers_satyr + 1] = "j_srl_spry_satyr"

--- Satyr Rammer ---

SMODS.Joker{
	key = "satyr_rammer",
	name = "Satyr Rammer",
	rarity = 1,
	pos = {x = 38, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Satyr"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_satyr_rammer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_satyr_rammer"
SRL_MOD.modded_jokers_satyr[#SRL_MOD.modded_jokers_satyr + 1] = "j_srl_satyr_rammer"

--- Satyr Dominator ---

SMODS.Joker{
	key = "satyr_dominator",
	name = "Satyr Dominator",
	rarity = 1,
	pos = {x = 39, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Satyr"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_satyr_dominator"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_satyr_dominator"
SRL_MOD.modded_jokers_satyr[#SRL_MOD.modded_jokers_satyr + 1] = "j_srl_satyr_dominator"

--- Satyr Squire ---

SMODS.Joker{
	key = "satyr_squire",
	name = "Satyr Squire",
	rarity = 1,
	pos = {x = 40, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Satyr"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_satyr_squire"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_satyr_squire"
SRL_MOD.modded_jokers_satyr[#SRL_MOD.modded_jokers_satyr + 1] = "j_srl_satyr_squire"

--- Satyr Guardian ---

SMODS.Joker{
	key = "satyr_guardian",
	name = "Satyr Guardian",
	rarity = 1,
	pos = {x = 41, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Satyr"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_satyr_guardian"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_satyr_guardian"
SRL_MOD.modded_jokers_satyr[#SRL_MOD.modded_jokers_satyr + 1] = "j_srl_satyr_guardian"

--- Koloss Firebrand ---

SMODS.Joker{
	key = "koloss_firebrand",
	name = "Koloss Firebrand",
	rarity = 1,
	pos = {x = 42, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Koloss"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_koloss_firebrand"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_koloss_firebrand"
SRL_MOD.modded_jokers_koloss = {}
SRL_MOD.modded_jokers_koloss[#SRL_MOD.modded_jokers_koloss + 1] = "j_srl_koloss_firebrand"

--- Night Koloss ---

SMODS.Joker{
	key = "night_koloss",
	name = "Night Koloss",
	rarity = 1,
	pos = {x = 43, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Koloss"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_night_koloss"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_night_koloss"
SRL_MOD.modded_jokers_koloss[#SRL_MOD.modded_jokers_koloss + 1] = "j_srl_night_koloss"

--- Koloss Doombringer ---

SMODS.Joker{
	key = "koloss_doombringer",
	name = "Koloss Doombringer",
	rarity = 1,
	pos = {x = 44, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Koloss"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_koloss_doombringer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_koloss_doombringer"
SRL_MOD.modded_jokers_koloss[#SRL_MOD.modded_jokers_koloss + 1] = "j_srl_koloss_doombringer"

--- Koloss Eradicator ---

SMODS.Joker{
	key = "koloss_eradicator",
	name = "Koloss Eradicator",
	rarity = 1,
	pos = {x = 45, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Koloss"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_koloss_eradicator"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_koloss_eradicator"
SRL_MOD.modded_jokers_koloss[#SRL_MOD.modded_jokers_koloss + 1] = "j_srl_koloss_eradicator"

--- Bestial Koloss ---

SMODS.Joker{
	key = "bestial_koloss",
	name = "Bestial Koloss",
	rarity = 1,
	pos = {x = 46, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Koloss"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bestial_koloss"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bestial_koloss"
SRL_MOD.modded_jokers_koloss[#SRL_MOD.modded_jokers_koloss + 1] = "j_srl_bestial_koloss"

--- Koloss Champion ---

SMODS.Joker{
	key = "koloss_champion",
	name = "Koloss Champion",
	rarity = 1,
	pos = {x = 47, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Koloss"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_koloss_champion"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_koloss_champion"
SRL_MOD.modded_jokers_koloss[#SRL_MOD.modded_jokers_koloss + 1] = "j_srl_koloss_champion"

--- Soulflayer Peacemaker ---

SMODS.Joker{
	key = "soulflayer_peacemaker",
	name = "Soulflayer Peacemaker",
	rarity = 1,
	pos = {x = 48, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Soulflayer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soulflayer_peacemaker"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_soulflayer_peacemaker"
SRL_MOD.modded_jokers_soulflayer = {}
SRL_MOD.modded_jokers_soulflayer[#SRL_MOD.modded_jokers_soulflayer + 1] = "j_srl_soulflayer_peacemaker"

--- Soulflayer Depriver ---

SMODS.Joker{
	key = "soulflayer_depriver",
	name = "Soulflayer Depriver",
	rarity = 1,
	pos = {x = 49, y = 17},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Soulflayer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soulflayer_depriver"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_soulflayer_depriver"
SRL_MOD.modded_jokers_soulflayer[#SRL_MOD.modded_jokers_soulflayer + 1] = "j_srl_soulflayer_depriver"

--- Soulflayer Drone ---

SMODS.Joker{
	key = "soulflayer_drone",
	name = "Soulflayer Drone",
	rarity = 1,
	pos = {x = 0, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Soulflayer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soulflayer_drone"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_soulflayer_drone"
SRL_MOD.modded_jokers_soulflayer[#SRL_MOD.modded_jokers_soulflayer + 1] = "j_srl_soulflayer_drone"

--- Soulflayer Overlord ---

SMODS.Joker{
	key = "soulflayer_overlord",
	name = "Soulflayer Overlord",
	rarity = 1,
	pos = {x = 1, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Soulflayer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soulflayer_overlord"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_soulflayer_overlord"
SRL_MOD.modded_jokers_soulflayer[#SRL_MOD.modded_jokers_soulflayer + 1] = "j_srl_soulflayer_overlord"

--- Soulflayer Prober ---

SMODS.Joker{
	key = "soulflayer_prober",
	name = "Soulflayer Prober",
	rarity = 1,
	pos = {x = 2, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Soulflayer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soulflayer_prober"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_soulflayer_prober"
SRL_MOD.modded_jokers_soulflayer[#SRL_MOD.modded_jokers_soulflayer + 1] = "j_srl_soulflayer_prober"

--- Soulflayer Dreamcaster ---

SMODS.Joker{
	key = "soulflayer_dreamcaster",
	name = "Soulflayer Dreamcaster",
	rarity = 1,
	pos = {x = 3, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Soulflayer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soulflayer_dreamcaster"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_soulflayer_dreamcaster"
SRL_MOD.modded_jokers_soulflayer[#SRL_MOD.modded_jokers_soulflayer + 1] = "j_srl_soulflayer_dreamcaster"

--- Unguided Psychic ---

SMODS.Joker{
	key = "unguided_psychic",
	name = "Unguided Psychic",
	rarity = 1,
	pos = {x = 4, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unguided"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unguided_psychic"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unguided_psychic"
SRL_MOD.modded_jokers_unguided = {}
SRL_MOD.modded_jokers_unguided[#SRL_MOD.modded_jokers_unguided + 1] = "j_srl_unguided_psychic"

--- Unguided Judge ---

SMODS.Joker{
	key = "unguided_judge",
	name = "Unguided Judge",
	rarity = 1,
	pos = {x = 5, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unguided"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unguided_judge"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unguided_judge"
SRL_MOD.modded_jokers_unguided[#SRL_MOD.modded_jokers_unguided + 1] = "j_srl_unguided_judge"

--- Unguided Desecrator ---

SMODS.Joker{
	key = "unguided_desecrator",
	name = "Unguided Desecrator",
	rarity = 1,
	pos = {x = 6, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unguided"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unguided_desecrator"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unguided_desecrator"
SRL_MOD.modded_jokers_unguided[#SRL_MOD.modded_jokers_unguided + 1] = "j_srl_unguided_desecrator"

--- Unguided Agnostic ---

SMODS.Joker{
	key = "unguided_agnostic",
	name = "Unguided Agnostic",
	rarity = 1,
	pos = {x = 7, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unguided"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unguided_agnostic"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unguided_agnostic"
SRL_MOD.modded_jokers_unguided[#SRL_MOD.modded_jokers_unguided + 1] = "j_srl_unguided_agnostic"

--- Unguided Sadist ---

SMODS.Joker{
	key = "unguided_sadist",
	name = "Unguided Sadist",
	rarity = 1,
	pos = {x = 8, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unguided"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unguided_sadist"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unguided_sadist"
SRL_MOD.modded_jokers_unguided[#SRL_MOD.modded_jokers_unguided + 1] = "j_srl_unguided_sadist"

--- Unguided Heathen ---

SMODS.Joker{
	key = "unguided_heathen",
	name = "Unguided Heathen",
	rarity = 1,
	pos = {x = 9, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Unguided"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unguided_heathen"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_unguided_heathen"
SRL_MOD.modded_jokers_unguided[#SRL_MOD.modded_jokers_unguided + 1] = "j_srl_unguided_heathen"

--- Blobbarian ---

SMODS.Joker{
	key = "blobbarian",
	name = "Blobbarian",
	rarity = 1,
	pos = {x = 10, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Concoction"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blobbarian"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_blobbarian"
SRL_MOD.modded_jokers_concoction = {}
SRL_MOD.modded_jokers_concoction[#SRL_MOD.modded_jokers_concoction + 1] = "j_srl_blobbarian"

--- Gloopdiator ---

SMODS.Joker{
	key = "gloopdiator",
	name = "Gloopdiator",
	rarity = 1,
	pos = {x = 11, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Concoction"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gloopdiator"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_gloopdiator"
SRL_MOD.modded_jokers_concoction[#SRL_MOD.modded_jokers_concoction + 1] = "j_srl_gloopdiator"

--- Gooarrior ---

SMODS.Joker{
	key = "gooarrior",
	name = "Gooarrior",
	rarity = 1,
	pos = {x = 12, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Concoction"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gooarrior"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_gooarrior"
SRL_MOD.modded_jokers_concoction[#SRL_MOD.modded_jokers_concoction + 1] = "j_srl_gooarrior"

--- Mystery Mucus ---

SMODS.Joker{
	key = "mystery_mucus",
	name = "Mystery Mucus",
	rarity = 1,
	pos = {x = 13, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Concoction"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mystery_mucus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mystery_mucus"
SRL_MOD.modded_jokers_concoction[#SRL_MOD.modded_jokers_concoction + 1] = "j_srl_mystery_mucus"

--- Sludgechemist ---

SMODS.Joker{
	key = "sludgechemist",
	name = "Sludgechemist",
	rarity = 1,
	pos = {x = 14, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Concoction"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sludgechemist"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_sludgechemist"
SRL_MOD.modded_jokers_concoction[#SRL_MOD.modded_jokers_concoction + 1] = "j_srl_sludgechemist"

--- Swordslime ---

SMODS.Joker{
	key = "swordslime",
	name = "Swordslime",
	rarity = 1,
	pos = {x = 15, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Concoction"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_swordslime"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_swordslime"
SRL_MOD.modded_jokers_concoction[#SRL_MOD.modded_jokers_concoction + 1] = "j_srl_swordslime"

--- Maniac Mutant ---

SMODS.Joker{
	key = "maniac_mutant",
	name = "Maniac Mutant",
	rarity = 1,
	pos = {x = 16, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Maniac"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_maniac_mutant"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_maniac_mutant"
SRL_MOD.modded_jokers_maniac = {}
SRL_MOD.modded_jokers_maniac[#SRL_MOD.modded_jokers_maniac + 1] = "j_srl_maniac_mutant"

--- Maniac Huntsman ---

SMODS.Joker{
	key = "maniac_huntsman",
	name = "Maniac Huntsman",
	rarity = 1,
	pos = {x = 17, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Maniac"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_maniac_huntsman"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_maniac_huntsman"
SRL_MOD.modded_jokers_maniac[#SRL_MOD.modded_jokers_maniac + 1] = "j_srl_maniac_huntsman"

--- Maniac Warrior ---

SMODS.Joker{
	key = "maniac_warrior",
	name = "Maniac Warrior",
	rarity = 1,
	pos = {x = 18, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Maniac"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_maniac_warrior"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_maniac_warrior"
SRL_MOD.modded_jokers_maniac[#SRL_MOD.modded_jokers_maniac + 1] = "j_srl_maniac_warrior"

--- Maniac Chief ---

SMODS.Joker{
	key = "maniac_chief",
	name = "Maniac Chief",
	rarity = 1,
	pos = {x = 19, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Maniac"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_maniac_chief"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_maniac_chief"
SRL_MOD.modded_jokers_maniac[#SRL_MOD.modded_jokers_maniac + 1] = "j_srl_maniac_chief"

--- Armored Maniac ---

SMODS.Joker{
	key = "armored_maniac",
	name = "Armored Maniac",
	rarity = 1,
	pos = {x = 20, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Maniac"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_armored_maniac"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_armored_maniac"
SRL_MOD.modded_jokers_maniac[#SRL_MOD.modded_jokers_maniac + 1] = "j_srl_armored_maniac"

--- Maniac Builder ---

SMODS.Joker{
	key = "maniac_builder",
	name = "Maniac Builder",
	rarity = 1,
	pos = {x = 21, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Maniac"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_maniac_builder"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_maniac_builder"
SRL_MOD.modded_jokers_maniac[#SRL_MOD.modded_jokers_maniac + 1] = "j_srl_maniac_builder"

--- Toxdweller Slasher ---

SMODS.Joker{
	key = "toxdweller_slasher",
	name = "Toxdweller Slasher",
	rarity = 1,
	pos = {x = 22, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Toxdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxdweller_slasher"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_toxdweller_slasher"
SRL_MOD.modded_jokers_toxdweller = {}
SRL_MOD.modded_jokers_toxdweller[#SRL_MOD.modded_jokers_toxdweller + 1] = "j_srl_toxdweller_slasher"

--- Toxdweller Bloodbather ---

SMODS.Joker{
	key = "toxdweller_bloodbather",
	name = "Toxdweller Bloodbather",
	rarity = 1,
	pos = {x = 23, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Toxdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxdweller_bloodbather"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_toxdweller_bloodbather"
SRL_MOD.modded_jokers_toxdweller[#SRL_MOD.modded_jokers_toxdweller + 1] = "j_srl_toxdweller_bloodbather"

--- Toxdweller Mutant ---

SMODS.Joker{
	key = "toxdweller_mutant",
	name = "Toxdweller Mutant",
	rarity = 1,
	pos = {x = 24, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Toxdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxdweller_mutant"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_toxdweller_mutant"
SRL_MOD.modded_jokers_toxdweller[#SRL_MOD.modded_jokers_toxdweller + 1] = "j_srl_toxdweller_mutant"

--- Toxdweller Decoy ---

SMODS.Joker{
	key = "toxdweller_decoy",
	name = "Toxdweller Decoy",
	rarity = 1,
	pos = {x = 25, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Toxdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxdweller_decoy"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_toxdweller_decoy"
SRL_MOD.modded_jokers_toxdweller[#SRL_MOD.modded_jokers_toxdweller + 1] = "j_srl_toxdweller_decoy"

--- Toxdweller Parasite ---

SMODS.Joker{
	key = "toxdweller_parasite",
	name = "Toxdweller Parasite",
	rarity = 1,
	pos = {x = 26, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Toxdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxdweller_parasite"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_toxdweller_parasite"
SRL_MOD.modded_jokers_toxdweller[#SRL_MOD.modded_jokers_toxdweller + 1] = "j_srl_toxdweller_parasite"

--- Toxdweller Infector ---

SMODS.Joker{
	key = "toxdweller_infector",
	name = "Toxdweller Infector",
	rarity = 1,
	pos = {x = 27, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Toxdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toxdweller_infector"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_toxdweller_infector"
SRL_MOD.modded_jokers_toxdweller[#SRL_MOD.modded_jokers_toxdweller + 1] = "j_srl_toxdweller_infector"

--- Aquamarine Carbuncle ---

SMODS.Joker{
	key = "aquamarine_carbuncle",
	name = "Aquamarine Carbuncle",
	rarity = 1,
	pos = {x = 28, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Carbuncle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aquamarine_carbuncle"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_aquamarine_carbuncle"
SRL_MOD.modded_jokers_carbuncle = {}
SRL_MOD.modded_jokers_carbuncle[#SRL_MOD.modded_jokers_carbuncle + 1] = "j_srl_aquamarine_carbuncle"

--- Emerald Carbuncle ---

SMODS.Joker{
	key = "emerald_carbuncle",
	name = "Emerald Carbuncle",
	rarity = 1,
	pos = {x = 29, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Carbuncle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_emerald_carbuncle"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_emerald_carbuncle"
SRL_MOD.modded_jokers_carbuncle[#SRL_MOD.modded_jokers_carbuncle + 1] = "j_srl_emerald_carbuncle"

--- Onyx Carbuncle ---

SMODS.Joker{
	key = "onyx_carbuncle",
	name = "Onyx Carbuncle",
	rarity = 1,
	pos = {x = 30, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Carbuncle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_onyx_carbuncle"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_onyx_carbuncle"
SRL_MOD.modded_jokers_carbuncle[#SRL_MOD.modded_jokers_carbuncle + 1] = "j_srl_onyx_carbuncle"

--- Ruby Carbuncle ---

SMODS.Joker{
	key = "ruby_carbuncle",
	name = "Ruby Carbuncle",
	rarity = 1,
	pos = {x = 31, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Carbuncle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ruby_carbuncle"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ruby_carbuncle"
SRL_MOD.modded_jokers_carbuncle[#SRL_MOD.modded_jokers_carbuncle + 1] = "j_srl_ruby_carbuncle"

--- Topaz Carbuncle ---

SMODS.Joker{
	key = "topaz_carbuncle",
	name = "Topaz Carbuncle",
	rarity = 1,
	pos = {x = 32, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Carbuncle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_topaz_carbuncle"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_topaz_carbuncle"
SRL_MOD.modded_jokers_carbuncle[#SRL_MOD.modded_jokers_carbuncle + 1] = "j_srl_topaz_carbuncle"

--- Sapphire Carbuncle ---

SMODS.Joker{
	key = "sapphire_carbuncle",
	name = "Sapphire Carbuncle",
	rarity = 1,
	pos = {x = 33, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Carbuncle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sapphire_carbuncle"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sapphire_carbuncle"
SRL_MOD.modded_jokers_carbuncle[#SRL_MOD.modded_jokers_carbuncle + 1] = "j_srl_sapphire_carbuncle"

--- Crystaldune Gemling ---

SMODS.Joker{
	key = "crystaldune_gemling",
	name = "Crystaldune Gemling",
	rarity = 1,
	pos = {x = 34, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gemling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_crystaldune_gemling"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_crystaldune_gemling"
SRL_MOD.modded_jokers_gemling = {}
SRL_MOD.modded_jokers_gemling[#SRL_MOD.modded_jokers_gemling + 1] = "j_srl_crystaldune_gemling"

--- Eternaldew Gemling ---

SMODS.Joker{
	key = "eternaldew_gemling",
	name = "Eternaldew Gemling",
	rarity = 1,
	pos = {x = 35, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gemling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eternaldew_gemling"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_eternaldew_gemling"
SRL_MOD.modded_jokers_gemling[#SRL_MOD.modded_jokers_gemling + 1] = "j_srl_eternaldew_gemling"

--- Nightvelvet Gemling ---

SMODS.Joker{
	key = "nightvelvet_gemling",
	name = "Nightvelvet Gemling",
	rarity = 1,
	pos = {x = 36, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gemling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nightvelvet_gemling"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_nightvelvet_gemling"
SRL_MOD.modded_jokers_gemling[#SRL_MOD.modded_jokers_gemling + 1] = "j_srl_nightvelvet_gemling"

--- Rockmoss Gemling ---

SMODS.Joker{
	key = "rockmoss_gemling",
	name = "Rockmoss Gemling",
	rarity = 1,
	pos = {x = 37, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gemling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rockmoss_gemling"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_rockmoss_gemling"
SRL_MOD.modded_jokers_gemling[#SRL_MOD.modded_jokers_gemling + 1] = "j_srl_rockmoss_gemling"

--- Stillfire Gemling ---

SMODS.Joker{
	key = "stillfire_gemling",
	name = "Stillfire Gemling",
	rarity = 1,
	pos = {x = 38, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gemling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_stillfire_gemling"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_stillfire_gemling"
SRL_MOD.modded_jokers_gemling[#SRL_MOD.modded_jokers_gemling + 1] = "j_srl_stillfire_gemling"

--- Whitestar Gemling ---

SMODS.Joker{
	key = "whitestar_gemling",
	name = "Whitestar Gemling",
	rarity = 1,
	pos = {x = 39, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gemling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_whitestar_gemling"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_whitestar_gemling"
SRL_MOD.modded_jokers_gemling[#SRL_MOD.modded_jokers_gemling + 1] = "j_srl_whitestar_gemling"

--- Bloodstone Cruncher ---

SMODS.Joker{
	key = "bloodstone_cruncher",
	name = "Bloodstone Cruncher",
	rarity = 1,
	pos = {x = 40, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Cruncher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bloodstone_cruncher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bloodstone_cruncher"
SRL_MOD.modded_jokers_cruncher = {}
SRL_MOD.modded_jokers_cruncher[#SRL_MOD.modded_jokers_cruncher + 1] = "j_srl_bloodstone_cruncher"

--- Elder Cruncher ---

SMODS.Joker{
	key = "elder_cruncher",
	name = "Elder Cruncher",
	rarity = 1,
	pos = {x = 41, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Cruncher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elder_cruncher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_elder_cruncher"
SRL_MOD.modded_jokers_cruncher[#SRL_MOD.modded_jokers_cruncher + 1] = "j_srl_elder_cruncher"

--- Frostbite Cruncher ---

SMODS.Joker{
	key = "frostbite_cruncher",
	name = "Frostbite Cruncher",
	rarity = 1,
	pos = {x = 42, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Cruncher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frostbite_cruncher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_frostbite_cruncher"
SRL_MOD.modded_jokers_cruncher[#SRL_MOD.modded_jokers_cruncher + 1] = "j_srl_frostbite_cruncher"

--- Possessed Cruncher ---

SMODS.Joker{
	key = "possessed_cruncher",
	name = "Possessed Cruncher",
	rarity = 1,
	pos = {x = 43, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Cruncher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_possessed_cruncher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_possessed_cruncher"
SRL_MOD.modded_jokers_cruncher[#SRL_MOD.modded_jokers_cruncher + 1] = "j_srl_possessed_cruncher"

--- Jewel Cruncher ---

SMODS.Joker{
	key = "jewel_cruncher",
	name = "Jewel Cruncher",
	rarity = 1,
	pos = {x = 44, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Cruncher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_jewel_cruncher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_jewel_cruncher"
SRL_MOD.modded_jokers_cruncher[#SRL_MOD.modded_jokers_cruncher + 1] = "j_srl_jewel_cruncher"

--- Prismatic Cruncher ---

SMODS.Joker{
	key = "prismatic_cruncher",
	name = "Prismatic Cruncher",
	rarity = 1,
	pos = {x = 45, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Cruncher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_prismatic_cruncher"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_prismatic_cruncher"
SRL_MOD.modded_jokers_cruncher[#SRL_MOD.modded_jokers_cruncher + 1] = "j_srl_prismatic_cruncher"

--- Shambler Juggernaut ---

SMODS.Joker{
	key = "shambler_juggernaut",
	name = "Shambler Juggernaut",
	rarity = 1,
	pos = {x = 46, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sea Shambler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shambler_juggernaut"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shambler_juggernaut"
SRL_MOD.modded_jokers_sea_shambler[#SRL_MOD.modded_jokers_sea_shambler + 1] = "j_srl_shambler_juggernaut"

--- Caliban ---

SMODS.Joker{
	key = "caliban",
	name = "Caliban",
	rarity = 1,
	pos = {x = 47, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_caliban"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_caliban"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_caliban"

--- Mortem ---

SMODS.Joker{
	key = "mortem",
	name = "Mortem",
	rarity = 1,
	pos = {x = 48, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mortem"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_mortem"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_mortem"

--- Aurum ---

SMODS.Joker{
	key = "aurum",
	name = "Aurum",
	rarity = 1,
	pos = {x = 49, y = 18},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aurum"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_aurum"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_aurum"

--- Apocranox ---

SMODS.Joker{
	key = "apocranox",
	name = "Apocranox",
	rarity = 1,
	pos = {x = 0, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_apocranox"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_apocranox"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_apocranox"

--- Tenebris ---

SMODS.Joker{
	key = "tenebris",
	name = "Tenebris",
	rarity = 1,
	pos = {x = 1, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tenebris"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_tenebris"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_tenebris"

--- Venedon ---

SMODS.Joker{
	key = "venedon",
	name = "Venedon",
	rarity = 1,
	pos = {x = 2, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_venedon"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_venedon"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_venedon"

--- Perdition ---

SMODS.Joker{
	key = "perdition",
	name = "Perdition",
	rarity = 1,
	pos = {x = 3, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_perdition"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_perdition"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_perdition"

--- Animatus ---

SMODS.Joker{
	key = "animatus",
	name = "Animatus",
	rarity = 1,
	pos = {x = 4, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Animatus"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_animatus"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_animatus"
SRL_MOD.modded_jokers_animatus = {}
SRL_MOD.modded_jokers_animatus[#SRL_MOD.modded_jokers_animatus + 1] = "j_srl_animatus"

--- Relic ---

SMODS.Joker{
	key = "relic",
	name = "Relic",
	rarity = 1,
	pos = {x = 5, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Relic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_relic"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_relic"
SRL_MOD.modded_jokers_relic = {}
SRL_MOD.modded_jokers_relic[#SRL_MOD.modded_jokers_relic + 1] = "j_srl_relic"

--- King Dumpling ---

SMODS.Joker{
	key = "king_dumpling",
	name = "King Dumpling",
	rarity = 1,
	pos = {x = 6, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_king_dumpling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_king_dumpling"
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_king_dumpling"

--- Nugget ---

SMODS.Joker{
	key = "nugget",
	name = "Nugget",
	rarity = 1,
	pos = {x = 7, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Dumpling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nugget"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_nugget"
SRL_MOD.modded_jokers_dumpling[#SRL_MOD.modded_jokers_dumpling + 1] = "j_srl_nugget"

--- Herbling ---

SMODS.Joker{
	key = "herbling",
	name = "Herbling",
	rarity = 1,
	pos = {x = 8, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Herbling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_herbling"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_herbling"
SRL_MOD.modded_jokers_herbling = {}
SRL_MOD.modded_jokers_herbling[#SRL_MOD.modded_jokers_herbling + 1] = "j_srl_herbling"

--- Pandora ---

SMODS.Joker{
	key = "pandora",
	name = "Pandora",
	rarity = 1,
	pos = {x = 9, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Mimic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pandora"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_pandora"
SRL_MOD.modded_jokers_mimic[#SRL_MOD.modded_jokers_mimic + 1] = "j_srl_pandora"

--- Zzyia Apocalypse ---

SMODS.Joker{
	key = "zzyia_apocalypse",
	name = "Zzyia Apocalypse",
	rarity = 1,
	pos = {x = 10, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Apocalypse"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zzyia_apocalypse"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_zzyia_apocalypse"
SRL_MOD.modded_jokers_apocalypse[#SRL_MOD.modded_jokers_apocalypse + 1] = "j_srl_zzyia_apocalypse"

--- Feral Carver ---

SMODS.Joker{
	key = "feral_carver",
	name = "Feral Carver",
	rarity = 1,
	pos = {x = 11, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Carver"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_feral_carver"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_feral_carver"
SRL_MOD.modded_jokers_carver[#SRL_MOD.modded_jokers_carver + 1] = "j_srl_feral_carver"

--- Sabertooth Manticore ---

SMODS.Joker{
	key = "sabertooth_manticore",
	name = "Sabertooth Manticore",
	rarity = 1,
	pos = {x = 12, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Manticore"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sabertooth_manticore"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_sabertooth_manticore"
SRL_MOD.modded_jokers_manticore[#SRL_MOD.modded_jokers_manticore + 1] = "j_srl_sabertooth_manticore"

--- Incendiary Smog ---

SMODS.Joker{
	key = "incendiary_smog",
	name = "Incendiary Smog",
	rarity = 1,
	pos = {x = 13, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Smog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_incendiary_smog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_incendiary_smog"
SRL_MOD.modded_jokers_smog[#SRL_MOD.modded_jokers_smog + 1] = "j_srl_incendiary_smog"

--- Chaos Troll ---

SMODS.Joker{
	key = "chaos_troll",
	name = "Chaos Troll",
	rarity = 1,
	pos = {x = 14, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Troll"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chaos_troll"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_chaos_troll"
SRL_MOD.modded_jokers_troll[#SRL_MOD.modded_jokers_troll + 1] = "j_srl_chaos_troll"

--- War Giant ---

SMODS.Joker{
	key = "war_giant",
	name = "War Giant",
	rarity = 1,
	pos = {x = 15, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Giant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_war_giant"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_war_giant"
SRL_MOD.modded_jokers_giant[#SRL_MOD.modded_jokers_giant + 1] = "j_srl_war_giant"

--- Masochist Freak ---

SMODS.Joker{
	key = "masochist_freak",
	name = "Masochist Freak",
	rarity = 1,
	pos = {x = 16, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Masochist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_masochist_freak"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_masochist_freak"
SRL_MOD.modded_jokers_masochist[#SRL_MOD.modded_jokers_masochist + 1] = "j_srl_masochist_freak"

--- Phobos Banshee ---

SMODS.Joker{
	key = "phobos_banshee",
	name = "Phobos Banshee",
	rarity = 1,
	pos = {x = 17, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Banshee"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phobos_banshee"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_phobos_banshee"
SRL_MOD.modded_jokers_banshee[#SRL_MOD.modded_jokers_banshee + 1] = "j_srl_phobos_banshee"

--- Nix Exile ---

SMODS.Joker{
	key = "nix_exile",
	name = "Nix Exile",
	rarity = 1,
	pos = {x = 18, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Nix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nix_exile"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nix_exile"
SRL_MOD.modded_jokers_nix[#SRL_MOD.modded_jokers_nix + 1] = "j_srl_nix_exile"

--- Marine Pit Worm ---

SMODS.Joker{
	key = "marine_pit_worm",
	name = "Marine Pit Worm",
	rarity = 1,
	pos = {x = 19, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Pit Worm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marine_pit_worm"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_marine_pit_worm"
SRL_MOD.modded_jokers_pit_worm[#SRL_MOD.modded_jokers_pit_worm + 1] = "j_srl_marine_pit_worm"

--- Tech Reaper ---

SMODS.Joker{
	key = "tech_reaper",
	name = "Tech Reaper",
	rarity = 1,
	pos = {x = 20, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Reaper"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tech_reaper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_tech_reaper"
SRL_MOD.modded_jokers_reaper[#SRL_MOD.modded_jokers_reaper + 1] = "j_srl_tech_reaper"

--- Holy Wight ---

SMODS.Joker{
	key = "holy_wight",
	name = "Holy Wight",
	rarity = 1,
	pos = {x = 21, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Wight"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_holy_wight"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_holy_wight"
SRL_MOD.modded_jokers_wight[#SRL_MOD.modded_jokers_wight + 1] = "j_srl_holy_wight"

--- Aspect of Decay ---

SMODS.Joker{
	key = "aspect_of_decay",
	name = "Aspect of Decay",
	rarity = 1,
	pos = {x = 22, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Aspect"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aspect_of_decay"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_aspect_of_decay"
SRL_MOD.modded_jokers_aspect[#SRL_MOD.modded_jokers_aspect + 1] = "j_srl_aspect_of_decay"

--- Evil Spirit ---

SMODS.Joker{
	key = "evil_spirit",
	name = "Evil Spirit",
	rarity = 1,
	pos = {x = 23, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Spirit"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_evil_spirit"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_evil_spirit"
SRL_MOD.modded_jokers_spirit[#SRL_MOD.modded_jokers_spirit + 1] = "j_srl_evil_spirit"

--- Deep Clutcher ---

SMODS.Joker{
	key = "deep_clutcher",
	name = "Deep Clutcher",
	rarity = 1,
	pos = {x = 24, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Clutcher"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_deep_clutcher"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_deep_clutcher"
SRL_MOD.modded_jokers_clutcher[#SRL_MOD.modded_jokers_clutcher + 1] = "j_srl_deep_clutcher"

--- Plague Phlebotomist ---

SMODS.Joker{
	key = "plague_phlebotomist",
	name = "Plague Phlebotomist",
	rarity = 1,
	pos = {x = 25, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Plague Doctor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plague_phlebotomist"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_plague_phlebotomist"
SRL_MOD.modded_jokers_plague_doctor[#SRL_MOD.modded_jokers_plague_doctor + 1] = "j_srl_plague_phlebotomist"

--- Malice Harpy ---

SMODS.Joker{
	key = "malice_harpy",
	name = "Malice Harpy",
	rarity = 1,
	pos = {x = 26, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Harpy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_malice_harpy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_malice_harpy"
SRL_MOD.modded_jokers_harpy[#SRL_MOD.modded_jokers_harpy + 1] = "j_srl_malice_harpy"

--- Ghoul Ringleader ---

SMODS.Joker{
	key = "ghoul_ringleader",
	name = "Ghoul Ringleader",
	rarity = 1,
	pos = {x = 27, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Ghoul"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ghoul_ringleader"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_ghoul_ringleader"
SRL_MOD.modded_jokers_ghoul[#SRL_MOD.modded_jokers_ghoul + 1] = "j_srl_ghoul_ringleader"

--- Thunderwound Angel ---

SMODS.Joker{
	key = "thunderwound_angel",
	name = "Thunderwound Angel",
	rarity = 1,
	pos = {x = 28, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Angel"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thunderwound_angel"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_thunderwound_angel"
SRL_MOD.modded_jokers_angel[#SRL_MOD.modded_jokers_angel + 1] = "j_srl_thunderwound_angel"

--- Supreme Administrator ---

SMODS.Joker{
	key = "supreme_administrator",
	name = "Supreme Administrator",
	rarity = 1,
	pos = {x = 29, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Demigod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_supreme_administrator"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_supreme_administrator"
SRL_MOD.modded_jokers_demigod[#SRL_MOD.modded_jokers_demigod + 1] = "j_srl_supreme_administrator"

--- Griffon Veteran ---

SMODS.Joker{
	key = "griffon_veteran",
	name = "Griffon Veteran",
	rarity = 1,
	pos = {x = 30, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Griffon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_griffon_veteran"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_griffon_veteran"
SRL_MOD.modded_jokers_griffon[#SRL_MOD.modded_jokers_griffon + 1] = "j_srl_griffon_veteran"

--- Bismuth Paragon ---

SMODS.Joker{
	key = "bismuth_paragon",
	name = "Bismuth Paragon",
	rarity = 1,
	pos = {x = 31, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Paragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bismuth_paragon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_bismuth_paragon"
SRL_MOD.modded_jokers_paragon[#SRL_MOD.modded_jokers_paragon + 1] = "j_srl_bismuth_paragon"

--- Divine Phoenix ---

SMODS.Joker{
	key = "divine_phoenix",
	name = "Divine Phoenix",
	rarity = 1,
	pos = {x = 32, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Phoenix"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_divine_phoenix"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_divine_phoenix"
SRL_MOD.modded_jokers_phoenix[#SRL_MOD.modded_jokers_phoenix + 1] = "j_srl_divine_phoenix"

--- Nax Rift Dancer ---

SMODS.Joker{
	key = "nax_rift_dancer",
	name = "Nax Rift Dancer",
	rarity = 1,
	pos = {x = 33, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Rift Dancer"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nax_rift_dancer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nax_rift_dancer"
SRL_MOD.modded_jokers_rift_dancer[#SRL_MOD.modded_jokers_rift_dancer + 1] = "j_srl_nax_rift_dancer"

--- Kaito Seraph ---

SMODS.Joker{
	key = "kaito_seraph",
	name = "Kaito Seraph",
	rarity = 1,
	pos = {x = 34, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Seraph"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kaito_seraph"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_kaito_seraph"
SRL_MOD.modded_jokers_seraph[#SRL_MOD.modded_jokers_seraph + 1] = "j_srl_kaito_seraph"

--- Valkyrie Priestess ---

SMODS.Joker{
	key = "valkyrie_priestess",
	name = "Valkyrie Priestess",
	rarity = 1,
	pos = {x = 35, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Valkyrie"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valkyrie_priestess"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_valkyrie_priestess"
SRL_MOD.modded_jokers_valkyrie[#SRL_MOD.modded_jokers_valkyrie + 1] = "j_srl_valkyrie_priestess"

--- Angel Bat ---

SMODS.Joker{
	key = "angel_bat",
	name = "Angel Bat",
	rarity = 1,
	pos = {x = 36, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Bat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_angel_bat"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_angel_bat"
SRL_MOD.modded_jokers_bat[#SRL_MOD.modded_jokers_bat + 1] = "j_srl_angel_bat"

--- Imp Bishop ---

SMODS.Joker{
	key = "imp_bishop",
	name = "Imp Bishop",
	rarity = 1,
	pos = {x = 37, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Imp"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_imp_bishop"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_imp_bishop"
SRL_MOD.modded_jokers_imp[#SRL_MOD.modded_jokers_imp + 1] = "j_srl_imp_bishop"

--- Razorweb Arachnalisk ---

SMODS.Joker{
	key = "razorweb_arachnalisk",
	name = "Razorweb Arachnalisk",
	rarity = 1,
	pos = {x = 38, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arachnalisk"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_razorweb_arachnalisk"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_razorweb_arachnalisk"
SRL_MOD.modded_jokers_arachnalisk[#SRL_MOD.modded_jokers_arachnalisk + 1] = "j_srl_razorweb_arachnalisk"

--- Centaur Khan ---

SMODS.Joker{
	key = "centaur_khan",
	name = "Centaur Khan",
	rarity = 1,
	pos = {x = 39, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Centaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_centaur_khan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_centaur_khan"
SRL_MOD.modded_jokers_centaur[#SRL_MOD.modded_jokers_centaur + 1] = "j_srl_centaur_khan"

--- Elf Brawler ---

SMODS.Joker{
	key = "elf_brawler",
	name = "Elf Brawler",
	rarity = 1,
	pos = {x = 40, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elf"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elf_brawler"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_elf_brawler"
SRL_MOD.modded_jokers_elf[#SRL_MOD.modded_jokers_elf + 1] = "j_srl_elf_brawler"

--- Aspen Ent ---

SMODS.Joker{
	key = "aspen_ent",
	name = "Aspen Ent",
	rarity = 1,
	pos = {x = 41, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Ent"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_aspen_ent"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_aspen_ent"
SRL_MOD.modded_jokers_ent[#SRL_MOD.modded_jokers_ent + 1] = "j_srl_aspen_ent"

--- Volcanic Gargantuan ---

SMODS.Joker{
	key = "volcanic_gargantuan",
	name = "Volcanic Gargantuan",
	rarity = 1,
	pos = {x = 42, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Gargantuan"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_volcanic_gargantuan"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_volcanic_gargantuan"
SRL_MOD.modded_jokers_gargantuan[#SRL_MOD.modded_jokers_gargantuan + 1] = "j_srl_volcanic_gargantuan"

--- Hanyac Tremor ---

SMODS.Joker{
	key = "hanyac_tremor",
	name = "Hanyac Tremor",
	rarity = 1,
	pos = {x = 43, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Tremor"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hanyac_tremor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_hanyac_tremor"
SRL_MOD.modded_jokers_tremor[#SRL_MOD.modded_jokers_tremor + 1] = "j_srl_hanyac_tremor"

--- Villous Wolpertinger ---

SMODS.Joker{
	key = "villous_wolpertinger",
	name = "Villous Wolpertinger",
	rarity = 1,
	pos = {x = 44, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Wolpertinger"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_villous_wolpertinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_villous_wolpertinger"
SRL_MOD.modded_jokers_wolpertinger[#SRL_MOD.modded_jokers_wolpertinger + 1] = "j_srl_villous_wolpertinger"

--- Dragon Spirit ---

SMODS.Joker{
	key = "dragon_spirit",
	name = "Dragon Spirit",
	rarity = 1,
	pos = {x = 45, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Dragon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dragon_spirit"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dragon_spirit"
SRL_MOD.modded_jokers_dragon[#SRL_MOD.modded_jokers_dragon + 1] = "j_srl_dragon_spirit"

--- Raven Seer ---

SMODS.Joker{
	key = "raven_seer",
	name = "Raven Seer",
	rarity = 1,
	pos = {x = 46, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Raven"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_raven_seer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_raven_seer"
SRL_MOD.modded_jokers_raven[#SRL_MOD.modded_jokers_raven + 1] = "j_srl_raven_seer"

--- Unstable Shapeshifter ---

SMODS.Joker{
	key = "unstable_shapeshifter",
	name = "Unstable Shapeshifter",
	rarity = 1,
	pos = {x = 47, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Shapeshifter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unstable_shapeshifter"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_unstable_shapeshifter"
SRL_MOD.modded_jokers_shapeshifter[#SRL_MOD.modded_jokers_shapeshifter + 1] = "j_srl_unstable_shapeshifter"

--- Evil Vortex ---

SMODS.Joker{
	key = "evil_vortex",
	name = "Evil Vortex",
	rarity = 1,
	pos = {x = 48, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Vortex"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_evil_vortex"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_evil_vortex"
SRL_MOD.modded_jokers_vortex[#SRL_MOD.modded_jokers_vortex + 1] = "j_srl_evil_vortex"

--- Lich Netherwalker ---

SMODS.Joker{
	key = "lich_netherwalker",
	name = "Lich Netherwalker",
	rarity = 1,
	pos = {x = 49, y = 19},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Lich"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lich_netherwalker"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_lich_netherwalker"
SRL_MOD.modded_jokers_lich[#SRL_MOD.modded_jokers_lich + 1] = "j_srl_lich_netherwalker"

--- Heretic Crusader ---

SMODS.Joker{
	key = "heretic_crusader",
	name = "Heretic Crusader",
	rarity = 1,
	pos = {x = 0, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Crusader"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_heretic_crusader"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_heretic_crusader"
SRL_MOD.modded_jokers_crusader[#SRL_MOD.modded_jokers_crusader + 1] = "j_srl_heretic_crusader"

--- Arcus Vulpes ---

SMODS.Joker{
	key = "arcus_vulpes",
	name = "Arcus Vulpes",
	rarity = 1,
	pos = {x = 1, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Vulpes"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_arcus_vulpes"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_arcus_vulpes"
SRL_MOD.modded_jokers_vulpes[#SRL_MOD.modded_jokers_vulpes + 1] = "j_srl_arcus_vulpes"

--- Steelheart Gargoyle ---

SMODS.Joker{
	key = "steelheart_gargoyle",
	name = "Steelheart Gargoyle",
	rarity = 1,
	pos = {x = 2, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Gargoyle"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_steelheart_gargoyle"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_steelheart_gargoyle"
SRL_MOD.modded_jokers_gargoyle[#SRL_MOD.modded_jokers_gargoyle + 1] = "j_srl_steelheart_gargoyle"

--- Nihilist Ender ---

SMODS.Joker{
	key = "nihilist_ender",
	name = "Nihilist Ender",
	rarity = 1,
	pos = {x = 3, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Nihilist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nihilist_ender"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_nihilist_ender"
SRL_MOD.modded_jokers_nihilist = {}
SRL_MOD.modded_jokers_nihilist[#SRL_MOD.modded_jokers_nihilist + 1] = "j_srl_nihilist_ender"

--- Nihilist Paralyzer ---

SMODS.Joker{
	key = "nihilist_paralyzer",
	name = "Nihilist Paralyzer",
	rarity = 1,
	pos = {x = 4, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Nihilist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nihilist_paralyzer"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_nihilist_paralyzer"
SRL_MOD.modded_jokers_nihilist[#SRL_MOD.modded_jokers_nihilist + 1] = "j_srl_nihilist_paralyzer"

--- Nihilist Protector ---

SMODS.Joker{
	key = "nihilist_protector",
	name = "Nihilist Protector",
	rarity = 1,
	pos = {x = 5, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Nihilist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nihilist_protector"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_nihilist_protector"
SRL_MOD.modded_jokers_nihilist[#SRL_MOD.modded_jokers_nihilist + 1] = "j_srl_nihilist_protector"

--- Nihilist Sealer ---

SMODS.Joker{
	key = "nihilist_sealer",
	name = "Nihilist Sealer",
	rarity = 1,
	pos = {x = 6, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Nihilist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nihilist_sealer"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_nihilist_sealer"
SRL_MOD.modded_jokers_nihilist[#SRL_MOD.modded_jokers_nihilist + 1] = "j_srl_nihilist_sealer"

--- Nihilist Seeker ---

SMODS.Joker{
	key = "nihilist_seeker",
	name = "Nihilist Seeker",
	rarity = 1,
	pos = {x = 7, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Nihilist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nihilist_seeker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_nihilist_seeker"
SRL_MOD.modded_jokers_nihilist[#SRL_MOD.modded_jokers_nihilist + 1] = "j_srl_nihilist_seeker"

--- Nihilist Summoner ---

SMODS.Joker{
	key = "nihilist_summoner",
	name = "Nihilist Summoner",
	rarity = 1,
	pos = {x = 8, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Nihilist"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nihilist_summoner"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_nihilist_summoner"
SRL_MOD.modded_jokers_nihilist[#SRL_MOD.modded_jokers_nihilist + 1] = "j_srl_nihilist_summoner"

--- Electropod Spider ---

SMODS.Joker{
	key = "electropod_spider",
	name = "Electropod Spider",
	rarity = 1,
	pos = {x = 9, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Electropod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_electropod_spider"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_electropod_spider"
SRL_MOD.modded_jokers_electropod = {}
SRL_MOD.modded_jokers_electropod[#SRL_MOD.modded_jokers_electropod + 1] = "j_srl_electropod_spider"

--- Electropod Beetle ---

SMODS.Joker{
	key = "electropod_beetle",
	name = "Electropod Beetle",
	rarity = 1,
	pos = {x = 10, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Electropod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_electropod_beetle"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_electropod_beetle"
SRL_MOD.modded_jokers_electropod[#SRL_MOD.modded_jokers_electropod + 1] = "j_srl_electropod_beetle"

--- Electropod Fly ---

SMODS.Joker{
	key = "electropod_fly",
	name = "Electropod Fly",
	rarity = 1,
	pos = {x = 11, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Electropod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_electropod_fly"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_electropod_fly"
SRL_MOD.modded_jokers_electropod[#SRL_MOD.modded_jokers_electropod + 1] = "j_srl_electropod_fly"

--- Electropod Ant ---

SMODS.Joker{
	key = "electropod_ant",
	name = "Electropod Ant",
	rarity = 1,
	pos = {x = 12, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Electropod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_electropod_ant"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_electropod_ant"
SRL_MOD.modded_jokers_electropod[#SRL_MOD.modded_jokers_electropod + 1] = "j_srl_electropod_ant"

--- Electropod Mantis ---

SMODS.Joker{
	key = "electropod_mantis",
	name = "Electropod Mantis",
	rarity = 1,
	pos = {x = 13, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Electropod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_electropod_mantis"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_electropod_mantis"
SRL_MOD.modded_jokers_electropod[#SRL_MOD.modded_jokers_electropod + 1] = "j_srl_electropod_mantis"

--- Electropod Scorpion ---

SMODS.Joker{
	key = "electropod_scorpion",
	name = "Electropod Scorpion",
	rarity = 1,
	pos = {x = 14, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Electropod"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_electropod_scorpion"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_electropod_scorpion"
SRL_MOD.modded_jokers_electropod[#SRL_MOD.modded_jokers_electropod + 1] = "j_srl_electropod_scorpion"

--- Hermitey ---

SMODS.Joker{
	key = "hermitey",
	name = "Hermitey",
	rarity = 1,
	pos = {x = 15, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hermitey"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_hermitey"
SRL_MOD.modded_jokers_exotic = {}
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_hermitey"

--- Helios ---

SMODS.Joker{
	key = "helios",
	name = "Helios",
	rarity = 1,
	pos = {x = 16, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_helios"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_helios"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_helios"

--- Vannyx ---

SMODS.Joker{
	key = "vannyx",
	name = "Vannyx",
	rarity = 1,
	pos = {x = 17, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vannyx"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_vannyx"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_vannyx"

--- Bejem ---

SMODS.Joker{
	key = "bejem",
	name = "Bejem",
	rarity = 1,
	pos = {x = 18, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bejem"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bejem"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_bejem"

--- Acrova ---

SMODS.Joker{
	key = "acrova",
	name = "Acrova",
	rarity = 1,
	pos = {x = 19, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_acrova"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_acrova"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_acrova"

--- Bashcloak ---

SMODS.Joker{
	key = "bashcloak",
	name = "Bashcloak",
	rarity = 1,
	pos = {x = 20, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bashcloak"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_bashcloak"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_bashcloak"

--- Iridris ---

SMODS.Joker{
	key = "iridris",
	name = "Iridris",
	rarity = 1,
	pos = {x = 21, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_iridris"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_iridris"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_iridris"

--- Toyland Amalgamation ---

SMODS.Joker{
	key = "toyland_amalgamation",
	name = "Toyland Amalgamation",
	rarity = 1,
	pos = {x = 22, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toyland_amalgamation"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_toyland_amalgamation"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_toyland_amalgamation"

--- Alexandria ---

SMODS.Joker{
	key = "alexandria",
	name = "Alexandria",
	rarity = 1,
	pos = {x = 23, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_alexandria"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_alexandria"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_alexandria"

--- Anneltha ---

SMODS.Joker{
	key = "anneltha",
	name = "Anneltha",
	rarity = 1,
	pos = {x = 24, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_anneltha"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_anneltha"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_anneltha"

--- Ariamaki ---

SMODS.Joker{
	key = "ariamaki",
	name = "Ariamaki",
	rarity = 1,
	pos = {x = 25, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ariamaki"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ariamaki"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_ariamaki"

--- Genaros ---

SMODS.Joker{
	key = "genaros",
	name = "Genaros",
	rarity = 1,
	pos = {x = 26, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_genaros"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_genaros"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_genaros"

--- Muse ---

SMODS.Joker{
	key = "muse",
	name = "Muse",
	rarity = 1,
	pos = {x = 27, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_muse"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_muse"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_muse"

--- Reclusa ---

SMODS.Joker{
	key = "reclusa",
	name = "Reclusa",
	rarity = 1,
	pos = {x = 28, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_reclusa"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_reclusa"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_reclusa"

--- 4080 ---

SMODS.Joker{
	key = "4080",
	name = "4080",
	rarity = 1,
	pos = {x = 29, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_4080"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_4080"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_4080"

--- Shallan ---

SMODS.Joker{
	key = "shallan",
	name = "Shallan",
	rarity = 1,
	pos = {x = 30, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shallan"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_shallan"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_shallan"

--- T'mere M'rgo ---

SMODS.Joker{
	key = "tmere_mrgo",
	name = "T'mere M'rgo",
	rarity = 1,
	pos = {x = 31, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Avatar"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tmere_mrgo"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_tmere_mrgo"
SRL_MOD.modded_jokers_avatar[#SRL_MOD.modded_jokers_avatar + 1] = "j_srl_tmere_mrgo"

--- Adaxial ---

SMODS.Joker{
	key = "adaxial",
	name = "Adaxial",
	rarity = 1,
	pos = {x = 32, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_adaxial"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_adaxial"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_adaxial"

--- Akara ---

SMODS.Joker{
	key = "akara",
	name = "Akara",
	rarity = 1,
	pos = {x = 33, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_akara"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_akara"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_akara"

--- 8004 ---

SMODS.Joker{
	key = "8004",
	name = "8004",
	rarity = 1,
	pos = {x = 34, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_8004"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_8004"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_8004"

--- Emus ---

SMODS.Joker{
	key = "emus",
	name = "Emus",
	rarity = 1,
	pos = {x = 35, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_emus"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_emus"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_emus"

--- Grom'Met ---

SMODS.Joker{
	key = "grommet",
	name = "Grom'Met",
	rarity = 1,
	pos = {x = 36, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_grommet"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_grommet"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_grommet"

--- Nalas ---

SMODS.Joker{
	key = "nalas",
	name = "Nalas",
	rarity = 1,
	pos = {x = 37, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nalas"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nalas"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_nalas"

--- Rengas ---

SMODS.Joker{
	key = "rengas",
	name = "Rengas",
	rarity = 1,
	pos = {x = 38, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rengas"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_rengas"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_rengas"

--- Saurel ---

SMODS.Joker{
	key = "saurel",
	name = "Saurel",
	rarity = 1,
	pos = {x = 39, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_saurel"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_saurel"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_saurel"

--- Thana ---

SMODS.Joker{
	key = "thana",
	name = "Thana",
	rarity = 1,
	pos = {x = 40, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Godspawn"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thana"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_thana"
SRL_MOD.modded_jokers_godspawn[#SRL_MOD.modded_jokers_godspawn + 1] = "j_srl_thana"

--- Nine Tailed Harvester ---

SMODS.Joker{
	key = "nine_tailed_harvester",
	name = "Nine Tailed Harvester",
	rarity = 1,
	pos = {x = 41, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nine_tailed_harvester"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nine_tailed_harvester"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_nine_tailed_harvester"

--- The First Spawn ---

SMODS.Joker{
	key = "the_first_spawn",
	name = "The First Spawn",
	rarity = 1,
	pos = {x = 42, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_the_first_spawn"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_the_first_spawn"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_the_first_spawn"

--- Tsuchinoko ---

SMODS.Joker{
	key = "tsuchinoko",
	name = "Tsuchinoko",
	rarity = 1,
	pos = {x = 43, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tsuchinoko"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_tsuchinoko"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_tsuchinoko"

--- Gravekeeper ---

SMODS.Joker{
	key = "gravekeeper",
	name = "Gravekeeper",
	rarity = 1,
	pos = {x = 44, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gravekeeper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gravekeeper"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_gravekeeper"

--- Singerbread Man ---

SMODS.Joker{
	key = "singerbread_man",
	name = "Singerbread Man",
	rarity = 1,
	pos = {x = 45, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_singerbread_man"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_singerbread_man"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_singerbread_man"

--- Duckgundr ---

SMODS.Joker{
	key = "duckgundr",
	name = "Duckgundr",
	rarity = 1,
	pos = {x = 46, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_duckgundr"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_duckgundr"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_duckgundr"

--- Paroxys ---

SMODS.Joker{
	key = "paroxys",
	name = "Paroxys",
	rarity = 1,
	pos = {x = 47, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_paroxys"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_paroxys"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_paroxys"

--- Heartminder ---

SMODS.Joker{
	key = "heartminder",
	name = "Heartminder",
	rarity = 1,
	pos = {x = 48, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_heartminder"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_heartminder"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_heartminder"

--- Pontiff of Luck ---

SMODS.Joker{
	key = "pontiff_of_luck",
	name = "Pontiff of Luck",
	rarity = 1,
	pos = {x = 49, y = 20},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pontiff_of_luck"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_pontiff_of_luck"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_pontiff_of_luck"

--- Otherworldly Visitor ---

SMODS.Joker{
	key = "otherworldly_visitor",
	name = "Otherworldly Visitor",
	rarity = 1,
	pos = {x = 0, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_otherworldly_visitor"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_otherworldly_visitor"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_otherworldly_visitor"

--- Jaculus ---

SMODS.Joker{
	key = "jaculus",
	name = "Jaculus",
	rarity = 1,
	pos = {x = 1, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_jaculus"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_jaculus"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_jaculus"

--- Obscene Blight ---

SMODS.Joker{
	key = "obscene_blight",
	name = "Obscene Blight",
	rarity = 1,
	pos = {x = 2, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_obscene_blight"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_obscene_blight"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_obscene_blight"

--- Legion ---

SMODS.Joker{
	key = "legion",
	name = "Legion",
	rarity = 1,
	pos = {x = 3, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_legion"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_legion"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_legion"

--- Rhozzgon ---

SMODS.Joker{
	key = "rhozzgon",
	name = "Rhozzgon",
	rarity = 1,
	pos = {x = 4, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rhozzgon"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_rhozzgon"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_rhozzgon"

--- Demon King ---

SMODS.Joker{
	key = "demon_king",
	name = "Demon King",
	rarity = 1,
	pos = {x = 5, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_demon_king"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_demon_king"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_demon_king"

--- Zombaton ---

SMODS.Joker{
	key = "zombaton",
	name = "Zombaton",
	rarity = 1,
	pos = {x = 6, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zombaton"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_zombaton"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_zombaton"

--- Piscacanth ---

SMODS.Joker{
	key = "piscacanth",
	name = "Piscacanth",
	rarity = 1,
	pos = {x = 7, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_piscacanth"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_piscacanth"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_piscacanth"

--- Sapphire Drake ---

SMODS.Joker{
	key = "sapphire_drake",
	name = "Sapphire Drake",
	rarity = 1,
	pos = {x = 8, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sapphire_drake"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_sapphire_drake"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_sapphire_drake"

--- Snow Lily ---

SMODS.Joker{
	key = "snow_lily",
	name = "Snow Lily",
	rarity = 1,
	pos = {x = 9, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_snow_lily"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_snow_lily"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_snow_lily"

--- Bilemaw ---

SMODS.Joker{
	key = "bilemaw",
	name = "Bilemaw",
	rarity = 1,
	pos = {x = 10, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bilemaw"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_bilemaw"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_bilemaw"

--- Chosen of the Fae ---

SMODS.Joker{
	key = "chosen_of_the_fae",
	name = "Chosen of the Fae",
	rarity = 1,
	pos = {x = 11, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chosen_of_the_fae"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_chosen_of_the_fae"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_chosen_of_the_fae"

--- Grubette ---

SMODS.Joker{
	key = "grubette",
	name = "Grubette",
	rarity = 1,
	pos = {x = 12, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_grubette"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_grubette"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_grubette"

--- The Bearon ---

SMODS.Joker{
	key = "the_bearon",
	name = "The Bearon",
	rarity = 1,
	pos = {x = 13, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_the_bearon"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_the_bearon"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_the_bearon"

--- Defiant Defiler ---

SMODS.Joker{
	key = "defiant_defiler",
	name = "Defiant Defiler",
	rarity = 1,
	pos = {x = 14, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_defiant_defiler"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_defiant_defiler"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_defiant_defiler"

--- Nguruvilu ---

SMODS.Joker{
	key = "nguruvilu",
	name = "Nguruvilu",
	rarity = 1,
	pos = {x = 15, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nguruvilu"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_nguruvilu"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_nguruvilu"

--- Avion ---

SMODS.Joker{
	key = "avion",
	name = "Avion",
	rarity = 1,
	pos = {x = 16, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_avion"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_avion"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_avion"

--- Proxigeist ---

SMODS.Joker{
	key = "proxigeist",
	name = "Proxigeist",
	rarity = 1,
	pos = {x = 17, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_proxigeist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_proxigeist"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_proxigeist"

--- Band Warchief ---

SMODS.Joker{
	key = "band_warchief",
	name = "Band Warchief",
	rarity = 1,
	pos = {x = 18, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_band_warchief"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_band_warchief"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_band_warchief"

--- Kavnak ---

SMODS.Joker{
	key = "kavnak",
	name = "Kavnak",
	rarity = 1,
	pos = {x = 19, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kavnak"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_kavnak"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_kavnak"

--- Infinite Eggling ---

SMODS.Joker{
	key = "infinite_eggling",
	name = "Infinite Eggling",
	rarity = 1,
	pos = {x = 20, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_infinite_eggling"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_infinite_eggling"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_infinite_eggling"

--- Mathemagician ---

SMODS.Joker{
	key = "mathemagician",
	name = "Mathemagician",
	rarity = 1,
	pos = {x = 21, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mathemagician"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mathemagician"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_mathemagician"

--- Conductive Carcharin ---

SMODS.Joker{
	key = "conductive_carcharin",
	name = "Conductive Carcharin",
	rarity = 1,
	pos = {x = 22, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_conductive_carcharin"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_conductive_carcharin"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_conductive_carcharin"

--- Davey ---

SMODS.Joker{
	key = "davey",
	name = "Davey",
	rarity = 1,
	pos = {x = 23, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_davey"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_davey"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_davey"

--- Dire Werewolf ---

SMODS.Joker{
	key = "dire_werewolf",
	name = "Dire Werewolf",
	rarity = 1,
	pos = {x = 24, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dire_werewolf"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dire_werewolf"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_dire_werewolf"

--- Lunatio ---

SMODS.Joker{
	key = "lunatio",
	name = "Lunatio",
	rarity = 1,
	pos = {x = 25, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lunatio"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_lunatio"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_lunatio"

--- Hydra ---

SMODS.Joker{
	key = "hydra",
	name = "Hydra",
	rarity = 1,
	pos = {x = 26, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hydra"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_hydra"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_hydra"

--- Ameteris Krin ---

SMODS.Joker{
	key = "ameteris_krin",
	name = "Ameteris Krin",
	rarity = 1,
	pos = {x = 27, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ameteris_krin"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ameteris_krin"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_ameteris_krin"

--- Nox Sinon ---

SMODS.Joker{
	key = "nox_sinon",
	name = "Nox Sinon",
	rarity = 1,
	pos = {x = 28, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nox_sinon"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_nox_sinon"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_nox_sinon"

--- Grovewalker ---

SMODS.Joker{
	key = "grovewalker",
	name = "Grovewalker",
	rarity = 1,
	pos = {x = 29, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_grovewalker"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_grovewalker"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_grovewalker"

--- Mind Reaver ---

SMODS.Joker{
	key = "mind_reaver",
	name = "Mind Reaver",
	rarity = 1,
	pos = {x = 30, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mind_reaver"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mind_reaver"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_mind_reaver"

--- Clawtail Wyrm ---

SMODS.Joker{
	key = "clawtail_wyrm",
	name = "Clawtail Wyrm",
	rarity = 1,
	pos = {x = 31, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_clawtail_wyrm"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_clawtail_wyrm"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_clawtail_wyrm"

--- Abandoned Homunculus ---

SMODS.Joker{
	key = "abandoned_homunculus",
	name = "Abandoned Homunculus",
	rarity = 1,
	pos = {x = 32, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abandoned_homunculus"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_abandoned_homunculus"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_abandoned_homunculus"

--- Lizard Wizard ---

SMODS.Joker{
	key = "lizard_wizard",
	name = "Lizard Wizard",
	rarity = 1,
	pos = {x = 33, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lizard_wizard"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_lizard_wizard"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_lizard_wizard"

--- Oni-Goroshi ---

SMODS.Joker{
	key = "onigoroshi",
	name = "Oni-Goroshi",
	rarity = 1,
	pos = {x = 34, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_onigoroshi"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_onigoroshi"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_onigoroshi"

--- Puffergryph ---

SMODS.Joker{
	key = "puffergryph",
	name = "Puffergryph",
	rarity = 1,
	pos = {x = 35, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_puffergryph"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_puffergryph"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_puffergryph"

--- Greybeard ---

SMODS.Joker{
	key = "greybeard",
	name = "Greybeard",
	rarity = 1,
	pos = {x = 36, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_greybeard"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_greybeard"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_greybeard"

--- Taco Hell ---

SMODS.Joker{
	key = "taco_hell",
	name = "Taco Hell",
	rarity = 1,
	pos = {x = 37, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_taco_hell"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_taco_hell"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_taco_hell"

--- Arcian Warbeast ---

SMODS.Joker{
	key = "arcian_warbeast",
	name = "Arcian Warbeast",
	rarity = 1,
	pos = {x = 38, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_arcian_warbeast"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_arcian_warbeast"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_arcian_warbeast"

--- The Dervish ---

SMODS.Joker{
	key = "the_dervish",
	name = "The Dervish",
	rarity = 1,
	pos = {x = 39, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_the_dervish"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_the_dervish"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_the_dervish"

--- Avaricious Draco ---

SMODS.Joker{
	key = "avaricious_draco",
	name = "Avaricious Draco",
	rarity = 1,
	pos = {x = 40, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_avaricious_draco"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_avaricious_draco"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_avaricious_draco"

--- Kobold ---

SMODS.Joker{
	key = "kobold",
	name = "Kobold",
	rarity = 1,
	pos = {x = 41, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kobold"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_kobold"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_kobold"

--- Skelegoop ---

SMODS.Joker{
	key = "skelegoop",
	name = "Skelegoop",
	rarity = 1,
	pos = {x = 42, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_skelegoop"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_skelegoop"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_skelegoop"

--- Bhasa Cherub ---

SMODS.Joker{
	key = "bhasa_cherub",
	name = "Bhasa Cherub",
	rarity = 1,
	pos = {x = 43, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Cherub"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bhasa_cherub"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_bhasa_cherub"
SRL_MOD.modded_jokers_cherub = {}
SRL_MOD.modded_jokers_cherub[#SRL_MOD.modded_jokers_cherub + 1] = "j_srl_bhasa_cherub"

--- Surya Cherub ---

SMODS.Joker{
	key = "surya_cherub",
	name = "Surya Cherub",
	rarity = 1,
	pos = {x = 44, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Cherub"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_surya_cherub"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_surya_cherub"
SRL_MOD.modded_jokers_cherub[#SRL_MOD.modded_jokers_cherub + 1] = "j_srl_surya_cherub"

--- Preta Cherub ---

SMODS.Joker{
	key = "preta_cherub",
	name = "Preta Cherub",
	rarity = 1,
	pos = {x = 45, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Cherub"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_preta_cherub"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_preta_cherub"
SRL_MOD.modded_jokers_cherub[#SRL_MOD.modded_jokers_cherub + 1] = "j_srl_preta_cherub"

--- Vipina Cherub ---

SMODS.Joker{
	key = "vipina_cherub",
	name = "Vipina Cherub",
	rarity = 1,
	pos = {x = 46, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Cherub"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vipina_cherub"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_vipina_cherub"
SRL_MOD.modded_jokers_cherub[#SRL_MOD.modded_jokers_cherub + 1] = "j_srl_vipina_cherub"

--- Chandra Cherub ---

SMODS.Joker{
	key = "chandra_cherub",
	name = "Chandra Cherub",
	rarity = 1,
	pos = {x = 47, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Cherub"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chandra_cherub"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_chandra_cherub"
SRL_MOD.modded_jokers_cherub[#SRL_MOD.modded_jokers_cherub + 1] = "j_srl_chandra_cherub"

--- Nisha Cherub ---

SMODS.Joker{
	key = "nisha_cherub",
	name = "Nisha Cherub",
	rarity = 1,
	pos = {x = 48, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Cherub"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nisha_cherub"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nisha_cherub"
SRL_MOD.modded_jokers_cherub[#SRL_MOD.modded_jokers_cherub + 1] = "j_srl_nisha_cherub"

--- Junkyard Bot ---

SMODS.Joker{
	key = "junkyard_bot",
	name = "Junkyard Bot",
	rarity = 1,
	pos = {x = 49, y = 21},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Modron"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_junkyard_bot"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_junkyard_bot"
SRL_MOD.modded_jokers_modron = {}
SRL_MOD.modded_jokers_modron[#SRL_MOD.modded_jokers_modron + 1] = "j_srl_junkyard_bot"

--- Bio Bot ---

SMODS.Joker{
	key = "bio_bot",
	name = "Bio Bot",
	rarity = 1,
	pos = {x = 0, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Modron"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bio_bot"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_bio_bot"
SRL_MOD.modded_jokers_modron[#SRL_MOD.modded_jokers_modron + 1] = "j_srl_bio_bot"

--- Brave Little Bot ---

SMODS.Joker{
	key = "brave_little_bot",
	name = "Brave Little Bot",
	rarity = 1,
	pos = {x = 1, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Modron"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brave_little_bot"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_brave_little_bot"
SRL_MOD.modded_jokers_modron[#SRL_MOD.modded_jokers_modron + 1] = "j_srl_brave_little_bot"

--- Wizard's Companion ---

SMODS.Joker{
	key = "wizards_companion",
	name = "Wizard's Companion",
	rarity = 1,
	pos = {x = 2, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Modron"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wizards_companion"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_wizards_companion"
SRL_MOD.modded_jokers_modron[#SRL_MOD.modded_jokers_modron + 1] = "j_srl_wizards_companion"

--- Wizard's Defender ---

SMODS.Joker{
	key = "wizards_defender",
	name = "Wizard's Defender",
	rarity = 1,
	pos = {x = 3, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Modron"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wizards_defender"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_wizards_defender"
SRL_MOD.modded_jokers_modron[#SRL_MOD.modded_jokers_modron + 1] = "j_srl_wizards_defender"

--- Sentry Bot ---

SMODS.Joker{
	key = "sentry_bot",
	name = "Sentry Bot",
	rarity = 1,
	pos = {x = 4, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Modron"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sentry_bot"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sentry_bot"
SRL_MOD.modded_jokers_modron[#SRL_MOD.modded_jokers_modron + 1] = "j_srl_sentry_bot"

--- Experimental Clockwork ---

SMODS.Joker{
	key = "experimental_clockwork",
	name = "Experimental Clockwork",
	rarity = 1,
	pos = {x = 5, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Clockwork"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_experimental_clockwork"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_experimental_clockwork"
SRL_MOD.modded_jokers_clockwork = {}
SRL_MOD.modded_jokers_clockwork[#SRL_MOD.modded_jokers_clockwork + 1] = "j_srl_experimental_clockwork"

--- Foghorn Clockwork ---

SMODS.Joker{
	key = "foghorn_clockwork",
	name = "Foghorn Clockwork",
	rarity = 1,
	pos = {x = 6, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Clockwork"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_foghorn_clockwork"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_foghorn_clockwork"
SRL_MOD.modded_jokers_clockwork[#SRL_MOD.modded_jokers_clockwork + 1] = "j_srl_foghorn_clockwork"

--- Industrial Clockwork ---

SMODS.Joker{
	key = "industrial_clockwork",
	name = "Industrial Clockwork",
	rarity = 1,
	pos = {x = 7, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Clockwork"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_industrial_clockwork"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_industrial_clockwork"
SRL_MOD.modded_jokers_clockwork[#SRL_MOD.modded_jokers_clockwork + 1] = "j_srl_industrial_clockwork"

--- Siege Clockwork ---

SMODS.Joker{
	key = "siege_clockwork",
	name = "Siege Clockwork",
	rarity = 1,
	pos = {x = 8, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Clockwork"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_siege_clockwork"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_siege_clockwork"
SRL_MOD.modded_jokers_clockwork[#SRL_MOD.modded_jokers_clockwork + 1] = "j_srl_siege_clockwork"

--- Battle Clockwork ---

SMODS.Joker{
	key = "battle_clockwork",
	name = "Battle Clockwork",
	rarity = 1,
	pos = {x = 9, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Clockwork"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_battle_clockwork"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_battle_clockwork"
SRL_MOD.modded_jokers_clockwork[#SRL_MOD.modded_jokers_clockwork + 1] = "j_srl_battle_clockwork"

--- War Clockwork ---

SMODS.Joker{
	key = "war_clockwork",
	name = "War Clockwork",
	rarity = 1,
	pos = {x = 10, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Clockwork"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_war_clockwork"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_war_clockwork"
SRL_MOD.modded_jokers_clockwork[#SRL_MOD.modded_jokers_clockwork + 1] = "j_srl_war_clockwork"

--- Living Arbiter ---

SMODS.Joker{
	key = "living_arbiter",
	name = "Living Arbiter",
	rarity = 1,
	pos = {x = 11, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arbiter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_living_arbiter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_living_arbiter"
SRL_MOD.modded_jokers_arbiter = {}
SRL_MOD.modded_jokers_arbiter[#SRL_MOD.modded_jokers_arbiter + 1] = "j_srl_living_arbiter"

--- Feeling Arbiter ---

SMODS.Joker{
	key = "feeling_arbiter",
	name = "Feeling Arbiter",
	rarity = 1,
	pos = {x = 12, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arbiter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_feeling_arbiter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_feeling_arbiter"
SRL_MOD.modded_jokers_arbiter[#SRL_MOD.modded_jokers_arbiter + 1] = "j_srl_feeling_arbiter"

--- Thinking Arbiter ---

SMODS.Joker{
	key = "thinking_arbiter",
	name = "Thinking Arbiter",
	rarity = 1,
	pos = {x = 13, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arbiter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thinking_arbiter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_thinking_arbiter"
SRL_MOD.modded_jokers_arbiter[#SRL_MOD.modded_jokers_arbiter + 1] = "j_srl_thinking_arbiter"

--- Breathing Arbiter ---

SMODS.Joker{
	key = "breathing_arbiter",
	name = "Breathing Arbiter",
	rarity = 1,
	pos = {x = 14, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arbiter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_breathing_arbiter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_breathing_arbiter"
SRL_MOD.modded_jokers_arbiter[#SRL_MOD.modded_jokers_arbiter + 1] = "j_srl_breathing_arbiter"

--- Moving Arbiter ---

SMODS.Joker{
	key = "moving_arbiter",
	name = "Moving Arbiter",
	rarity = 1,
	pos = {x = 15, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arbiter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_moving_arbiter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_moving_arbiter"
SRL_MOD.modded_jokers_arbiter[#SRL_MOD.modded_jokers_arbiter + 1] = "j_srl_moving_arbiter"

--- Final Arbiter ---

SMODS.Joker{
	key = "final_arbiter",
	name = "Final Arbiter",
	rarity = 1,
	pos = {x = 16, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Arbiter"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_final_arbiter"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_final_arbiter"
SRL_MOD.modded_jokers_arbiter[#SRL_MOD.modded_jokers_arbiter + 1] = "j_srl_final_arbiter"

--- Club Luckmantria ---

SMODS.Joker{
	key = "club_luckmantria",
	name = "Club Luckmantria",
	rarity = 1,
	pos = {x = 17, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Luckmantria"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_club_luckmantria"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_club_luckmantria"
SRL_MOD.modded_jokers_luckmantria = {}
SRL_MOD.modded_jokers_luckmantria[#SRL_MOD.modded_jokers_luckmantria + 1] = "j_srl_club_luckmantria"

--- Diamond Luckmantria ---

SMODS.Joker{
	key = "diamond_luckmantria",
	name = "Diamond Luckmantria",
	rarity = 1,
	pos = {x = 18, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Luckmantria"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_diamond_luckmantria"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_diamond_luckmantria"
SRL_MOD.modded_jokers_luckmantria[#SRL_MOD.modded_jokers_luckmantria + 1] = "j_srl_diamond_luckmantria"

--- Heart Luckmantria ---

SMODS.Joker{
	key = "heart_luckmantria",
	name = "Heart Luckmantria",
	rarity = 1,
	pos = {x = 19, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Luckmantria"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_heart_luckmantria"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_heart_luckmantria"
SRL_MOD.modded_jokers_luckmantria[#SRL_MOD.modded_jokers_luckmantria + 1] = "j_srl_heart_luckmantria"

--- Spade Luckmantria ---

SMODS.Joker{
	key = "spade_luckmantria",
	name = "Spade Luckmantria",
	rarity = 1,
	pos = {x = 20, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Luckmantria"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spade_luckmantria"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_spade_luckmantria"
SRL_MOD.modded_jokers_luckmantria[#SRL_MOD.modded_jokers_luckmantria + 1] = "j_srl_spade_luckmantria"

--- Ace Luckmantria ---

SMODS.Joker{
	key = "ace_luckmantria",
	name = "Ace Luckmantria",
	rarity = 1,
	pos = {x = 21, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Luckmantria"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ace_luckmantria"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ace_luckmantria"
SRL_MOD.modded_jokers_luckmantria[#SRL_MOD.modded_jokers_luckmantria + 1] = "j_srl_ace_luckmantria"

--- Joker Luckmantria ---

SMODS.Joker{
	key = "joker_luckmantria",
	name = "Joker Luckmantria",
	rarity = 1,
	pos = {x = 22, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Luckmantria"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_joker_luckmantria"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_joker_luckmantria"
SRL_MOD.modded_jokers_luckmantria[#SRL_MOD.modded_jokers_luckmantria + 1] = "j_srl_joker_luckmantria"

--- Uralos Spellslinger ---

SMODS.Joker{
	key = "uralos_spellslinger",
	name = "Uralos Spellslinger",
	rarity = 1,
	pos = {x = 23, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Uralos"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_uralos_spellslinger"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_uralos_spellslinger"
SRL_MOD.modded_jokers_uralos = {}
SRL_MOD.modded_jokers_uralos[#SRL_MOD.modded_jokers_uralos + 1] = "j_srl_uralos_spellslinger"

--- Uralos Knight ---

SMODS.Joker{
	key = "uralos_knight",
	name = "Uralos Knight",
	rarity = 1,
	pos = {x = 24, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Uralos"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_uralos_knight"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_uralos_knight"
SRL_MOD.modded_jokers_uralos[#SRL_MOD.modded_jokers_uralos + 1] = "j_srl_uralos_knight"

--- Uralos Spearmaster ---

SMODS.Joker{
	key = "uralos_spearmaster",
	name = "Uralos Spearmaster",
	rarity = 1,
	pos = {x = 25, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Uralos"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_uralos_spearmaster"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_uralos_spearmaster"
SRL_MOD.modded_jokers_uralos[#SRL_MOD.modded_jokers_uralos + 1] = "j_srl_uralos_spearmaster"

--- Uralos Savage ---

SMODS.Joker{
	key = "uralos_savage",
	name = "Uralos Savage",
	rarity = 1,
	pos = {x = 26, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Uralos"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_uralos_savage"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_uralos_savage"
SRL_MOD.modded_jokers_uralos[#SRL_MOD.modded_jokers_uralos + 1] = "j_srl_uralos_savage"

--- Uralos Trickster ---

SMODS.Joker{
	key = "uralos_trickster",
	name = "Uralos Trickster",
	rarity = 1,
	pos = {x = 27, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Uralos"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_uralos_trickster"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_uralos_trickster"
SRL_MOD.modded_jokers_uralos[#SRL_MOD.modded_jokers_uralos + 1] = "j_srl_uralos_trickster"

--- Uralos Healer ---

SMODS.Joker{
	key = "uralos_healer",
	name = "Uralos Healer",
	rarity = 1,
	pos = {x = 28, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Uralos"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_uralos_healer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_uralos_healer"
SRL_MOD.modded_jokers_uralos[#SRL_MOD.modded_jokers_uralos + 1] = "j_srl_uralos_healer"

--- Valor Chimera ---

SMODS.Joker{
	key = "valor_chimera",
	name = "Valor Chimera",
	rarity = 1,
	pos = {x = 29, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Chimera"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_valor_chimera"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_valor_chimera"
SRL_MOD.modded_jokers_chimera = {}
SRL_MOD.modded_jokers_chimera[#SRL_MOD.modded_jokers_chimera + 1] = "j_srl_valor_chimera"

--- Draco Chimera ---

SMODS.Joker{
	key = "draco_chimera",
	name = "Draco Chimera",
	rarity = 1,
	pos = {x = 30, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Chimera"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_draco_chimera"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_draco_chimera"
SRL_MOD.modded_jokers_chimera[#SRL_MOD.modded_jokers_chimera + 1] = "j_srl_draco_chimera"

--- Arcana Chimera ---

SMODS.Joker{
	key = "arcana_chimera",
	name = "Arcana Chimera",
	rarity = 1,
	pos = {x = 31, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Chimera"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_arcana_chimera"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_arcana_chimera"
SRL_MOD.modded_jokers_chimera[#SRL_MOD.modded_jokers_chimera + 1] = "j_srl_arcana_chimera"

--- Blessed Chimera ---

SMODS.Joker{
	key = "blessed_chimera",
	name = "Blessed Chimera",
	rarity = 1,
	pos = {x = 32, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Chimera"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blessed_chimera"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_blessed_chimera"
SRL_MOD.modded_jokers_chimera[#SRL_MOD.modded_jokers_chimera + 1] = "j_srl_blessed_chimera"

--- Undying Chimera ---

SMODS.Joker{
	key = "undying_chimera",
	name = "Undying Chimera",
	rarity = 1,
	pos = {x = 33, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Chimera"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_undying_chimera"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_undying_chimera"
SRL_MOD.modded_jokers_chimera[#SRL_MOD.modded_jokers_chimera + 1] = "j_srl_undying_chimera"

--- Wylder Chimera ---

SMODS.Joker{
	key = "wylder_chimera",
	name = "Wylder Chimera",
	rarity = 1,
	pos = {x = 34, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Chimera"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wylder_chimera"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_wylder_chimera"
SRL_MOD.modded_jokers_chimera[#SRL_MOD.modded_jokers_chimera + 1] = "j_srl_wylder_chimera"

--- Brain Animation ---

SMODS.Joker{
	key = "brain_animation",
	name = "Brain Animation",
	rarity = 1,
	pos = {x = 35, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Animation"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brain_animation"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_brain_animation"
SRL_MOD.modded_jokers_animation = {}
SRL_MOD.modded_jokers_animation[#SRL_MOD.modded_jokers_animation + 1] = "j_srl_brain_animation"

--- Ear Animation ---

SMODS.Joker{
	key = "ear_animation",
	name = "Ear Animation",
	rarity = 1,
	pos = {x = 36, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Animation"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ear_animation"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ear_animation"
SRL_MOD.modded_jokers_animation[#SRL_MOD.modded_jokers_animation + 1] = "j_srl_ear_animation"

--- Eye Animation ---

SMODS.Joker{
	key = "eye_animation",
	name = "Eye Animation",
	rarity = 1,
	pos = {x = 37, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Animation"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eye_animation"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_eye_animation"
SRL_MOD.modded_jokers_animation[#SRL_MOD.modded_jokers_animation + 1] = "j_srl_eye_animation"

--- Feet Animation ---

SMODS.Joker{
	key = "feet_animation",
	name = "Feet Animation",
	rarity = 1,
	pos = {x = 38, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Animation"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_feet_animation"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_feet_animation"
SRL_MOD.modded_jokers_animation[#SRL_MOD.modded_jokers_animation + 1] = "j_srl_feet_animation"

--- Hand Animation ---

SMODS.Joker{
	key = "hand_animation",
	name = "Hand Animation",
	rarity = 1,
	pos = {x = 39, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Animation"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hand_animation"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_hand_animation"
SRL_MOD.modded_jokers_animation[#SRL_MOD.modded_jokers_animation + 1] = "j_srl_hand_animation"

--- Lip Animation ---

SMODS.Joker{
	key = "lip_animation",
	name = "Lip Animation",
	rarity = 1,
	pos = {x = 40, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Animation"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lip_animation"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_lip_animation"
SRL_MOD.modded_jokers_animation[#SRL_MOD.modded_jokers_animation + 1] = "j_srl_lip_animation"

--- Asclepias Fae ---

SMODS.Joker{
	key = "asclepias_fae",
	name = "Asclepias Fae",
	rarity = 1,
	pos = {x = 41, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Fae"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_asclepias_fae"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_asclepias_fae"
SRL_MOD.modded_jokers_fae = {}
SRL_MOD.modded_jokers_fae[#SRL_MOD.modded_jokers_fae + 1] = "j_srl_asclepias_fae"

--- Helianthus Fae ---

SMODS.Joker{
	key = "helianthus_fae",
	name = "Helianthus Fae",
	rarity = 1,
	pos = {x = 42, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Fae"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_helianthus_fae"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_helianthus_fae"
SRL_MOD.modded_jokers_fae[#SRL_MOD.modded_jokers_fae + 1] = "j_srl_helianthus_fae"

--- Hydrangea Fae ---

SMODS.Joker{
	key = "hydrangea_fae",
	name = "Hydrangea Fae",
	rarity = 1,
	pos = {x = 43, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Fae"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hydrangea_fae"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_hydrangea_fae"
SRL_MOD.modded_jokers_fae[#SRL_MOD.modded_jokers_fae + 1] = "j_srl_hydrangea_fae"

--- Polygala Fae ---

SMODS.Joker{
	key = "polygala_fae",
	name = "Polygala Fae",
	rarity = 1,
	pos = {x = 44, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Fae"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_polygala_fae"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_polygala_fae"
SRL_MOD.modded_jokers_fae[#SRL_MOD.modded_jokers_fae + 1] = "j_srl_polygala_fae"

--- Rhododendron Fae ---

SMODS.Joker{
	key = "rhododendron_fae",
	name = "Rhododendron Fae",
	rarity = 1,
	pos = {x = 45, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Fae"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rhododendron_fae"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_rhododendron_fae"
SRL_MOD.modded_jokers_fae[#SRL_MOD.modded_jokers_fae + 1] = "j_srl_rhododendron_fae"

--- Roseaea Fae ---

SMODS.Joker{
	key = "roseaea_fae",
	name = "Roseaea Fae",
	rarity = 1,
	pos = {x = 46, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Fae"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_roseaea_fae"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_roseaea_fae"
SRL_MOD.modded_jokers_fae[#SRL_MOD.modded_jokers_fae + 1] = "j_srl_roseaea_fae"

--- Rimeskin Spellmane ---

SMODS.Joker{
	key = "rimeskin_spellmane",
	name = "Rimeskin Spellmane",
	rarity = 1,
	pos = {x = 47, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spellmane"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rimeskin_spellmane"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_rimeskin_spellmane"
SRL_MOD.modded_jokers_spellmane = {}
SRL_MOD.modded_jokers_spellmane[#SRL_MOD.modded_jokers_spellmane + 1] = "j_srl_rimeskin_spellmane"

--- Ashskin Spellmane ---

SMODS.Joker{
	key = "ashskin_spellmane",
	name = "Ashskin Spellmane",
	rarity = 1,
	pos = {x = 48, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spellmane"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ashskin_spellmane"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ashskin_spellmane"
SRL_MOD.modded_jokers_spellmane[#SRL_MOD.modded_jokers_spellmane + 1] = "j_srl_ashskin_spellmane"

--- Voltskin Spellmane ---

SMODS.Joker{
	key = "voltskin_spellmane",
	name = "Voltskin Spellmane",
	rarity = 1,
	pos = {x = 49, y = 22},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spellmane"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_voltskin_spellmane"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_voltskin_spellmane"
SRL_MOD.modded_jokers_spellmane[#SRL_MOD.modded_jokers_spellmane + 1] = "j_srl_voltskin_spellmane"

--- Venomskin Spellmane ---

SMODS.Joker{
	key = "venomskin_spellmane",
	name = "Venomskin Spellmane",
	rarity = 1,
	pos = {x = 0, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spellmane"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_venomskin_spellmane"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_venomskin_spellmane"
SRL_MOD.modded_jokers_spellmane[#SRL_MOD.modded_jokers_spellmane + 1] = "j_srl_venomskin_spellmane"

--- Dryskin Spellmane ---

SMODS.Joker{
	key = "dryskin_spellmane",
	name = "Dryskin Spellmane",
	rarity = 1,
	pos = {x = 1, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spellmane"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dryskin_spellmane"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_dryskin_spellmane"
SRL_MOD.modded_jokers_spellmane[#SRL_MOD.modded_jokers_spellmane + 1] = "j_srl_dryskin_spellmane"

--- Cloudskin Spellmane ---

SMODS.Joker{
	key = "cloudskin_spellmane",
	name = "Cloudskin Spellmane",
	rarity = 1,
	pos = {x = 2, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spellmane"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cloudskin_spellmane"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_cloudskin_spellmane"
SRL_MOD.modded_jokers_spellmane[#SRL_MOD.modded_jokers_spellmane + 1] = "j_srl_cloudskin_spellmane"

--- Colacanth ---

SMODS.Joker{
	key = "colacanth",
	name = "Colacanth",
	rarity = 1,
	pos = {x = 3, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_colacanth"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_colacanth"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_colacanth"

--- Bumblebig ---

SMODS.Joker{
	key = "bumblebig",
	name = "Bumblebig",
	rarity = 1,
	pos = {x = 4, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bumblebig"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_bumblebig"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_bumblebig"

--- Lavalotl ---

SMODS.Joker{
	key = "lavalotl",
	name = "Lavalotl",
	rarity = 1,
	pos = {x = 5, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lavalotl"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_lavalotl"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_lavalotl"

--- String Puller ---

SMODS.Joker{
	key = "string_puller",
	name = "String Puller",
	rarity = 1,
	pos = {x = 6, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_string_puller"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_string_puller"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_string_puller"

--- Magicalope ---

SMODS.Joker{
	key = "magicalope",
	name = "Magicalope",
	rarity = 1,
	pos = {x = 7, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_magicalope"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_magicalope"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_magicalope"

--- Paladin Crab ---

SMODS.Joker{
	key = "paladin_crab",
	name = "Paladin Crab",
	rarity = 1,
	pos = {x = 8, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_paladin_crab"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_paladin_crab"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_paladin_crab"

--- Plated Warhog ---

SMODS.Joker{
	key = "plated_warhog",
	name = "Plated Warhog",
	rarity = 1,
	pos = {x = 9, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Warhog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plated_warhog"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_plated_warhog"
SRL_MOD.modded_jokers_warhog = {}
SRL_MOD.modded_jokers_warhog[#SRL_MOD.modded_jokers_warhog + 1] = "j_srl_plated_warhog"

--- Mystic Warhog ---

SMODS.Joker{
	key = "mystic_warhog",
	name = "Mystic Warhog",
	rarity = 1,
	pos = {x = 10, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Warhog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mystic_warhog"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mystic_warhog"
SRL_MOD.modded_jokers_warhog[#SRL_MOD.modded_jokers_warhog + 1] = "j_srl_mystic_warhog"

--- Oozing Warhog ---

SMODS.Joker{
	key = "oozing_warhog",
	name = "Oozing Warhog",
	rarity = 1,
	pos = {x = 11, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Warhog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_oozing_warhog"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_oozing_warhog"
SRL_MOD.modded_jokers_warhog[#SRL_MOD.modded_jokers_warhog + 1] = "j_srl_oozing_warhog"

--- Barbed Warhog ---

SMODS.Joker{
	key = "barbed_warhog",
	name = "Barbed Warhog",
	rarity = 1,
	pos = {x = 12, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Warhog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_barbed_warhog"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_barbed_warhog"
SRL_MOD.modded_jokers_warhog[#SRL_MOD.modded_jokers_warhog + 1] = "j_srl_barbed_warhog"

--- Accursed Warhog ---

SMODS.Joker{
	key = "accursed_warhog",
	name = "Accursed Warhog",
	rarity = 1,
	pos = {x = 13, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Warhog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_accursed_warhog"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_accursed_warhog"
SRL_MOD.modded_jokers_warhog[#SRL_MOD.modded_jokers_warhog + 1] = "j_srl_accursed_warhog"

--- Dire Warhog ---

SMODS.Joker{
	key = "dire_warhog",
	name = "Dire Warhog",
	rarity = 1,
	pos = {x = 14, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Warhog"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dire_warhog"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dire_warhog"
SRL_MOD.modded_jokers_warhog[#SRL_MOD.modded_jokers_warhog + 1] = "j_srl_dire_warhog"

--- Nephilim Shieldbearer ---

SMODS.Joker{
	key = "nephilim_shieldbearer",
	name = "Nephilim Shieldbearer",
	rarity = 1,
	pos = {x = 15, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Nephilim"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nephilim_shieldbearer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nephilim_shieldbearer"
SRL_MOD.modded_jokers_nephilim = {}
SRL_MOD.modded_jokers_nephilim[#SRL_MOD.modded_jokers_nephilim + 1] = "j_srl_nephilim_shieldbearer"

--- Nephilim Lord ---

SMODS.Joker{
	key = "nephilim_lord",
	name = "Nephilim Lord",
	rarity = 1,
	pos = {x = 16, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Nephilim"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nephilim_lord"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nephilim_lord"
SRL_MOD.modded_jokers_nephilim[#SRL_MOD.modded_jokers_nephilim + 1] = "j_srl_nephilim_lord"

--- Nephilim Sorcerer ---

SMODS.Joker{
	key = "nephilim_sorcerer",
	name = "Nephilim Sorcerer",
	rarity = 1,
	pos = {x = 17, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Nephilim"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nephilim_sorcerer"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nephilim_sorcerer"
SRL_MOD.modded_jokers_nephilim[#SRL_MOD.modded_jokers_nephilim + 1] = "j_srl_nephilim_sorcerer"

--- Nephilim Skirmisher ---

SMODS.Joker{
	key = "nephilim_skirmisher",
	name = "Nephilim Skirmisher",
	rarity = 1,
	pos = {x = 18, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Nephilim"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nephilim_skirmisher"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nephilim_skirmisher"
SRL_MOD.modded_jokers_nephilim[#SRL_MOD.modded_jokers_nephilim + 1] = "j_srl_nephilim_skirmisher"

--- Nephilim Cleric ---

SMODS.Joker{
	key = "nephilim_cleric",
	name = "Nephilim Cleric",
	rarity = 1,
	pos = {x = 19, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Nephilim"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nephilim_cleric"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nephilim_cleric"
SRL_MOD.modded_jokers_nephilim[#SRL_MOD.modded_jokers_nephilim + 1] = "j_srl_nephilim_cleric"

--- Nephilim Scion ---

SMODS.Joker{
	key = "nephilim_scion",
	name = "Nephilim Scion",
	rarity = 1,
	pos = {x = 20, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Nephilim"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nephilim_scion"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_nephilim_scion"
SRL_MOD.modded_jokers_nephilim[#SRL_MOD.modded_jokers_nephilim + 1] = "j_srl_nephilim_scion"

--- Inkjet Kraken ---

SMODS.Joker{
	key = "inkjet_kraken",
	name = "Inkjet Kraken",
	rarity = 1,
	pos = {x = 21, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Kraken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_inkjet_kraken"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_inkjet_kraken"
SRL_MOD.modded_jokers_kraken = {}
SRL_MOD.modded_jokers_kraken[#SRL_MOD.modded_jokers_kraken + 1] = "j_srl_inkjet_kraken"

--- Kraken Shipbreaker ---

SMODS.Joker{
	key = "kraken_shipbreaker",
	name = "Kraken Shipbreaker",
	rarity = 1,
	pos = {x = 22, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Kraken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kraken_shipbreaker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_kraken_shipbreaker"
SRL_MOD.modded_jokers_kraken[#SRL_MOD.modded_jokers_kraken + 1] = "j_srl_kraken_shipbreaker"

--- Unblinking Kraken ---

SMODS.Joker{
	key = "unblinking_kraken",
	name = "Unblinking Kraken",
	rarity = 1,
	pos = {x = 23, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Kraken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_unblinking_kraken"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_unblinking_kraken"
SRL_MOD.modded_jokers_kraken[#SRL_MOD.modded_jokers_kraken + 1] = "j_srl_unblinking_kraken"

--- Ironside Kraken ---

SMODS.Joker{
	key = "ironside_kraken",
	name = "Ironside Kraken",
	rarity = 1,
	pos = {x = 24, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Kraken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ironside_kraken"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ironside_kraken"
SRL_MOD.modded_jokers_kraken[#SRL_MOD.modded_jokers_kraken + 1] = "j_srl_ironside_kraken"

--- Kraken Hundredhand ---

SMODS.Joker{
	key = "kraken_hundredhand",
	name = "Kraken Hundredhand",
	rarity = 1,
	pos = {x = 25, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Kraken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kraken_hundredhand"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_kraken_hundredhand"
SRL_MOD.modded_jokers_kraken[#SRL_MOD.modded_jokers_kraken + 1] = "j_srl_kraken_hundredhand"

--- Abyssal Kraken ---

SMODS.Joker{
	key = "abyssal_kraken",
	name = "Abyssal Kraken",
	rarity = 1,
	pos = {x = 26, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Kraken"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abyssal_kraken"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_abyssal_kraken"
SRL_MOD.modded_jokers_kraken[#SRL_MOD.modded_jokers_kraken + 1] = "j_srl_abyssal_kraken"

--- Cranium Cluster ---

SMODS.Joker{
	key = "cranium_cluster",
	name = "Cranium Cluster",
	rarity = 1,
	pos = {x = 27, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cranium_cluster"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_cranium_cluster"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_cranium_cluster"

--- Proto-Brachyura ---

SMODS.Joker{
	key = "protobrachyura",
	name = "Proto-Brachyura",
	rarity = 1,
	pos = {x = 28, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_protobrachyura"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_protobrachyura"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_protobrachyura"

--- Petrafortis ---

SMODS.Joker{
	key = "petrafortis",
	name = "Petrafortis",
	rarity = 1,
	pos = {x = 29, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_petrafortis"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_petrafortis"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_petrafortis"

--- Abacus ---

SMODS.Joker{
	key = "abacus",
	name = "Abacus",
	rarity = 1,
	pos = {x = 30, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_abacus"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_abacus"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_abacus"

--- Forgotten Disciple ---

SMODS.Joker{
	key = "forgotten_disciple",
	name = "Forgotten Disciple",
	rarity = 1,
	pos = {x = 31, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_forgotten_disciple"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_forgotten_disciple"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_forgotten_disciple"

--- Orphaned Minion ---

SMODS.Joker{
	key = "orphaned_minion",
	name = "Orphaned Minion",
	rarity = 1,
	pos = {x = 32, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_orphaned_minion"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_orphaned_minion"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_orphaned_minion"

--- Atlas Beacon ---

SMODS.Joker{
	key = "atlas_beacon",
	name = "Atlas Beacon",
	rarity = 1,
	pos = {x = 33, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Beacon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_atlas_beacon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_atlas_beacon"
SRL_MOD.modded_jokers_beacon = {}
SRL_MOD.modded_jokers_beacon[#SRL_MOD.modded_jokers_beacon + 1] = "j_srl_atlas_beacon"

--- Luna Beacon ---

SMODS.Joker{
	key = "luna_beacon",
	name = "Luna Beacon",
	rarity = 1,
	pos = {x = 34, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Beacon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_luna_beacon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_luna_beacon"
SRL_MOD.modded_jokers_beacon[#SRL_MOD.modded_jokers_beacon + 1] = "j_srl_luna_beacon"

--- Lappet Beacon ---

SMODS.Joker{
	key = "lappet_beacon",
	name = "Lappet Beacon",
	rarity = 1,
	pos = {x = 35, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Beacon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lappet_beacon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_lappet_beacon"
SRL_MOD.modded_jokers_beacon[#SRL_MOD.modded_jokers_beacon + 1] = "j_srl_lappet_beacon"

--- Deathshead Beacon ---

SMODS.Joker{
	key = "deathshead_beacon",
	name = "Deathshead Beacon",
	rarity = 1,
	pos = {x = 36, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Beacon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_deathshead_beacon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_deathshead_beacon"
SRL_MOD.modded_jokers_beacon[#SRL_MOD.modded_jokers_beacon + 1] = "j_srl_deathshead_beacon"

--- Pellucid Beacon ---

SMODS.Joker{
	key = "pellucid_beacon",
	name = "Pellucid Beacon",
	rarity = 1,
	pos = {x = 37, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Beacon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pellucid_beacon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_pellucid_beacon"
SRL_MOD.modded_jokers_beacon[#SRL_MOD.modded_jokers_beacon + 1] = "j_srl_pellucid_beacon"

--- Rosy Beacon ---

SMODS.Joker{
	key = "rosy_beacon",
	name = "Rosy Beacon",
	rarity = 1,
	pos = {x = 38, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Beacon"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_rosy_beacon"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_rosy_beacon"
SRL_MOD.modded_jokers_beacon[#SRL_MOD.modded_jokers_beacon + 1] = "j_srl_rosy_beacon"

--- Seiryu ---

SMODS.Joker{
	key = "seiryu",
	name = "Seiryu",
	rarity = 1,
	pos = {x = 39, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_seiryu"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_seiryu"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_seiryu"

--- Byakko ---

SMODS.Joker{
	key = "byakko",
	name = "Byakko",
	rarity = 1,
	pos = {x = 40, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_byakko"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_byakko"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_byakko"

--- Genbu ---

SMODS.Joker{
	key = "genbu",
	name = "Genbu",
	rarity = 1,
	pos = {x = 41, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_genbu"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_genbu"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_genbu"

--- Suzaku ---

SMODS.Joker{
	key = "suzaku",
	name = "Suzaku",
	rarity = 1,
	pos = {x = 42, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_suzaku"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_suzaku"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_suzaku"

--- Huanglong ---

SMODS.Joker{
	key = "huanglong",
	name = "Huanglong",
	rarity = 1,
	pos = {x = 43, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_huanglong"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_huanglong"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_huanglong"

--- Kirin ---

SMODS.Joker{
	key = "kirin",
	name = "Kirin",
	rarity = 1,
	pos = {x = 44, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kirin"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_kirin"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_kirin"

--- Mythicant Populi ---

SMODS.Joker{
	key = "mythicant_populi",
	name = "Mythicant Populi",
	rarity = 1,
	pos = {x = 45, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mythicant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mythicant_populi"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mythicant_populi"
SRL_MOD.modded_jokers_mythicant = {}
SRL_MOD.modded_jokers_mythicant[#SRL_MOD.modded_jokers_mythicant + 1] = "j_srl_mythicant_populi"

--- Mythicant Solis ---

SMODS.Joker{
	key = "mythicant_solis",
	name = "Mythicant Solis",
	rarity = 1,
	pos = {x = 46, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mythicant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mythicant_solis"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mythicant_solis"
SRL_MOD.modded_jokers_mythicant[#SRL_MOD.modded_jokers_mythicant + 1] = "j_srl_mythicant_solis"

--- Mythicant Calti ---

SMODS.Joker{
	key = "mythicant_calti",
	name = "Mythicant Calti",
	rarity = 1,
	pos = {x = 47, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mythicant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mythicant_calti"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mythicant_calti"
SRL_MOD.modded_jokers_mythicant[#SRL_MOD.modded_jokers_mythicant + 1] = "j_srl_mythicant_calti"

--- Mythicant Palmira ---

SMODS.Joker{
	key = "mythicant_palmira",
	name = "Mythicant Palmira",
	rarity = 1,
	pos = {x = 48, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mythicant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mythicant_palmira"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mythicant_palmira"
SRL_MOD.modded_jokers_mythicant[#SRL_MOD.modded_jokers_mythicant + 1] = "j_srl_mythicant_palmira"

--- Mythicant Pryderis ---

SMODS.Joker{
	key = "mythicant_pryderis",
	name = "Mythicant Pryderis",
	rarity = 1,
	pos = {x = 49, y = 23},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mythicant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mythicant_pryderis"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mythicant_pryderis"
SRL_MOD.modded_jokers_mythicant[#SRL_MOD.modded_jokers_mythicant + 1] = "j_srl_mythicant_pryderis"

--- Mythicant Erdhe ---

SMODS.Joker{
	key = "mythicant_erdhe",
	name = "Mythicant Erdhe",
	rarity = 1,
	pos = {x = 0, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mythicant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mythicant_erdhe"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mythicant_erdhe"
SRL_MOD.modded_jokers_mythicant[#SRL_MOD.modded_jokers_mythicant + 1] = "j_srl_mythicant_erdhe"

--- Gravewood Ghost ---

SMODS.Joker{
	key = "gravewood_ghost",
	name = "Gravewood Ghost",
	rarity = 1,
	pos = {x = 1, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gravewood_ghost"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gravewood_ghost"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_gravewood_ghost"

--- Shambler Benefactor ---

SMODS.Joker{
	key = "shambler_benefactor",
	name = "Shambler Benefactor",
	rarity = 1,
	pos = {x = 2, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Sea Shambler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_shambler_benefactor"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_shambler_benefactor"
SRL_MOD.modded_jokers_sea_shambler[#SRL_MOD.modded_jokers_sea_shambler + 1] = "j_srl_shambler_benefactor"

--- Orc Bowman ---

SMODS.Joker{
	key = "orc_bowman",
	name = "Orc Bowman",
	rarity = 1,
	pos = {x = 3, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_orc_bowman"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_orc_bowman"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_orc_bowman"

--- Cursed Effigy ---

SMODS.Joker{
	key = "cursed_effigy",
	name = "Cursed Effigy",
	rarity = 1,
	pos = {x = 4, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Effigy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cursed_effigy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_cursed_effigy"
SRL_MOD.modded_jokers_effigy = {}
SRL_MOD.modded_jokers_effigy[#SRL_MOD.modded_jokers_effigy + 1] = "j_srl_cursed_effigy"

--- Falconer Effigy ---

SMODS.Joker{
	key = "falconer_effigy",
	name = "Falconer Effigy",
	rarity = 1,
	pos = {x = 5, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Effigy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_falconer_effigy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_falconer_effigy"
SRL_MOD.modded_jokers_effigy[#SRL_MOD.modded_jokers_effigy + 1] = "j_srl_falconer_effigy"

--- Knight Effigy ---

SMODS.Joker{
	key = "knight_effigy",
	name = "Knight Effigy",
	rarity = 1,
	pos = {x = 6, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Effigy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_knight_effigy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_knight_effigy"
SRL_MOD.modded_jokers_effigy[#SRL_MOD.modded_jokers_effigy + 1] = "j_srl_knight_effigy"

--- Dancing Effigy ---

SMODS.Joker{
	key = "dancing_effigy",
	name = "Dancing Effigy",
	rarity = 1,
	pos = {x = 7, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Effigy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dancing_effigy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dancing_effigy"
SRL_MOD.modded_jokers_effigy[#SRL_MOD.modded_jokers_effigy + 1] = "j_srl_dancing_effigy"

--- Noble Effigy ---

SMODS.Joker{
	key = "noble_effigy",
	name = "Noble Effigy",
	rarity = 1,
	pos = {x = 8, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Effigy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_noble_effigy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_noble_effigy"
SRL_MOD.modded_jokers_effigy[#SRL_MOD.modded_jokers_effigy + 1] = "j_srl_noble_effigy"

--- Healing Effigy ---

SMODS.Joker{
	key = "healing_effigy",
	name = "Healing Effigy",
	rarity = 1,
	pos = {x = 9, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Effigy"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_healing_effigy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_healing_effigy"
SRL_MOD.modded_jokers_effigy[#SRL_MOD.modded_jokers_effigy + 1] = "j_srl_healing_effigy"

--- Besieged Beast ---

SMODS.Joker{
	key = "besieged_beast",
	name = "Besieged Beast",
	rarity = 1,
	pos = {x = 10, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_besieged_beast"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_besieged_beast"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_besieged_beast"

--- Lucanian Archunter ---

SMODS.Joker{
	key = "lucanian_archunter",
	name = "Lucanian Archunter",
	rarity = 1,
	pos = {x = 11, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Lucanian"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lucanian_archunter"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_lucanian_archunter"
SRL_MOD.modded_jokers_lucanian = {}
SRL_MOD.modded_jokers_lucanian[#SRL_MOD.modded_jokers_lucanian + 1] = "j_srl_lucanian_archunter"

--- Lucanian Soulbinder ---

SMODS.Joker{
	key = "lucanian_soulbinder",
	name = "Lucanian Soulbinder",
	rarity = 1,
	pos = {x = 12, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Lucanian"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lucanian_soulbinder"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_lucanian_soulbinder"
SRL_MOD.modded_jokers_lucanian[#SRL_MOD.modded_jokers_lucanian + 1] = "j_srl_lucanian_soulbinder"

--- Lucanian Illuminator ---

SMODS.Joker{
	key = "lucanian_illuminator",
	name = "Lucanian Illuminator",
	rarity = 1,
	pos = {x = 13, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Lucanian"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lucanian_illuminator"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_lucanian_illuminator"
SRL_MOD.modded_jokers_lucanian[#SRL_MOD.modded_jokers_lucanian + 1] = "j_srl_lucanian_illuminator"

--- Lucanian Armiger ---

SMODS.Joker{
	key = "lucanian_armiger",
	name = "Lucanian Armiger",
	rarity = 1,
	pos = {x = 14, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Lucanian"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lucanian_armiger"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_lucanian_armiger"
SRL_MOD.modded_jokers_lucanian[#SRL_MOD.modded_jokers_lucanian + 1] = "j_srl_lucanian_armiger"

--- Lucanian Windrider ---

SMODS.Joker{
	key = "lucanian_windrider",
	name = "Lucanian Windrider",
	rarity = 1,
	pos = {x = 15, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Lucanian"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lucanian_windrider"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_lucanian_windrider"
SRL_MOD.modded_jokers_lucanian[#SRL_MOD.modded_jokers_lucanian + 1] = "j_srl_lucanian_windrider"

--- Lucanian Aspectal ---

SMODS.Joker{
	key = "lucanian_aspectal",
	name = "Lucanian Aspectal",
	rarity = 1,
	pos = {x = 16, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Lucanian"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lucanian_aspectal"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_lucanian_aspectal"
SRL_MOD.modded_jokers_lucanian[#SRL_MOD.modded_jokers_lucanian + 1] = "j_srl_lucanian_aspectal"

--- Spectral Monarch ---

SMODS.Joker{
	key = "spectral_monarch",
	name = "Spectral Monarch",
	rarity = 1,
	pos = {x = 17, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spectral_monarch"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_spectral_monarch"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_spectral_monarch"

--- Peculiar Spacecat ---

SMODS.Joker{
	key = "peculiar_spacecat",
	name = "Peculiar Spacecat",
	rarity = 1,
	pos = {x = 18, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spacecat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_peculiar_spacecat"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_peculiar_spacecat"
SRL_MOD.modded_jokers_spacecat = {}
SRL_MOD.modded_jokers_spacecat[#SRL_MOD.modded_jokers_spacecat + 1] = "j_srl_peculiar_spacecat"

--- Gold Spacecat ---

SMODS.Joker{
	key = "gold_spacecat",
	name = "Gold Spacecat",
	rarity = 1,
	pos = {x = 19, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spacecat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gold_spacecat"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_gold_spacecat"
SRL_MOD.modded_jokers_spacecat[#SRL_MOD.modded_jokers_spacecat + 1] = "j_srl_gold_spacecat"

--- Black Spacecat ---

SMODS.Joker{
	key = "black_spacecat",
	name = "Black Spacecat",
	rarity = 1,
	pos = {x = 20, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spacecat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_black_spacecat"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_black_spacecat"
SRL_MOD.modded_jokers_spacecat[#SRL_MOD.modded_jokers_spacecat + 1] = "j_srl_black_spacecat"

--- Astral Spacecat ---

SMODS.Joker{
	key = "astral_spacecat",
	name = "Astral Spacecat",
	rarity = 1,
	pos = {x = 21, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spacecat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_astral_spacecat"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_astral_spacecat"
SRL_MOD.modded_jokers_spacecat[#SRL_MOD.modded_jokers_spacecat + 1] = "j_srl_astral_spacecat"

--- Furious Spacecat ---

SMODS.Joker{
	key = "furious_spacecat",
	name = "Furious Spacecat",
	rarity = 1,
	pos = {x = 22, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spacecat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_furious_spacecat"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_furious_spacecat"
SRL_MOD.modded_jokers_spacecat[#SRL_MOD.modded_jokers_spacecat + 1] = "j_srl_furious_spacecat"

--- Ancient Spacecat ---

SMODS.Joker{
	key = "ancient_spacecat",
	name = "Ancient Spacecat",
	rarity = 1,
	pos = {x = 23, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spacecat"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancient_spacecat"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ancient_spacecat"
SRL_MOD.modded_jokers_spacecat[#SRL_MOD.modded_jokers_spacecat + 1] = "j_srl_ancient_spacecat"

--- Spelljuggler Connoisseur ---

SMODS.Joker{
	key = "spelljuggler_connoisseur",
	name = "Spelljuggler Connoisseur",
	rarity = 1,
	pos = {x = 24, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spelljuggler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spelljuggler_connoisseur"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spelljuggler_connoisseur"
SRL_MOD.modded_jokers_spelljuggler = {}
SRL_MOD.modded_jokers_spelljuggler[#SRL_MOD.modded_jokers_spelljuggler + 1] = "j_srl_spelljuggler_connoisseur"

--- Spelljuggler Instructor ---

SMODS.Joker{
	key = "spelljuggler_instructor",
	name = "Spelljuggler Instructor",
	rarity = 1,
	pos = {x = 25, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spelljuggler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spelljuggler_instructor"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spelljuggler_instructor"
SRL_MOD.modded_jokers_spelljuggler[#SRL_MOD.modded_jokers_spelljuggler + 1] = "j_srl_spelljuggler_instructor"

--- Spelljuggler Bedazzler ---

SMODS.Joker{
	key = "spelljuggler_bedazzler",
	name = "Spelljuggler Bedazzler",
	rarity = 1,
	pos = {x = 26, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spelljuggler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spelljuggler_bedazzler"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spelljuggler_bedazzler"
SRL_MOD.modded_jokers_spelljuggler[#SRL_MOD.modded_jokers_spelljuggler + 1] = "j_srl_spelljuggler_bedazzler"

--- Spelljuggler Conservator ---

SMODS.Joker{
	key = "spelljuggler_conservator",
	name = "Spelljuggler Conservator",
	rarity = 1,
	pos = {x = 27, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spelljuggler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spelljuggler_conservator"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spelljuggler_conservator"
SRL_MOD.modded_jokers_spelljuggler[#SRL_MOD.modded_jokers_spelljuggler + 1] = "j_srl_spelljuggler_conservator"

--- Spelljuggler Opportunist ---

SMODS.Joker{
	key = "spelljuggler_opportunist",
	name = "Spelljuggler Opportunist",
	rarity = 1,
	pos = {x = 28, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spelljuggler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spelljuggler_opportunist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spelljuggler_opportunist"
SRL_MOD.modded_jokers_spelljuggler[#SRL_MOD.modded_jokers_spelljuggler + 1] = "j_srl_spelljuggler_opportunist"

--- Spelljuggler Trapezist ---

SMODS.Joker{
	key = "spelljuggler_trapezist",
	name = "Spelljuggler Trapezist",
	rarity = 1,
	pos = {x = 29, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Spelljuggler"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spelljuggler_trapezist"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spelljuggler_trapezist"
SRL_MOD.modded_jokers_spelljuggler[#SRL_MOD.modded_jokers_spelljuggler + 1] = "j_srl_spelljuggler_trapezist"

--- Ol' Nog ---

SMODS.Joker{
	key = "ol_nog",
	name = "Ol' Nog",
	rarity = 1,
	pos = {x = 30, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ol_nog"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ol_nog"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_ol_nog"

--- Splitsoul ---

SMODS.Joker{
	key = "splitsoul",
	name = "Splitsoul",
	rarity = 1,
	pos = {x = 31, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_splitsoul"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_splitsoul"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_splitsoul"

--- Gemstone Trader ---

SMODS.Joker{
	key = "gemstone_trader",
	name = "Gemstone Trader",
	rarity = 1,
	pos = {x = 32, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gemstone_trader"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_gemstone_trader"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_gemstone_trader"

--- Jackal Swarm ---

SMODS.Joker{
	key = "jackal_swarm",
	name = "Jackal Swarm",
	rarity = 1,
	pos = {x = 33, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_jackal_swarm"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_jackal_swarm"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_jackal_swarm"

--- The End ---

SMODS.Joker{
	key = "the_end",
	name = "The End",
	rarity = 1,
	pos = {x = 34, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_the_end"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_the_end"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_the_end"

--- Fury Stormer ---

SMODS.Joker{
	key = "fury_stormer",
	name = "Fury Stormer",
	rarity = 1,
	pos = {x = 35, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_fury_stormer"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_fury_stormer"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_fury_stormer"

--- Soulwarper ---

SMODS.Joker{
	key = "soulwarper",
	name = "Soulwarper",
	rarity = 1,
	pos = {x = 36, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_soulwarper"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_soulwarper"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_soulwarper"

--- Spellsword ---

SMODS.Joker{
	key = "spellsword",
	name = "Spellsword",
	rarity = 1,
	pos = {x = 37, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_spellsword"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_spellsword"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_spellsword"

--- Snow Stalker ---

SMODS.Joker{
	key = "snow_stalker",
	name = "Snow Stalker",
	rarity = 1,
	pos = {x = 38, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_snow_stalker"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_snow_stalker"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_snow_stalker"

--- Celestial Scarapin ---

SMODS.Joker{
	key = "celestial_scarapin",
	name = "Celestial Scarapin",
	rarity = 1,
	pos = {x = 39, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_celestial_scarapin"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_celestial_scarapin"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_celestial_scarapin"

--- Doedoodle ---

SMODS.Joker{
	key = "doedoodle",
	name = "Doedoodle",
	rarity = 1,
	pos = {x = 40, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_doedoodle"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_doedoodle"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_doedoodle"

--- Calumnier Fop ---

SMODS.Joker{
	key = "calumnier_fop",
	name = "Calumnier Fop",
	rarity = 1,
	pos = {x = 41, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Calumnier"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_calumnier_fop"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_calumnier_fop"
SRL_MOD.modded_jokers_calumnier = {}
SRL_MOD.modded_jokers_calumnier[#SRL_MOD.modded_jokers_calumnier + 1] = "j_srl_calumnier_fop"

--- Calumnier Dandy ---

SMODS.Joker{
	key = "calumnier_dandy",
	name = "Calumnier Dandy",
	rarity = 1,
	pos = {x = 42, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Calumnier"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_calumnier_dandy"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_calumnier_dandy"
SRL_MOD.modded_jokers_calumnier[#SRL_MOD.modded_jokers_calumnier + 1] = "j_srl_calumnier_dandy"

--- Calumnier Socialite ---

SMODS.Joker{
	key = "calumnier_socialite",
	name = "Calumnier Socialite",
	rarity = 1,
	pos = {x = 43, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Calumnier"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_calumnier_socialite"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_calumnier_socialite"
SRL_MOD.modded_jokers_calumnier[#SRL_MOD.modded_jokers_calumnier + 1] = "j_srl_calumnier_socialite"

--- Calumnier Bete ---

SMODS.Joker{
	key = "calumnier_bete",
	name = "Calumnier Bete",
	rarity = 1,
	pos = {x = 44, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Calumnier"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_calumnier_bete"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_calumnier_bete"
SRL_MOD.modded_jokers_calumnier[#SRL_MOD.modded_jokers_calumnier + 1] = "j_srl_calumnier_bete"

--- Calumnier Belle ---

SMODS.Joker{
	key = "calumnier_belle",
	name = "Calumnier Belle",
	rarity = 1,
	pos = {x = 45, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Calumnier"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_calumnier_belle"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_calumnier_belle"
SRL_MOD.modded_jokers_calumnier[#SRL_MOD.modded_jokers_calumnier + 1] = "j_srl_calumnier_belle"

--- Calumnier Partycrasher ---

SMODS.Joker{
	key = "calumnier_partycrasher",
	name = "Calumnier Partycrasher",
	rarity = 1,
	pos = {x = 46, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Calumnier"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_calumnier_partycrasher"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_calumnier_partycrasher"
SRL_MOD.modded_jokers_calumnier[#SRL_MOD.modded_jokers_calumnier + 1] = "j_srl_calumnier_partycrasher"

--- Marionette Ballerina ---

SMODS.Joker{
	key = "marionette_ballerina",
	name = "Marionette Ballerina",
	rarity = 1,
	pos = {x = 47, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_ballerina"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_ballerina"
SRL_MOD.modded_jokers_marionette = {}
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_ballerina"

--- Marionette Charlatan ---

SMODS.Joker{
	key = "marionette_charlatan",
	name = "Marionette Charlatan",
	rarity = 1,
	pos = {x = 48, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_charlatan"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_charlatan"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_charlatan"

--- Marionette Demoiselle ---

SMODS.Joker{
	key = "marionette_demoiselle",
	name = "Marionette Demoiselle",
	rarity = 1,
	pos = {x = 49, y = 24},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_demoiselle"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_demoiselle"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_demoiselle"

--- Marionette Hypnotist ---

SMODS.Joker{
	key = "marionette_hypnotist",
	name = "Marionette Hypnotist",
	rarity = 1,
	pos = {x = 0, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_hypnotist"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_hypnotist"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_hypnotist"

--- Marionette Medium ---

SMODS.Joker{
	key = "marionette_medium",
	name = "Marionette Medium",
	rarity = 1,
	pos = {x = 1, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_medium"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_medium"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_medium"

--- Marionette Primadonna ---

SMODS.Joker{
	key = "marionette_primadonna",
	name = "Marionette Primadonna",
	rarity = 1,
	pos = {x = 2, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_primadonna"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_primadonna"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_primadonna"

--- Marionette Harlequin ---

SMODS.Joker{
	key = "marionette_harlequin",
	name = "Marionette Harlequin",
	rarity = 1,
	pos = {x = 3, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_harlequin"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_harlequin"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_harlequin"

--- Marionette Virtuoso ---

SMODS.Joker{
	key = "marionette_virtuoso",
	name = "Marionette Virtuoso",
	rarity = 1,
	pos = {x = 4, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_virtuoso"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_virtuoso"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_virtuoso"

--- Mimpling ---

SMODS.Joker{
	key = "mimpling",
	name = "Mimpling",
	rarity = 1,
	pos = {x = 5, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mimpling"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mimpling"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_mimpling"

--- Genetic Anomaly ---

SMODS.Joker{
	key = "genetic_anomaly",
	name = "Genetic Anomaly",
	rarity = 1,
	pos = {x = 6, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_genetic_anomaly"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_genetic_anomaly"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_genetic_anomaly"

--- Mythicant Chromis ---

SMODS.Joker{
	key = "mythicant_chromis",
	name = "Mythicant Chromis",
	rarity = 1,
	pos = {x = 7, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mythicant"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mythicant_chromis"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mythicant_chromis"
SRL_MOD.modded_jokers_mythicant[#SRL_MOD.modded_jokers_mythicant + 1] = "j_srl_mythicant_chromis"

--- Uralos Warchief ---

SMODS.Joker{
	key = "uralos_warchief",
	name = "Uralos Warchief",
	rarity = 1,
	pos = {x = 8, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Uralos"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_uralos_warchief"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_uralos_warchief"
SRL_MOD.modded_jokers_uralos[#SRL_MOD.modded_jokers_uralos + 1] = "j_srl_uralos_warchief"

--- Plains Felkat ---

SMODS.Joker{
	key = "plains_felkat",
	name = "Plains Felkat",
	rarity = 1,
	pos = {x = 9, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_plains_felkat"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_plains_felkat"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_plains_felkat"

--- Dust Fairy ---

SMODS.Joker{
	key = "dust_fairy",
	name = "Dust Fairy",
	rarity = 1,
	pos = {x = 10, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dust_fairy"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_dust_fairy"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_dust_fairy"

--- One-Punch Snowman ---

SMODS.Joker{
	key = "onepunch_snowman",
	name = "One-Punch Snowman",
	rarity = 1,
	pos = {x = 11, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_onepunch_snowman"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_onepunch_snowman"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_onepunch_snowman"

--- Miracle Spider ---

SMODS.Joker{
	key = "miracle_spider",
	name = "Miracle Spider",
	rarity = 1,
	pos = {x = 12, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_miracle_spider"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_miracle_spider"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_miracle_spider"

--- Brockiosaurus ---

SMODS.Joker{
	key = "brockiosaurus",
	name = "Brockiosaurus",
	rarity = 1,
	pos = {x = 13, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_brockiosaurus"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_brockiosaurus"
SRL_MOD.modded_jokers_elementasaur = {}
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_brockiosaurus"

--- Thunder-Rex ---

SMODS.Joker{
	key = "thunderrex",
	name = "Thunder-Rex",
	rarity = 1,
	pos = {x = 14, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_thunderrex"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_thunderrex"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_thunderrex"

--- Triflaratops ---

SMODS.Joker{
	key = "triflaratops",
	name = "Triflaratops",
	rarity = 1,
	pos = {x = 15, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_triflaratops"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_triflaratops"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_triflaratops"

--- Veliceoraptor ---

SMODS.Joker{
	key = "veliceoraptor",
	name = "Veliceoraptor",
	rarity = 1,
	pos = {x = 16, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_veliceoraptor"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_veliceoraptor"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_veliceoraptor"

--- Vinosaurus ---

SMODS.Joker{
	key = "vinosaurus",
	name = "Vinosaurus",
	rarity = 1,
	pos = {x = 17, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_vinosaurus"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_vinosaurus"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_vinosaurus"

--- Windactyl ---

SMODS.Joker{
	key = "windactyl",
	name = "Windactyl",
	rarity = 1,
	pos = {x = 18, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_windactyl"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_windactyl"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_windactyl"

--- Ancloudysaur ---

SMODS.Joker{
	key = "ancloudysaur",
	name = "Ancloudysaur",
	rarity = 1,
	pos = {x = 19, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ancloudysaur"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_ancloudysaur"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_ancloudysaur"

--- Melishell ---

SMODS.Joker{
	key = "melishell",
	name = "Melishell",
	rarity = 1,
	pos = {x = 20, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_melishell"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_melishell"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_melishell"

--- Zarnox ---

SMODS.Joker{
	key = "zarnox",
	name = "Zarnox",
	rarity = 1,
	pos = {x = 21, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Robodomi"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zarnox"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_zarnox"
SRL_MOD.modded_jokers_robodomi = {}
SRL_MOD.modded_jokers_robodomi[#SRL_MOD.modded_jokers_robodomi + 1] = "j_srl_zarnox"

--- Blipzor ---

SMODS.Joker{
	key = "blipzor",
	name = "Blipzor",
	rarity = 1,
	pos = {x = 22, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Robodomi"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_blipzor"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_blipzor"
SRL_MOD.modded_jokers_robodomi[#SRL_MOD.modded_jokers_robodomi + 1] = "j_srl_blipzor"

--- Grivix ---

SMODS.Joker{
	key = "grivix",
	name = "Grivix",
	rarity = 1,
	pos = {x = 23, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Robodomi"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_grivix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_grivix"
SRL_MOD.modded_jokers_robodomi[#SRL_MOD.modded_jokers_robodomi + 1] = "j_srl_grivix"

--- Klyptar ---

SMODS.Joker{
	key = "klyptar",
	name = "Klyptar",
	rarity = 1,
	pos = {x = 24, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Robodomi"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_klyptar"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_klyptar"
SRL_MOD.modded_jokers_robodomi[#SRL_MOD.modded_jokers_robodomi + 1] = "j_srl_klyptar"

--- Mechto ---

SMODS.Joker{
	key = "mechto",
	name = "Mechto",
	rarity = 1,
	pos = {x = 25, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Robodomi"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mechto"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mechto"
SRL_MOD.modded_jokers_robodomi[#SRL_MOD.modded_jokers_robodomi + 1] = "j_srl_mechto"

--- Zyphra ---

SMODS.Joker{
	key = "zyphra",
	name = "Zyphra",
	rarity = 1,
	pos = {x = 26, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Robodomi"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zyphra"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_zyphra"
SRL_MOD.modded_jokers_robodomi[#SRL_MOD.modded_jokers_robodomi + 1] = "j_srl_zyphra"

--- Zeuschund ---

SMODS.Joker{
	key = "zeuschund",
	name = "Zeuschund",
	rarity = 1,
	pos = {x = 27, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_zeuschund"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_zeuschund"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_zeuschund"

--- Underdweller Rot-thief ---

SMODS.Joker{
	key = "underdweller_rotthief",
	name = "Underdweller Rot-thief",
	rarity = 1,
	pos = {x = 28, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Underdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_underdweller_rotthief"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_underdweller_rotthief"
SRL_MOD.modded_jokers_underdweller = {}
SRL_MOD.modded_jokers_underdweller[#SRL_MOD.modded_jokers_underdweller + 1] = "j_srl_underdweller_rotthief"

--- Underdweller Hexblade ---

SMODS.Joker{
	key = "underdweller_hexblade",
	name = "Underdweller Hexblade",
	rarity = 1,
	pos = {x = 29, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Underdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_underdweller_hexblade"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_underdweller_hexblade"
SRL_MOD.modded_jokers_underdweller[#SRL_MOD.modded_jokers_underdweller + 1] = "j_srl_underdweller_hexblade"

--- Underdweller Mischiefmaker ---

SMODS.Joker{
	key = "underdweller_mischiefmaker",
	name = "Underdweller Mischiefmaker",
	rarity = 1,
	pos = {x = 30, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Underdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_underdweller_mischiefmaker"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_underdweller_mischiefmaker"
SRL_MOD.modded_jokers_underdweller[#SRL_MOD.modded_jokers_underdweller + 1] = "j_srl_underdweller_mischiefmaker"

--- Underdweller Ripper ---

SMODS.Joker{
	key = "underdweller_ripper",
	name = "Underdweller Ripper",
	rarity = 1,
	pos = {x = 31, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Underdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_underdweller_ripper"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_underdweller_ripper"
SRL_MOD.modded_jokers_underdweller[#SRL_MOD.modded_jokers_underdweller + 1] = "j_srl_underdweller_ripper"

--- Underdweller Ritesmaster ---

SMODS.Joker{
	key = "underdweller_ritesmaster",
	name = "Underdweller Ritesmaster",
	rarity = 1,
	pos = {x = 32, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Underdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_underdweller_ritesmaster"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_underdweller_ritesmaster"
SRL_MOD.modded_jokers_underdweller[#SRL_MOD.modded_jokers_underdweller + 1] = "j_srl_underdweller_ritesmaster"

--- Underdweller Fearmonger ---

SMODS.Joker{
	key = "underdweller_fearmonger",
	name = "Underdweller Fearmonger",
	rarity = 1,
	pos = {x = 33, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Underdweller"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_underdweller_fearmonger"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_underdweller_fearmonger"
SRL_MOD.modded_jokers_underdweller[#SRL_MOD.modded_jokers_underdweller + 1] = "j_srl_underdweller_fearmonger"

--- Sky Cataclysm ---

SMODS.Joker{
	key = "sky_cataclysm",
	name = "Sky Cataclysm",
	rarity = 1,
	pos = {x = 34, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sky_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_sky_cataclysm"
SRL_MOD.modded_jokers_cataclysm = {}
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_sky_cataclysm"

--- Volcanic Cataclysm ---

SMODS.Joker{
	key = "volcanic_cataclysm",
	name = "Volcanic Cataclysm",
	rarity = 1,
	pos = {x = 35, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_volcanic_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_volcanic_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_volcanic_cataclysm"

--- Oceanic Cataclysm ---

SMODS.Joker{
	key = "oceanic_cataclysm",
	name = "Oceanic Cataclysm",
	rarity = 1,
	pos = {x = 36, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_oceanic_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_oceanic_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_oceanic_cataclysm"

--- Storm Cataclysm ---

SMODS.Joker{
	key = "storm_cataclysm",
	name = "Storm Cataclysm",
	rarity = 1,
	pos = {x = 37, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_storm_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_storm_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_storm_cataclysm"

--- Terra Cataclysm ---

SMODS.Joker{
	key = "terra_cataclysm",
	name = "Terra Cataclysm",
	rarity = 1,
	pos = {x = 38, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_terra_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_terra_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_terra_cataclysm"

--- Glacial Cataclysm ---

SMODS.Joker{
	key = "glacial_cataclysm",
	name = "Glacial Cataclysm",
	rarity = 1,
	pos = {x = 39, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_glacial_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_glacial_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_glacial_cataclysm"

--- Pandemic Cataclysm ---

SMODS.Joker{
	key = "pandemic_cataclysm",
	name = "Pandemic Cataclysm",
	rarity = 1,
	pos = {x = 40, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pandemic_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_pandemic_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_pandemic_cataclysm"

--- Explosive Cataclysm ---

SMODS.Joker{
	key = "explosive_cataclysm",
	name = "Explosive Cataclysm",
	rarity = 1,
	pos = {x = 41, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_explosive_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_explosive_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_explosive_cataclysm"

--- Almighty Cataclysm ---

SMODS.Joker{
	key = "almighty_cataclysm",
	name = "Almighty Cataclysm",
	rarity = 1,
	pos = {x = 42, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_almighty_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_almighty_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_almighty_cataclysm"

--- Nuclear Cataclysm ---

SMODS.Joker{
	key = "nuclear_cataclysm",
	name = "Nuclear Cataclysm",
	rarity = 1,
	pos = {x = 43, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nuclear_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_nuclear_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_nuclear_cataclysm"

--- Cosmic Cataclysm ---

SMODS.Joker{
	key = "cosmic_cataclysm",
	name = "Cosmic Cataclysm",
	rarity = 1,
	pos = {x = 44, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Cataclysm"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cosmic_cataclysm"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_cosmic_cataclysm"
SRL_MOD.modded_jokers_cataclysm[#SRL_MOD.modded_jokers_cataclysm + 1] = "j_srl_cosmic_cataclysm"

--- Iron Maiden ---

SMODS.Joker{
	key = "iron_maiden",
	name = "Iron Maiden",
	rarity = 1,
	pos = {x = 45, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_iron_maiden"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_iron_maiden"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_iron_maiden"

--- Mireling Striker ---

SMODS.Joker{
	key = "mireling_striker",
	name = "Mireling Striker",
	rarity = 1,
	pos = {x = 46, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Mireling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mireling_striker"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_mireling_striker"
SRL_MOD.modded_jokers_mireling = {}
SRL_MOD.modded_jokers_mireling[#SRL_MOD.modded_jokers_mireling + 1] = "j_srl_mireling_striker"

--- Mireling Corruptor ---

SMODS.Joker{
	key = "mireling_corruptor",
	name = "Mireling Corruptor",
	rarity = 1,
	pos = {x = 47, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Mireling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mireling_corruptor"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_mireling_corruptor"
SRL_MOD.modded_jokers_mireling[#SRL_MOD.modded_jokers_mireling + 1] = "j_srl_mireling_corruptor"

--- Mireling Arbitrator ---

SMODS.Joker{
	key = "mireling_arbitrator",
	name = "Mireling Arbitrator",
	rarity = 1,
	pos = {x = 48, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Mireling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mireling_arbitrator"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_mireling_arbitrator"
SRL_MOD.modded_jokers_mireling[#SRL_MOD.modded_jokers_mireling + 1] = "j_srl_mireling_arbitrator"

--- Mireling Dart Frog ---

SMODS.Joker{
	key = "mireling_dart_frog",
	name = "Mireling Dart Frog",
	rarity = 1,
	pos = {x = 49, y = 25},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Mireling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mireling_dart_frog"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_mireling_dart_frog"
SRL_MOD.modded_jokers_mireling[#SRL_MOD.modded_jokers_mireling + 1] = "j_srl_mireling_dart_frog"

--- Mireling Spellscatterer ---

SMODS.Joker{
	key = "mireling_spellscatterer",
	name = "Mireling Spellscatterer",
	rarity = 1,
	pos = {x = 0, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mireling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_mireling_spellscatterer"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_mireling_spellscatterer"
SRL_MOD.modded_jokers_mireling[#SRL_MOD.modded_jokers_mireling + 1] = "j_srl_mireling_spellscatterer"

--- Kaleido-toad ---

SMODS.Joker{
	key = "kaleidotoad",
	name = "Kaleido-toad",
	rarity = 1,
	pos = {x = 1, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Mireling"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kaleidotoad"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_kaleidotoad"
SRL_MOD.modded_jokers_mireling[#SRL_MOD.modded_jokers_mireling + 1] = "j_srl_kaleidotoad"

--- Wacky Burger ---

SMODS.Joker{
	key = "wacky_burger",
	name = "Wacky Burger",
	rarity = 1,
	pos = {x = 2, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_wacky_burger"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_wacky_burger"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_wacky_burger"

--- Dozen of Rot ---

SMODS.Joker{
	key = "dozen_of_rot",
	name = "Dozen of Rot",
	rarity = 1,
	pos = {x = 3, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dozen_of_rot"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_dozen_of_rot"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_dozen_of_rot"

--- Ripper ---

SMODS.Joker{
	key = "ripper",
	name = "Ripper",
	rarity = 1,
	pos = {x = 4, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ripper"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_ripper"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_ripper"

--- Jack o' Lantern ---

SMODS.Joker{
	key = "jack_o_lantern",
	name = "Jack o' Lantern",
	rarity = 1,
	pos = {x = 5, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_jack_o_lantern"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_jack_o_lantern"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_jack_o_lantern"

--- Nightmare ---

SMODS.Joker{
	key = "nightmare",
	name = "Nightmare",
	rarity = 1,
	pos = {x = 6, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_nightmare"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_nightmare"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_nightmare"

--- Toadstool ---

SMODS.Joker{
	key = "toadstool",
	name = "Toadstool",
	rarity = 1,
	pos = {x = 7, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_toadstool"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_toadstool"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_toadstool"

--- Syringe ---

SMODS.Joker{
	key = "syringe",
	name = "Syringe",
	rarity = 1,
	pos = {x = 8, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_syringe"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_syringe"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_syringe"

--- Ouroboros ---

SMODS.Joker{
	key = "ouroboros",
	name = "Ouroboros",
	rarity = 1,
	pos = {x = 9, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_ouroboros"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_ouroboros"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_ouroboros"

--- Dollface ---

SMODS.Joker{
	key = "dollface",
	name = "Dollface",
	rarity = 1,
	pos = {x = 10, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dollface"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_dollface"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_dollface"

--- Frosty Freezy ---

SMODS.Joker{
	key = "frosty_freezy",
	name = "Frosty Freezy",
	rarity = 1,
	pos = {x = 11, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_frosty_freezy"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_frosty_freezy"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_frosty_freezy"

--- Bomballoon ---

SMODS.Joker{
	key = "bomballoon",
	name = "Bomballoon",
	rarity = 1,
	pos = {x = 12, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bomballoon"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_bomballoon"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_bomballoon"

--- Dr. Concocto ---

SMODS.Joker{
	key = "dr_concocto",
	name = "Dr. Concocto",
	rarity = 1,
	pos = {x = 13, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_dr_concocto"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_dr_concocto"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_dr_concocto"

--- The Heap ---

SMODS.Joker{
	key = "the_heap",
	name = "The Heap",
	rarity = 1,
	pos = {x = 14, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_the_heap"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_the_heap"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_the_heap"

--- Sir Roquefort ---

SMODS.Joker{
	key = "sir_roquefort",
	name = "Sir Roquefort",
	rarity = 1,
	pos = {x = 15, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sir_roquefort"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_sir_roquefort"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_sir_roquefort"

--- Phenominal Possum ---

SMODS.Joker{
	key = "phenominal_possum",
	name = "Phenominal Possum",
	rarity = 1,
	pos = {x = 16, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_phenominal_possum"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_phenominal_possum"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_phenominal_possum"

--- Jack Frost ---

SMODS.Joker{
	key = "jack_frost",
	name = "Jack Frost",
	rarity = 1,
	pos = {x = 17, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_jack_frost"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_jack_frost"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_jack_frost"

--- Chatter ---

SMODS.Joker{
	key = "chatter",
	name = "Chatter",
	rarity = 1,
	pos = {x = 18, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chatter"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_chatter"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_chatter"

--- Junkyard ---

SMODS.Joker{
	key = "junkyard",
	name = "Junkyard",
	rarity = 1,
	pos = {x = 19, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_junkyard"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_junkyard"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_junkyard"

--- Bad Apple ---

SMODS.Joker{
	key = "bad_apple",
	name = "Bad Apple",
	rarity = 1,
	pos = {x = 20, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bad_apple"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_bad_apple"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_bad_apple"

--- Furious Frank ---

SMODS.Joker{
	key = "furious_frank",
	name = "Furious Frank",
	rarity = 1,
	pos = {x = 21, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_furious_frank"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_furious_frank"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_furious_frank"

--- Sculpt ---

SMODS.Joker{
	key = "sculpt",
	name = "Sculpt",
	rarity = 1,
	pos = {x = 22, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_sculpt"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_sculpt"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_sculpt"

--- Benthic Guardian ---

SMODS.Joker{
	key = "benthic_guardian",
	name = "Benthic Guardian",
	rarity = 1,
	pos = {x = 23, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Guardian"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_benthic_guardian"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_benthic_guardian"
SRL_MOD.modded_jokers_guardian = {}
SRL_MOD.modded_jokers_guardian[#SRL_MOD.modded_jokers_guardian + 1] = "j_srl_benthic_guardian"

--- Chronoshatter Wyrm ---

SMODS.Joker{
	key = "chronoshatter_wyrm",
	name = "Chronoshatter Wyrm",
	rarity = 1,
	pos = {x = 24, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_chronoshatter_wyrm"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_chronoshatter_wyrm"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_chronoshatter_wyrm"

--- Slash Shifter ---

SMODS.Joker{
	key = "slash_shifter",
	name = "Slash Shifter",
	rarity = 1,
	pos = {x = 25, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_slash_shifter"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_slash_shifter"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_slash_shifter"

--- Gravebound Eidolon ---

SMODS.Joker{
	key = "gravebound_eidolon",
	name = "Gravebound Eidolon",
	rarity = 1,
	pos = {x = 26, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_gravebound_eidolon"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_gravebound_eidolon"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_gravebound_eidolon"

--- Holyguanodon ---

SMODS.Joker{
	key = "holyguanodon",
	name = "Holyguanodon",
	rarity = 1,
	pos = {x = 27, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_holyguanodon"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_holyguanodon"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_holyguanodon"

--- Darknonychus ---

SMODS.Joker{
	key = "darknonychus",
	name = "Darknonychus",
	rarity = 1,
	pos = {x = 28, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Elementasaur"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_darknonychus"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_darknonychus"
SRL_MOD.modded_jokers_elementasaur[#SRL_MOD.modded_jokers_elementasaur + 1] = "j_srl_darknonychus"

--- Marionette Evangelist ---

SMODS.Joker{
	key = "marionette_evangelist",
	name = "Marionette Evangelist",
	rarity = 1,
	pos = {x = 29, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Marionette"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_marionette_evangelist"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_marionette_evangelist"
SRL_MOD.modded_jokers_marionette[#SRL_MOD.modded_jokers_marionette + 1] = "j_srl_marionette_evangelist"

--- Draconic Strix ---

SMODS.Joker{
	key = "draconic_strix",
	name = "Draconic Strix",
	rarity = 1,
	pos = {x = 30, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_draconic_strix"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_draconic_strix"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_draconic_strix"

--- Prismagician ---

SMODS.Joker{
	key = "prismagician",
	name = "Prismagician",
	rarity = 1,
	pos = {x = 31, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_prismagician"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_prismagician"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_prismagician"

--- Tormented Bunny ---

SMODS.Joker{
	key = "tormented_bunny",
	name = "Tormented Bunny",
	rarity = 1,
	pos = {x = 32, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tormented_bunny"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_tormented_bunny"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_tormented_bunny"

--- Elegant Denizen ---

SMODS.Joker{
	key = "elegant_denizen",
	name = "Elegant Denizen",
	rarity = 1,
	pos = {x = 33, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Denizen"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_elegant_denizen"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_elegant_denizen"
SRL_MOD.modded_jokers_denizen = {}
SRL_MOD.modded_jokers_denizen[#SRL_MOD.modded_jokers_denizen + 1] = "j_srl_elegant_denizen"

--- Pearlescent Denizen ---

SMODS.Joker{
	key = "pearlescent_denizen",
	name = "Pearlescent Denizen",
	rarity = 1,
	pos = {x = 34, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Denizen"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_pearlescent_denizen"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_pearlescent_denizen"
SRL_MOD.modded_jokers_denizen[#SRL_MOD.modded_jokers_denizen + 1] = "j_srl_pearlescent_denizen"

--- Melodic Denizen ---

SMODS.Joker{
	key = "melodic_denizen",
	name = "Melodic Denizen",
	rarity = 1,
	pos = {x = 35, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Denizen"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_melodic_denizen"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_melodic_denizen"
SRL_MOD.modded_jokers_denizen[#SRL_MOD.modded_jokers_denizen + 1] = "j_srl_melodic_denizen"

--- Operatic Denizen ---

SMODS.Joker{
	key = "operatic_denizen",
	name = "Operatic Denizen",
	rarity = 1,
	pos = {x = 36, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Denizen"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_operatic_denizen"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_operatic_denizen"
SRL_MOD.modded_jokers_denizen[#SRL_MOD.modded_jokers_denizen + 1] = "j_srl_operatic_denizen"

--- Denizen Gemini ---

SMODS.Joker{
	key = "denizen_gemini",
	name = "Denizen Gemini",
	rarity = 1,
	pos = {x = 37, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Denizen"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_denizen_gemini"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_denizen_gemini"
SRL_MOD.modded_jokers_denizen[#SRL_MOD.modded_jokers_denizen + 1] = "j_srl_denizen_gemini"

--- Tipsy Denizen ---

SMODS.Joker{
	key = "tipsy_denizen",
	name = "Tipsy Denizen",
	rarity = 1,
	pos = {x = 38, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Denizen"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_tipsy_denizen"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_tipsy_denizen"
SRL_MOD.modded_jokers_denizen[#SRL_MOD.modded_jokers_denizen + 1] = "j_srl_tipsy_denizen"

--- Copycat ---

SMODS.Joker{
	key = "copycat",
	name = "Copycat",
	rarity = 1,
	pos = {x = 39, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_copycat"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_copycat"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_copycat"

--- Cootie ---

SMODS.Joker{
	key = "cootie",
	name = "Cootie",
	rarity = 1,
	pos = {x = 40, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_cootie"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_cootie"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_cootie"

--- Lunaris ---

SMODS.Joker{
	key = "lunaris",
	name = "Lunaris",
	rarity = 1,
	pos = {x = 41, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_lunaris"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_lunaris"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_lunaris"

--- Solaris ---

SMODS.Joker{
	key = "solaris",
	name = "Solaris",
	rarity = 1,
	pos = {x = 42, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Life", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_solaris"
SRL_MOD.modded_jokers_life[#SRL_MOD.modded_jokers_life + 1] = "j_srl_solaris"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_solaris"

--- Clingslime ---

SMODS.Joker{
	key = "clingslime",
	name = "Clingslime",
	rarity = 1,
	pos = {x = 43, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_clingslime"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_clingslime"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_clingslime"

--- Eye of the Gorgon ---

SMODS.Joker{
	key = "eye_of_the_gorgon",
	name = "Eye of the Gorgon",
	rarity = 1,
	pos = {x = 44, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_eye_of_the_gorgon"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_eye_of_the_gorgon"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_eye_of_the_gorgon"

--- Hot Lips ---

SMODS.Joker{
	key = "hot_lips",
	name = "Hot Lips",
	rarity = 1,
	pos = {x = 45, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Chaos", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_hot_lips"
SRL_MOD.modded_jokers_chaos[#SRL_MOD.modded_jokers_chaos + 1] = "j_srl_hot_lips"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_hot_lips"

--- Megalodon ---

SMODS.Joker{
	key = "megalodon",
	name = "Megalodon",
	rarity = 1,
	pos = {x = 46, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_megalodon"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_megalodon"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_megalodon"

--- I Scream Man ---

SMODS.Joker{
	key = "i_scream_man",
	name = "I Scream Man",
	rarity = 1,
	pos = {x = 47, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_i_scream_man"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_i_scream_man"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_i_scream_man"

--- Swarmed Hive ---

SMODS.Joker{
	key = "swarmed_hive",
	name = "Swarmed Hive",
	rarity = 1,
	pos = {x = 48, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_swarmed_hive"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_swarmed_hive"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_swarmed_hive"

--- King Croak ---

SMODS.Joker{
	key = "king_croak",
	name = "King Croak",
	rarity = 1,
	pos = {x = 49, y = 26},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_king_croak"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_king_croak"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_king_croak"

--- Haunting Glass ---

SMODS.Joker{
	key = "haunting_glass",
	name = "Haunting Glass",
	rarity = 1,
	pos = {x = 0, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_haunting_glass"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_haunting_glass"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_haunting_glass"

--- Kegstruct ---

SMODS.Joker{
	key = "kegstruct",
	name = "Kegstruct",
	rarity = 1,
	pos = {x = 1, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Sorcery", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_kegstruct"
SRL_MOD.modded_jokers_sorcery[#SRL_MOD.modded_jokers_sorcery + 1] = "j_srl_kegstruct"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_kegstruct"

--- Bane of Piety ---

SMODS.Joker{
	key = "bane_of_piety",
	name = "Bane of Piety",
	rarity = 1,
	pos = {x = 2, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_bane_of_piety"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_bane_of_piety"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_bane_of_piety"

--- Critical Mass ---

SMODS.Joker{
	key = "critical_mass",
	name = "Critical Mass",
	rarity = 1,
	pos = {x = 3, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_critical_mass"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_critical_mass"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_critical_mass"

--- Weapons Dealer ---

SMODS.Joker{
	key = "weapons_dealer",
	name = "Weapons Dealer",
	rarity = 1,
	pos = {x = 4, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_weapons_dealer"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_weapons_dealer"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_weapons_dealer"

--- Parasitic Copycat ---

SMODS.Joker{
	key = "parasitic_copycat",
	name = "Parasitic Copycat",
	rarity = 1,
	pos = {x = 5, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Death", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_parasitic_copycat"
SRL_MOD.modded_jokers_death[#SRL_MOD.modded_jokers_death + 1] = "j_srl_parasitic_copycat"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_parasitic_copycat"

--- Training Dummy ---

SMODS.Joker{
	key = "training_dummy",
	name = "Training Dummy",
	rarity = 1,
	pos = {x = 6, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_training_dummy"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_training_dummy"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_training_dummy"

--- Loki ---

SMODS.Joker{
	key = "loki",
	name = "Loki",
	rarity = 1,
	pos = {x = 7, y = 27},
	cost = 4,
	config = {extra = {srl_class = "Nature", srl_race = "Exotic"}},
	loc_vars = function(self, info_queue, card)
		return {vars = {self.name, SRL_FUNC.get_class(card), card.ability.extra.srl_race, colours = {SRL_FUNC.get_class_color(SRL_FUNC.get_class(card))},
		}}
	end,
	calculate = function(self, card, context)

	end,
	in_pool = function()
		return true
	end,
	atlas = "srl_jokers"
}

SRL_MOD.modded_jokers[#SRL_MOD.modded_jokers + 1] = "j_srl_loki"
SRL_MOD.modded_jokers_nature[#SRL_MOD.modded_jokers_nature + 1] = "j_srl_loki"
SRL_MOD.modded_jokers_exotic[#SRL_MOD.modded_jokers_exotic + 1] = "j_srl_loki"